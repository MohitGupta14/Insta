{"ast":null,"code":"/*!\n * Copyright (c) 2015, Salesforce.com, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of Salesforce.com nor the names of its contributors may\n * be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n'use strict';\n\nvar net = require('net');\nvar urlParse = require('url').parse;\nvar pubsuffix = require('./pubsuffix');\nvar Store = require('./store').Store;\nvar MemoryCookieStore = require('./memstore').MemoryCookieStore;\nvar pathMatch = require('./pathMatch').pathMatch;\nvar VERSION = require('../package.json').version;\nvar punycode;\ntry {\n  punycode = require('punycode');\n} catch (e) {\n  console.warn(\"cookie: can't load punycode; won't use punycode for domain normalization\");\n}\n\n// From RFC6265 S4.1.1\n// note that it excludes \\x3B \";\"\nvar COOKIE_OCTETS = /^[\\x21\\x23-\\x2B\\x2D-\\x3A\\x3C-\\x5B\\x5D-\\x7E]+$/;\nvar CONTROL_CHARS = /[\\x00-\\x1F]/;\n\n// From Chromium // '\\r', '\\n' and '\\0' should be treated as a terminator in\n// the \"relaxed\" mode, see:\n// https://github.com/ChromiumWebApps/chromium/blob/b3d3b4da8bb94c1b2e061600df106d590fda3620/net/cookies/parsed_cookie.cc#L60\nvar TERMINATORS = ['\\n', '\\r', '\\0'];\n\n// RFC6265 S4.1.1 defines path value as 'any CHAR except CTLs or \";\"'\n// Note ';' is \\x3B\nvar PATH_VALUE = /[\\x20-\\x3A\\x3C-\\x7E]+/;\n\n// date-time parsing constants (RFC6265 S5.1.1)\n\nvar DATE_DELIM = /[\\x09\\x20-\\x2F\\x3B-\\x40\\x5B-\\x60\\x7B-\\x7E]/;\nvar MONTH_TO_NUM = {\n  jan: 0,\n  feb: 1,\n  mar: 2,\n  apr: 3,\n  may: 4,\n  jun: 5,\n  jul: 6,\n  aug: 7,\n  sep: 8,\n  oct: 9,\n  nov: 10,\n  dec: 11\n};\nvar NUM_TO_MONTH = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\nvar NUM_TO_DAY = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nvar MAX_TIME = 2147483647000; // 31-bit max\nvar MIN_TIME = 0; // 31-bit min\n\n/*\n * Parses a Natural number (i.e., non-negative integer) with either the\n *    <min>*<max>DIGIT ( non-digit *OCTET )\n * or\n *    <min>*<max>DIGIT\n * grammar (RFC6265 S5.1.1).\n *\n * The \"trailingOK\" boolean controls if the grammar accepts a\n * \"( non-digit *OCTET )\" trailer.\n */\nfunction parseDigits(token, minDigits, maxDigits, trailingOK) {\n  var count = 0;\n  while (count < token.length) {\n    var c = token.charCodeAt(count);\n    // \"non-digit = %x00-2F / %x3A-FF\"\n    if (c <= 0x2F || c >= 0x3A) {\n      break;\n    }\n    count++;\n  }\n\n  // constrain to a minimum and maximum number of digits.\n  if (count < minDigits || count > maxDigits) {\n    return null;\n  }\n  if (!trailingOK && count != token.length) {\n    return null;\n  }\n  return parseInt(token.substr(0, count), 10);\n}\nfunction parseTime(token) {\n  var parts = token.split(':');\n  var result = [0, 0, 0];\n\n  /* RF6256 S5.1.1:\n   *      time            = hms-time ( non-digit *OCTET )\n   *      hms-time        = time-field \":\" time-field \":\" time-field\n   *      time-field      = 1*2DIGIT\n   */\n\n  if (parts.length !== 3) {\n    return null;\n  }\n  for (var i = 0; i < 3; i++) {\n    // \"time-field\" must be strictly \"1*2DIGIT\", HOWEVER, \"hms-time\" can be\n    // followed by \"( non-digit *OCTET )\" so therefore the last time-field can\n    // have a trailer\n    var trailingOK = i == 2;\n    var num = parseDigits(parts[i], 1, 2, trailingOK);\n    if (num === null) {\n      return null;\n    }\n    result[i] = num;\n  }\n  return result;\n}\nfunction parseMonth(token) {\n  token = String(token).substr(0, 3).toLowerCase();\n  var num = MONTH_TO_NUM[token];\n  return num >= 0 ? num : null;\n}\n\n/*\n * RFC6265 S5.1.1 date parser (see RFC for full grammar)\n */\nfunction parseDate(str) {\n  if (!str) {\n    return;\n  }\n\n  /* RFC6265 S5.1.1:\n   * 2. Process each date-token sequentially in the order the date-tokens\n   * appear in the cookie-date\n   */\n  var tokens = str.split(DATE_DELIM);\n  if (!tokens) {\n    return;\n  }\n  var hour = null;\n  var minute = null;\n  var second = null;\n  var dayOfMonth = null;\n  var month = null;\n  var year = null;\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i].trim();\n    if (!token.length) {\n      continue;\n    }\n    var result;\n\n    /* 2.1. If the found-time flag is not set and the token matches the time\n     * production, set the found-time flag and set the hour- value,\n     * minute-value, and second-value to the numbers denoted by the digits in\n     * the date-token, respectively.  Skip the remaining sub-steps and continue\n     * to the next date-token.\n     */\n    if (second === null) {\n      result = parseTime(token);\n      if (result) {\n        hour = result[0];\n        minute = result[1];\n        second = result[2];\n        continue;\n      }\n    }\n\n    /* 2.2. If the found-day-of-month flag is not set and the date-token matches\n     * the day-of-month production, set the found-day-of- month flag and set\n     * the day-of-month-value to the number denoted by the date-token.  Skip\n     * the remaining sub-steps and continue to the next date-token.\n     */\n    if (dayOfMonth === null) {\n      // \"day-of-month = 1*2DIGIT ( non-digit *OCTET )\"\n      result = parseDigits(token, 1, 2, true);\n      if (result !== null) {\n        dayOfMonth = result;\n        continue;\n      }\n    }\n\n    /* 2.3. If the found-month flag is not set and the date-token matches the\n     * month production, set the found-month flag and set the month-value to\n     * the month denoted by the date-token.  Skip the remaining sub-steps and\n     * continue to the next date-token.\n     */\n    if (month === null) {\n      result = parseMonth(token);\n      if (result !== null) {\n        month = result;\n        continue;\n      }\n    }\n\n    /* 2.4. If the found-year flag is not set and the date-token matches the\n     * year production, set the found-year flag and set the year-value to the\n     * number denoted by the date-token.  Skip the remaining sub-steps and\n     * continue to the next date-token.\n     */\n    if (year === null) {\n      // \"year = 2*4DIGIT ( non-digit *OCTET )\"\n      result = parseDigits(token, 2, 4, true);\n      if (result !== null) {\n        year = result;\n        /* From S5.1.1:\n         * 3.  If the year-value is greater than or equal to 70 and less\n         * than or equal to 99, increment the year-value by 1900.\n         * 4.  If the year-value is greater than or equal to 0 and less\n         * than or equal to 69, increment the year-value by 2000.\n         */\n        if (year >= 70 && year <= 99) {\n          year += 1900;\n        } else if (year >= 0 && year <= 69) {\n          year += 2000;\n        }\n      }\n    }\n  }\n\n  /* RFC 6265 S5.1.1\n   * \"5. Abort these steps and fail to parse the cookie-date if:\n   *     *  at least one of the found-day-of-month, found-month, found-\n   *        year, or found-time flags is not set,\n   *     *  the day-of-month-value is less than 1 or greater than 31,\n   *     *  the year-value is less than 1601,\n   *     *  the hour-value is greater than 23,\n   *     *  the minute-value is greater than 59, or\n   *     *  the second-value is greater than 59.\n   *     (Note that leap seconds cannot be represented in this syntax.)\"\n   *\n   * So, in order as above:\n   */\n  if (dayOfMonth === null || month === null || year === null || second === null || dayOfMonth < 1 || dayOfMonth > 31 || year < 1601 || hour > 23 || minute > 59 || second > 59) {\n    return;\n  }\n  return new Date(Date.UTC(year, month, dayOfMonth, hour, minute, second));\n}\nfunction formatDate(date) {\n  var d = date.getUTCDate();\n  d = d >= 10 ? d : '0' + d;\n  var h = date.getUTCHours();\n  h = h >= 10 ? h : '0' + h;\n  var m = date.getUTCMinutes();\n  m = m >= 10 ? m : '0' + m;\n  var s = date.getUTCSeconds();\n  s = s >= 10 ? s : '0' + s;\n  return NUM_TO_DAY[date.getUTCDay()] + ', ' + d + ' ' + NUM_TO_MONTH[date.getUTCMonth()] + ' ' + date.getUTCFullYear() + ' ' + h + ':' + m + ':' + s + ' GMT';\n}\n\n// S5.1.2 Canonicalized Host Names\nfunction canonicalDomain(str) {\n  if (str == null) {\n    return null;\n  }\n  str = str.trim().replace(/^\\./, ''); // S4.1.2.3 & S5.2.3: ignore leading .\n\n  // convert to IDN if any non-ASCII characters\n  if (punycode && /[^\\u0001-\\u007f]/.test(str)) {\n    str = punycode.toASCII(str);\n  }\n  return str.toLowerCase();\n}\n\n// S5.1.3 Domain Matching\nfunction domainMatch(str, domStr, canonicalize) {\n  if (str == null || domStr == null) {\n    return null;\n  }\n  if (canonicalize !== false) {\n    str = canonicalDomain(str);\n    domStr = canonicalDomain(domStr);\n  }\n\n  /*\n   * \"The domain string and the string are identical. (Note that both the\n   * domain string and the string will have been canonicalized to lower case at\n   * this point)\"\n   */\n  if (str == domStr) {\n    return true;\n  }\n\n  /* \"All of the following [three] conditions hold:\" (order adjusted from the RFC) */\n\n  /* \"* The string is a host name (i.e., not an IP address).\" */\n  if (net.isIP(str)) {\n    return false;\n  }\n\n  /* \"* The domain string is a suffix of the string\" */\n  var idx = str.indexOf(domStr);\n  if (idx <= 0) {\n    return false; // it's a non-match (-1) or prefix (0)\n  }\n\n  // e.g \"a.b.c\".indexOf(\"b.c\") === 2\n  // 5 === 3+2\n  if (str.length !== domStr.length + idx) {\n    // it's not a suffix\n    return false;\n  }\n\n  /* \"* The last character of the string that is not included in the domain\n  * string is a %x2E (\".\") character.\" */\n  if (str.substr(idx - 1, 1) !== '.') {\n    return false;\n  }\n  return true;\n}\n\n// RFC6265 S5.1.4 Paths and Path-Match\n\n/*\n * \"The user agent MUST use an algorithm equivalent to the following algorithm\n * to compute the default-path of a cookie:\"\n *\n * Assumption: the path (and not query part or absolute uri) is passed in.\n */\nfunction defaultPath(path) {\n  // \"2. If the uri-path is empty or if the first character of the uri-path is not\n  // a %x2F (\"/\") character, output %x2F (\"/\") and skip the remaining steps.\n  if (!path || path.substr(0, 1) !== \"/\") {\n    return \"/\";\n  }\n\n  // \"3. If the uri-path contains no more than one %x2F (\"/\") character, output\n  // %x2F (\"/\") and skip the remaining step.\"\n  if (path === \"/\") {\n    return path;\n  }\n  var rightSlash = path.lastIndexOf(\"/\");\n  if (rightSlash === 0) {\n    return \"/\";\n  }\n\n  // \"4. Output the characters of the uri-path from the first character up to,\n  // but not including, the right-most %x2F (\"/\").\"\n  return path.slice(0, rightSlash);\n}\nfunction trimTerminator(str) {\n  for (var t = 0; t < TERMINATORS.length; t++) {\n    var terminatorIdx = str.indexOf(TERMINATORS[t]);\n    if (terminatorIdx !== -1) {\n      str = str.substr(0, terminatorIdx);\n    }\n  }\n  return str;\n}\nfunction parseCookiePair(cookiePair, looseMode) {\n  cookiePair = trimTerminator(cookiePair);\n  var firstEq = cookiePair.indexOf('=');\n  if (looseMode) {\n    if (firstEq === 0) {\n      // '=' is immediately at start\n      cookiePair = cookiePair.substr(1);\n      firstEq = cookiePair.indexOf('='); // might still need to split on '='\n    }\n  } else {\n    // non-loose mode\n    if (firstEq <= 0) {\n      // no '=' or is at start\n      return; // needs to have non-empty \"cookie-name\"\n    }\n  }\n\n  var cookieName, cookieValue;\n  if (firstEq <= 0) {\n    cookieName = \"\";\n    cookieValue = cookiePair.trim();\n  } else {\n    cookieName = cookiePair.substr(0, firstEq).trim();\n    cookieValue = cookiePair.substr(firstEq + 1).trim();\n  }\n  if (CONTROL_CHARS.test(cookieName) || CONTROL_CHARS.test(cookieValue)) {\n    return;\n  }\n  var c = new Cookie();\n  c.key = cookieName;\n  c.value = cookieValue;\n  return c;\n}\nfunction parse(str, options) {\n  if (!options || typeof options !== 'object') {\n    options = {};\n  }\n  str = str.trim();\n\n  // We use a regex to parse the \"name-value-pair\" part of S5.2\n  var firstSemi = str.indexOf(';'); // S5.2 step 1\n  var cookiePair = firstSemi === -1 ? str : str.substr(0, firstSemi);\n  var c = parseCookiePair(cookiePair, !!options.loose);\n  if (!c) {\n    return;\n  }\n  if (firstSemi === -1) {\n    return c;\n  }\n\n  // S5.2.3 \"unparsed-attributes consist of the remainder of the set-cookie-string\n  // (including the %x3B (\";\") in question).\" plus later on in the same section\n  // \"discard the first \";\" and trim\".\n  var unparsed = str.slice(firstSemi + 1).trim();\n\n  // \"If the unparsed-attributes string is empty, skip the rest of these\n  // steps.\"\n  if (unparsed.length === 0) {\n    return c;\n  }\n\n  /*\n   * S5.2 says that when looping over the items \"[p]rocess the attribute-name\n   * and attribute-value according to the requirements in the following\n   * subsections\" for every item.  Plus, for many of the individual attributes\n   * in S5.3 it says to use the \"attribute-value of the last attribute in the\n   * cookie-attribute-list\".  Therefore, in this implementation, we overwrite\n   * the previous value.\n   */\n  var cookie_avs = unparsed.split(';');\n  while (cookie_avs.length) {\n    var av = cookie_avs.shift().trim();\n    if (av.length === 0) {\n      // happens if \";;\" appears\n      continue;\n    }\n    var av_sep = av.indexOf('=');\n    var av_key, av_value;\n    if (av_sep === -1) {\n      av_key = av;\n      av_value = null;\n    } else {\n      av_key = av.substr(0, av_sep);\n      av_value = av.substr(av_sep + 1);\n    }\n    av_key = av_key.trim().toLowerCase();\n    if (av_value) {\n      av_value = av_value.trim();\n    }\n    switch (av_key) {\n      case 'expires':\n        // S5.2.1\n        if (av_value) {\n          var exp = parseDate(av_value);\n          // \"If the attribute-value failed to parse as a cookie date, ignore the\n          // cookie-av.\"\n          if (exp) {\n            // over and underflow not realistically a concern: V8's getTime() seems to\n            // store something larger than a 32-bit time_t (even with 32-bit node)\n            c.expires = exp;\n          }\n        }\n        break;\n      case 'max-age':\n        // S5.2.2\n        if (av_value) {\n          // \"If the first character of the attribute-value is not a DIGIT or a \"-\"\n          // character ...[or]... If the remainder of attribute-value contains a\n          // non-DIGIT character, ignore the cookie-av.\"\n          if (/^-?[0-9]+$/.test(av_value)) {\n            var delta = parseInt(av_value, 10);\n            // \"If delta-seconds is less than or equal to zero (0), let expiry-time\n            // be the earliest representable date and time.\"\n            c.setMaxAge(delta);\n          }\n        }\n        break;\n      case 'domain':\n        // S5.2.3\n        // \"If the attribute-value is empty, the behavior is undefined.  However,\n        // the user agent SHOULD ignore the cookie-av entirely.\"\n        if (av_value) {\n          // S5.2.3 \"Let cookie-domain be the attribute-value without the leading %x2E\n          // (\".\") character.\"\n          var domain = av_value.trim().replace(/^\\./, '');\n          if (domain) {\n            // \"Convert the cookie-domain to lower case.\"\n            c.domain = domain.toLowerCase();\n          }\n        }\n        break;\n      case 'path':\n        // S5.2.4\n        /*\n         * \"If the attribute-value is empty or if the first character of the\n         * attribute-value is not %x2F (\"/\"):\n         *   Let cookie-path be the default-path.\n         * Otherwise:\n         *   Let cookie-path be the attribute-value.\"\n         *\n         * We'll represent the default-path as null since it depends on the\n         * context of the parsing.\n         */\n        c.path = av_value && av_value[0] === \"/\" ? av_value : null;\n        break;\n      case 'secure':\n        // S5.2.5\n        /*\n         * \"If the attribute-name case-insensitively matches the string \"Secure\",\n         * the user agent MUST append an attribute to the cookie-attribute-list\n         * with an attribute-name of Secure and an empty attribute-value.\"\n         */\n        c.secure = true;\n        break;\n      case 'httponly':\n        // S5.2.6 -- effectively the same as 'secure'\n        c.httpOnly = true;\n        break;\n      default:\n        c.extensions = c.extensions || [];\n        c.extensions.push(av);\n        break;\n    }\n  }\n  return c;\n}\n\n// avoid the V8 deoptimization monster!\nfunction jsonParse(str) {\n  var obj;\n  try {\n    obj = JSON.parse(str);\n  } catch (e) {\n    return e;\n  }\n  return obj;\n}\nfunction fromJSON(str) {\n  if (!str) {\n    return null;\n  }\n  var obj;\n  if (typeof str === 'string') {\n    obj = jsonParse(str);\n    if (obj instanceof Error) {\n      return null;\n    }\n  } else {\n    // assume it's an Object\n    obj = str;\n  }\n  var c = new Cookie();\n  for (var i = 0; i < Cookie.serializableProperties.length; i++) {\n    var prop = Cookie.serializableProperties[i];\n    if (obj[prop] === undefined || obj[prop] === Cookie.prototype[prop]) {\n      continue; // leave as prototype default\n    }\n\n    if (prop === 'expires' || prop === 'creation' || prop === 'lastAccessed') {\n      if (obj[prop] === null) {\n        c[prop] = null;\n      } else {\n        c[prop] = obj[prop] == \"Infinity\" ? \"Infinity\" : new Date(obj[prop]);\n      }\n    } else {\n      c[prop] = obj[prop];\n    }\n  }\n  return c;\n}\n\n/* Section 5.4 part 2:\n * \"*  Cookies with longer paths are listed before cookies with\n *     shorter paths.\n *\n *  *  Among cookies that have equal-length path fields, cookies with\n *     earlier creation-times are listed before cookies with later\n *     creation-times.\"\n */\n\nfunction cookieCompare(a, b) {\n  var cmp = 0;\n\n  // descending for length: b CMP a\n  var aPathLen = a.path ? a.path.length : 0;\n  var bPathLen = b.path ? b.path.length : 0;\n  cmp = bPathLen - aPathLen;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  // ascending for time: a CMP b\n  var aTime = a.creation ? a.creation.getTime() : MAX_TIME;\n  var bTime = b.creation ? b.creation.getTime() : MAX_TIME;\n  cmp = aTime - bTime;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  // break ties for the same millisecond (precision of JavaScript's clock)\n  cmp = a.creationIndex - b.creationIndex;\n  return cmp;\n}\n\n// Gives the permutation of all possible pathMatch()es of a given path. The\n// array is in longest-to-shortest order.  Handy for indexing.\nfunction permutePath(path) {\n  if (path === '/') {\n    return ['/'];\n  }\n  if (path.lastIndexOf('/') === path.length - 1) {\n    path = path.substr(0, path.length - 1);\n  }\n  var permutations = [path];\n  while (path.length > 1) {\n    var lindex = path.lastIndexOf('/');\n    if (lindex === 0) {\n      break;\n    }\n    path = path.substr(0, lindex);\n    permutations.push(path);\n  }\n  permutations.push('/');\n  return permutations;\n}\nfunction getCookieContext(url) {\n  if (url instanceof Object) {\n    return url;\n  }\n  // NOTE: decodeURI will throw on malformed URIs (see GH-32).\n  // Therefore, we will just skip decoding for such URIs.\n  try {\n    url = decodeURI(url);\n  } catch (err) {\n    // Silently swallow error\n  }\n  return urlParse(url);\n}\nfunction Cookie(options) {\n  options = options || {};\n  Object.keys(options).forEach(function (prop) {\n    if (Cookie.prototype.hasOwnProperty(prop) && Cookie.prototype[prop] !== options[prop] && prop.substr(0, 1) !== '_') {\n      this[prop] = options[prop];\n    }\n  }, this);\n  this.creation = this.creation || new Date();\n\n  // used to break creation ties in cookieCompare():\n  Object.defineProperty(this, 'creationIndex', {\n    configurable: false,\n    enumerable: false,\n    // important for assert.deepEqual checks\n    writable: true,\n    value: ++Cookie.cookiesCreated\n  });\n}\nCookie.cookiesCreated = 0; // incremented each time a cookie is created\n\nCookie.parse = parse;\nCookie.fromJSON = fromJSON;\nCookie.prototype.key = \"\";\nCookie.prototype.value = \"\";\n\n// the order in which the RFC has them:\nCookie.prototype.expires = \"Infinity\"; // coerces to literal Infinity\nCookie.prototype.maxAge = null; // takes precedence over expires for TTL\nCookie.prototype.domain = null;\nCookie.prototype.path = null;\nCookie.prototype.secure = false;\nCookie.prototype.httpOnly = false;\nCookie.prototype.extensions = null;\n\n// set by the CookieJar:\nCookie.prototype.hostOnly = null; // boolean when set\nCookie.prototype.pathIsDefault = null; // boolean when set\nCookie.prototype.creation = null; // Date when set; defaulted by Cookie.parse\nCookie.prototype.lastAccessed = null; // Date when set\nObject.defineProperty(Cookie.prototype, 'creationIndex', {\n  configurable: true,\n  enumerable: false,\n  writable: true,\n  value: 0\n});\nCookie.serializableProperties = Object.keys(Cookie.prototype).filter(function (prop) {\n  return !(Cookie.prototype[prop] instanceof Function || prop === 'creationIndex' || prop.substr(0, 1) === '_');\n});\nCookie.prototype.inspect = function inspect() {\n  var now = Date.now();\n  return 'Cookie=\"' + this.toString() + '; hostOnly=' + (this.hostOnly != null ? this.hostOnly : '?') + '; aAge=' + (this.lastAccessed ? now - this.lastAccessed.getTime() + 'ms' : '?') + '; cAge=' + (this.creation ? now - this.creation.getTime() + 'ms' : '?') + '\"';\n};\nCookie.prototype.toJSON = function () {\n  var obj = {};\n  var props = Cookie.serializableProperties;\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    if (this[prop] === Cookie.prototype[prop]) {\n      continue; // leave as prototype default\n    }\n\n    if (prop === 'expires' || prop === 'creation' || prop === 'lastAccessed') {\n      if (this[prop] === null) {\n        obj[prop] = null;\n      } else {\n        obj[prop] = this[prop] == \"Infinity\" ?\n        // intentionally not ===\n        \"Infinity\" : this[prop].toISOString();\n      }\n    } else if (prop === 'maxAge') {\n      if (this[prop] !== null) {\n        // again, intentionally not ===\n        obj[prop] = this[prop] == Infinity || this[prop] == -Infinity ? this[prop].toString() : this[prop];\n      }\n    } else {\n      if (this[prop] !== Cookie.prototype[prop]) {\n        obj[prop] = this[prop];\n      }\n    }\n  }\n  return obj;\n};\nCookie.prototype.clone = function () {\n  return fromJSON(this.toJSON());\n};\nCookie.prototype.validate = function validate() {\n  if (!COOKIE_OCTETS.test(this.value)) {\n    return false;\n  }\n  if (this.expires != Infinity && !(this.expires instanceof Date) && !parseDate(this.expires)) {\n    return false;\n  }\n  if (this.maxAge != null && this.maxAge <= 0) {\n    return false; // \"Max-Age=\" non-zero-digit *DIGIT\n  }\n\n  if (this.path != null && !PATH_VALUE.test(this.path)) {\n    return false;\n  }\n  var cdomain = this.cdomain();\n  if (cdomain) {\n    if (cdomain.match(/\\.$/)) {\n      return false; // S4.1.2.3 suggests that this is bad. domainMatch() tests confirm this\n    }\n\n    var suffix = pubsuffix.getPublicSuffix(cdomain);\n    if (suffix == null) {\n      // it's a public suffix\n      return false;\n    }\n  }\n  return true;\n};\nCookie.prototype.setExpires = function setExpires(exp) {\n  if (exp instanceof Date) {\n    this.expires = exp;\n  } else {\n    this.expires = parseDate(exp) || \"Infinity\";\n  }\n};\nCookie.prototype.setMaxAge = function setMaxAge(age) {\n  if (age === Infinity || age === -Infinity) {\n    this.maxAge = age.toString(); // so JSON.stringify() works\n  } else {\n    this.maxAge = age;\n  }\n};\n\n// gives Cookie header format\nCookie.prototype.cookieString = function cookieString() {\n  var val = this.value;\n  if (val == null) {\n    val = '';\n  }\n  if (this.key === '') {\n    return val;\n  }\n  return this.key + '=' + val;\n};\n\n// gives Set-Cookie header format\nCookie.prototype.toString = function toString() {\n  var str = this.cookieString();\n  if (this.expires != Infinity) {\n    if (this.expires instanceof Date) {\n      str += '; Expires=' + formatDate(this.expires);\n    } else {\n      str += '; Expires=' + this.expires;\n    }\n  }\n  if (this.maxAge != null && this.maxAge != Infinity) {\n    str += '; Max-Age=' + this.maxAge;\n  }\n  if (this.domain && !this.hostOnly) {\n    str += '; Domain=' + this.domain;\n  }\n  if (this.path) {\n    str += '; Path=' + this.path;\n  }\n  if (this.secure) {\n    str += '; Secure';\n  }\n  if (this.httpOnly) {\n    str += '; HttpOnly';\n  }\n  if (this.extensions) {\n    this.extensions.forEach(function (ext) {\n      str += '; ' + ext;\n    });\n  }\n  return str;\n};\n\n// TTL() partially replaces the \"expiry-time\" parts of S5.3 step 3 (setCookie()\n// elsewhere)\n// S5.3 says to give the \"latest representable date\" for which we use Infinity\n// For \"expired\" we use 0\nCookie.prototype.TTL = function TTL(now) {\n  /* RFC6265 S4.1.2.2 If a cookie has both the Max-Age and the Expires\n   * attribute, the Max-Age attribute has precedence and controls the\n   * expiration date of the cookie.\n   * (Concurs with S5.3 step 3)\n   */\n  if (this.maxAge != null) {\n    return this.maxAge <= 0 ? 0 : this.maxAge * 1000;\n  }\n  var expires = this.expires;\n  if (expires != Infinity) {\n    if (!(expires instanceof Date)) {\n      expires = parseDate(expires) || Infinity;\n    }\n    if (expires == Infinity) {\n      return Infinity;\n    }\n    return expires.getTime() - (now || Date.now());\n  }\n  return Infinity;\n};\n\n// expiryTime() replaces the \"expiry-time\" parts of S5.3 step 3 (setCookie()\n// elsewhere)\nCookie.prototype.expiryTime = function expiryTime(now) {\n  if (this.maxAge != null) {\n    var relativeTo = now || this.creation || new Date();\n    var age = this.maxAge <= 0 ? -Infinity : this.maxAge * 1000;\n    return relativeTo.getTime() + age;\n  }\n  if (this.expires == Infinity) {\n    return Infinity;\n  }\n  return this.expires.getTime();\n};\n\n// expiryDate() replaces the \"expiry-time\" parts of S5.3 step 3 (setCookie()\n// elsewhere), except it returns a Date\nCookie.prototype.expiryDate = function expiryDate(now) {\n  var millisec = this.expiryTime(now);\n  if (millisec == Infinity) {\n    return new Date(MAX_TIME);\n  } else if (millisec == -Infinity) {\n    return new Date(MIN_TIME);\n  } else {\n    return new Date(millisec);\n  }\n};\n\n// This replaces the \"persistent-flag\" parts of S5.3 step 3\nCookie.prototype.isPersistent = function isPersistent() {\n  return this.maxAge != null || this.expires != Infinity;\n};\n\n// Mostly S5.1.2 and S5.2.3:\nCookie.prototype.cdomain = Cookie.prototype.canonicalizedDomain = function canonicalizedDomain() {\n  if (this.domain == null) {\n    return null;\n  }\n  return canonicalDomain(this.domain);\n};\nfunction CookieJar(store, options) {\n  if (typeof options === \"boolean\") {\n    options = {\n      rejectPublicSuffixes: options\n    };\n  } else if (options == null) {\n    options = {};\n  }\n  if (options.rejectPublicSuffixes != null) {\n    this.rejectPublicSuffixes = options.rejectPublicSuffixes;\n  }\n  if (options.looseMode != null) {\n    this.enableLooseMode = options.looseMode;\n  }\n  if (!store) {\n    store = new MemoryCookieStore();\n  }\n  this.store = store;\n}\nCookieJar.prototype.store = null;\nCookieJar.prototype.rejectPublicSuffixes = true;\nCookieJar.prototype.enableLooseMode = false;\nvar CAN_BE_SYNC = [];\nCAN_BE_SYNC.push('setCookie');\nCookieJar.prototype.setCookie = function (cookie, url, options, cb) {\n  var err;\n  var context = getCookieContext(url);\n  if (options instanceof Function) {\n    cb = options;\n    options = {};\n  }\n  var host = canonicalDomain(context.hostname);\n  var loose = this.enableLooseMode;\n  if (options.loose != null) {\n    loose = options.loose;\n  }\n\n  // S5.3 step 1\n  if (!(cookie instanceof Cookie)) {\n    cookie = Cookie.parse(cookie, {\n      loose: loose\n    });\n  }\n  if (!cookie) {\n    err = new Error(\"Cookie failed to parse\");\n    return cb(options.ignoreError ? null : err);\n  }\n\n  // S5.3 step 2\n  var now = options.now || new Date(); // will assign later to save effort in the face of errors\n\n  // S5.3 step 3: NOOP; persistent-flag and expiry-time is handled by getCookie()\n\n  // S5.3 step 4: NOOP; domain is null by default\n\n  // S5.3 step 5: public suffixes\n  if (this.rejectPublicSuffixes && cookie.domain) {\n    var suffix = pubsuffix.getPublicSuffix(cookie.cdomain());\n    if (suffix == null) {\n      // e.g. \"com\"\n      err = new Error(\"Cookie has domain set to a public suffix\");\n      return cb(options.ignoreError ? null : err);\n    }\n  }\n\n  // S5.3 step 6:\n  if (cookie.domain) {\n    if (!domainMatch(host, cookie.cdomain(), false)) {\n      err = new Error(\"Cookie not in this host's domain. Cookie:\" + cookie.cdomain() + \" Request:\" + host);\n      return cb(options.ignoreError ? null : err);\n    }\n    if (cookie.hostOnly == null) {\n      // don't reset if already set\n      cookie.hostOnly = false;\n    }\n  } else {\n    cookie.hostOnly = true;\n    cookie.domain = host;\n  }\n\n  //S5.2.4 If the attribute-value is empty or if the first character of the\n  //attribute-value is not %x2F (\"/\"):\n  //Let cookie-path be the default-path.\n  if (!cookie.path || cookie.path[0] !== '/') {\n    cookie.path = defaultPath(context.pathname);\n    cookie.pathIsDefault = true;\n  }\n\n  // S5.3 step 8: NOOP; secure attribute\n  // S5.3 step 9: NOOP; httpOnly attribute\n\n  // S5.3 step 10\n  if (options.http === false && cookie.httpOnly) {\n    err = new Error(\"Cookie is HttpOnly and this isn't an HTTP API\");\n    return cb(options.ignoreError ? null : err);\n  }\n  var store = this.store;\n  if (!store.updateCookie) {\n    store.updateCookie = function (oldCookie, newCookie, cb) {\n      this.putCookie(newCookie, cb);\n    };\n  }\n  function withCookie(err, oldCookie) {\n    if (err) {\n      return cb(err);\n    }\n    var next = function (err) {\n      if (err) {\n        return cb(err);\n      } else {\n        cb(null, cookie);\n      }\n    };\n    if (oldCookie) {\n      // S5.3 step 11 - \"If the cookie store contains a cookie with the same name,\n      // domain, and path as the newly created cookie:\"\n      if (options.http === false && oldCookie.httpOnly) {\n        // step 11.2\n        err = new Error(\"old Cookie is HttpOnly and this isn't an HTTP API\");\n        return cb(options.ignoreError ? null : err);\n      }\n      cookie.creation = oldCookie.creation; // step 11.3\n      cookie.creationIndex = oldCookie.creationIndex; // preserve tie-breaker\n      cookie.lastAccessed = now;\n      // Step 11.4 (delete cookie) is implied by just setting the new one:\n      store.updateCookie(oldCookie, cookie, next); // step 12\n    } else {\n      cookie.creation = cookie.lastAccessed = now;\n      store.putCookie(cookie, next); // step 12\n    }\n  }\n\n  store.findCookie(cookie.domain, cookie.path, cookie.key, withCookie);\n};\n\n// RFC6365 S5.4\nCAN_BE_SYNC.push('getCookies');\nCookieJar.prototype.getCookies = function (url, options, cb) {\n  var context = getCookieContext(url);\n  if (options instanceof Function) {\n    cb = options;\n    options = {};\n  }\n  var host = canonicalDomain(context.hostname);\n  var path = context.pathname || '/';\n  var secure = options.secure;\n  if (secure == null && context.protocol && (context.protocol == 'https:' || context.protocol == 'wss:')) {\n    secure = true;\n  }\n  var http = options.http;\n  if (http == null) {\n    http = true;\n  }\n  var now = options.now || Date.now();\n  var expireCheck = options.expire !== false;\n  var allPaths = !!options.allPaths;\n  var store = this.store;\n  function matchingCookie(c) {\n    // \"Either:\n    //   The cookie's host-only-flag is true and the canonicalized\n    //   request-host is identical to the cookie's domain.\n    // Or:\n    //   The cookie's host-only-flag is false and the canonicalized\n    //   request-host domain-matches the cookie's domain.\"\n    if (c.hostOnly) {\n      if (c.domain != host) {\n        return false;\n      }\n    } else {\n      if (!domainMatch(host, c.domain, false)) {\n        return false;\n      }\n    }\n\n    // \"The request-uri's path path-matches the cookie's path.\"\n    if (!allPaths && !pathMatch(path, c.path)) {\n      return false;\n    }\n\n    // \"If the cookie's secure-only-flag is true, then the request-uri's\n    // scheme must denote a \"secure\" protocol\"\n    if (c.secure && !secure) {\n      return false;\n    }\n\n    // \"If the cookie's http-only-flag is true, then exclude the cookie if the\n    // cookie-string is being generated for a \"non-HTTP\" API\"\n    if (c.httpOnly && !http) {\n      return false;\n    }\n\n    // deferred from S5.3\n    // non-RFC: allow retention of expired cookies by choice\n    if (expireCheck && c.expiryTime() <= now) {\n      store.removeCookie(c.domain, c.path, c.key, function () {}); // result ignored\n      return false;\n    }\n    return true;\n  }\n  store.findCookies(host, allPaths ? null : path, function (err, cookies) {\n    if (err) {\n      return cb(err);\n    }\n    cookies = cookies.filter(matchingCookie);\n\n    // sorting of S5.4 part 2\n    if (options.sort !== false) {\n      cookies = cookies.sort(cookieCompare);\n    }\n\n    // S5.4 part 3\n    var now = new Date();\n    cookies.forEach(function (c) {\n      c.lastAccessed = now;\n    });\n    // TODO persist lastAccessed\n\n    cb(null, cookies);\n  });\n};\nCAN_BE_SYNC.push('getCookieString');\nCookieJar.prototype.getCookieString = function /*..., cb*/\n() {\n  var args = Array.prototype.slice.call(arguments, 0);\n  var cb = args.pop();\n  var next = function (err, cookies) {\n    if (err) {\n      cb(err);\n    } else {\n      cb(null, cookies.sort(cookieCompare).map(function (c) {\n        return c.cookieString();\n      }).join('; '));\n    }\n  };\n  args.push(next);\n  this.getCookies.apply(this, args);\n};\nCAN_BE_SYNC.push('getSetCookieStrings');\nCookieJar.prototype.getSetCookieStrings = function /*..., cb*/\n() {\n  var args = Array.prototype.slice.call(arguments, 0);\n  var cb = args.pop();\n  var next = function (err, cookies) {\n    if (err) {\n      cb(err);\n    } else {\n      cb(null, cookies.map(function (c) {\n        return c.toString();\n      }));\n    }\n  };\n  args.push(next);\n  this.getCookies.apply(this, args);\n};\nCAN_BE_SYNC.push('serialize');\nCookieJar.prototype.serialize = function (cb) {\n  var type = this.store.constructor.name;\n  if (type === 'Object') {\n    type = null;\n  }\n\n  // update README.md \"Serialization Format\" if you change this, please!\n  var serialized = {\n    // The version of tough-cookie that serialized this jar. Generally a good\n    // practice since future versions can make data import decisions based on\n    // known past behavior. When/if this matters, use `semver`.\n    version: 'tough-cookie@' + VERSION,\n    // add the store type, to make humans happy:\n    storeType: type,\n    // CookieJar configuration:\n    rejectPublicSuffixes: !!this.rejectPublicSuffixes,\n    // this gets filled from getAllCookies:\n    cookies: []\n  };\n  if (!(this.store.getAllCookies && typeof this.store.getAllCookies === 'function')) {\n    return cb(new Error('store does not support getAllCookies and cannot be serialized'));\n  }\n  this.store.getAllCookies(function (err, cookies) {\n    if (err) {\n      return cb(err);\n    }\n    serialized.cookies = cookies.map(function (cookie) {\n      // convert to serialized 'raw' cookies\n      cookie = cookie instanceof Cookie ? cookie.toJSON() : cookie;\n\n      // Remove the index so new ones get assigned during deserialization\n      delete cookie.creationIndex;\n      return cookie;\n    });\n    return cb(null, serialized);\n  });\n};\n\n// well-known name that JSON.stringify calls\nCookieJar.prototype.toJSON = function () {\n  return this.serializeSync();\n};\n\n// use the class method CookieJar.deserialize instead of calling this directly\nCAN_BE_SYNC.push('_importCookies');\nCookieJar.prototype._importCookies = function (serialized, cb) {\n  var jar = this;\n  var cookies = serialized.cookies;\n  if (!cookies || !Array.isArray(cookies)) {\n    return cb(new Error('serialized jar has no cookies array'));\n  }\n  cookies = cookies.slice(); // do not modify the original\n\n  function putNext(err) {\n    if (err) {\n      return cb(err);\n    }\n    if (!cookies.length) {\n      return cb(err, jar);\n    }\n    var cookie;\n    try {\n      cookie = fromJSON(cookies.shift());\n    } catch (e) {\n      return cb(e);\n    }\n    if (cookie === null) {\n      return putNext(null); // skip this cookie\n    }\n\n    jar.store.putCookie(cookie, putNext);\n  }\n  putNext();\n};\nCookieJar.deserialize = function (strOrObj, store, cb) {\n  if (arguments.length !== 3) {\n    // store is optional\n    cb = store;\n    store = null;\n  }\n  var serialized;\n  if (typeof strOrObj === 'string') {\n    serialized = jsonParse(strOrObj);\n    if (serialized instanceof Error) {\n      return cb(serialized);\n    }\n  } else {\n    serialized = strOrObj;\n  }\n  var jar = new CookieJar(store, serialized.rejectPublicSuffixes);\n  jar._importCookies(serialized, function (err) {\n    if (err) {\n      return cb(err);\n    }\n    cb(null, jar);\n  });\n};\nCookieJar.deserializeSync = function (strOrObj, store) {\n  var serialized = typeof strOrObj === 'string' ? JSON.parse(strOrObj) : strOrObj;\n  var jar = new CookieJar(store, serialized.rejectPublicSuffixes);\n\n  // catch this mistake early:\n  if (!jar.store.synchronous) {\n    throw new Error('CookieJar store is not synchronous; use async API instead.');\n  }\n  jar._importCookiesSync(serialized);\n  return jar;\n};\nCookieJar.fromJSON = CookieJar.deserializeSync;\nCAN_BE_SYNC.push('clone');\nCookieJar.prototype.clone = function (newStore, cb) {\n  if (arguments.length === 1) {\n    cb = newStore;\n    newStore = null;\n  }\n  this.serialize(function (err, serialized) {\n    if (err) {\n      return cb(err);\n    }\n    CookieJar.deserialize(newStore, serialized, cb);\n  });\n};\n\n// Use a closure to provide a true imperative API for synchronous stores.\nfunction syncWrap(method) {\n  return function () {\n    if (!this.store.synchronous) {\n      throw new Error('CookieJar store is not synchronous; use async API instead.');\n    }\n    var args = Array.prototype.slice.call(arguments);\n    var syncErr, syncResult;\n    args.push(function syncCb(err, result) {\n      syncErr = err;\n      syncResult = result;\n    });\n    this[method].apply(this, args);\n    if (syncErr) {\n      throw syncErr;\n    }\n    return syncResult;\n  };\n}\n\n// wrap all declared CAN_BE_SYNC methods in the sync wrapper\nCAN_BE_SYNC.forEach(function (method) {\n  CookieJar.prototype[method + 'Sync'] = syncWrap(method);\n});\nmodule.exports = {\n  CookieJar: CookieJar,\n  Cookie: Cookie,\n  Store: Store,\n  MemoryCookieStore: MemoryCookieStore,\n  parseDate: parseDate,\n  formatDate: formatDate,\n  parse: parse,\n  fromJSON: fromJSON,\n  domainMatch: domainMatch,\n  defaultPath: defaultPath,\n  pathMatch: pathMatch,\n  getPublicSuffix: pubsuffix.getPublicSuffix,\n  cookieCompare: cookieCompare,\n  permuteDomain: require('./permuteDomain').permuteDomain,\n  permutePath: permutePath,\n  canonicalDomain: canonicalDomain\n};","map":{"version":3,"names":["net","require","urlParse","parse","pubsuffix","Store","MemoryCookieStore","pathMatch","VERSION","version","punycode","e","console","warn","COOKIE_OCTETS","CONTROL_CHARS","TERMINATORS","PATH_VALUE","DATE_DELIM","MONTH_TO_NUM","jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec","NUM_TO_MONTH","NUM_TO_DAY","MAX_TIME","MIN_TIME","parseDigits","token","minDigits","maxDigits","trailingOK","count","length","c","charCodeAt","parseInt","substr","parseTime","parts","split","result","i","num","parseMonth","String","toLowerCase","parseDate","str","tokens","hour","minute","second","dayOfMonth","month","year","trim","Date","UTC","formatDate","date","d","getUTCDate","h","getUTCHours","m","getUTCMinutes","s","getUTCSeconds","getUTCDay","getUTCMonth","getUTCFullYear","canonicalDomain","replace","test","toASCII","domainMatch","domStr","canonicalize","isIP","idx","indexOf","defaultPath","path","rightSlash","lastIndexOf","slice","trimTerminator","t","terminatorIdx","parseCookiePair","cookiePair","looseMode","firstEq","cookieName","cookieValue","Cookie","key","value","options","firstSemi","loose","unparsed","cookie_avs","av","shift","av_sep","av_key","av_value","exp","expires","delta","setMaxAge","domain","secure","httpOnly","extensions","push","jsonParse","obj","JSON","fromJSON","Error","serializableProperties","prop","undefined","prototype","cookieCompare","a","b","cmp","aPathLen","bPathLen","aTime","creation","getTime","bTime","creationIndex","permutePath","permutations","lindex","getCookieContext","url","Object","decodeURI","err","keys","forEach","hasOwnProperty","defineProperty","configurable","enumerable","writable","cookiesCreated","maxAge","hostOnly","pathIsDefault","lastAccessed","filter","Function","inspect","now","toString","toJSON","props","toISOString","Infinity","clone","validate","cdomain","match","suffix","getPublicSuffix","setExpires","age","cookieString","val","ext","TTL","expiryTime","relativeTo","expiryDate","millisec","isPersistent","canonicalizedDomain","CookieJar","store","rejectPublicSuffixes","enableLooseMode","CAN_BE_SYNC","setCookie","cookie","cb","context","host","hostname","ignoreError","pathname","http","updateCookie","oldCookie","newCookie","putCookie","withCookie","next","findCookie","getCookies","protocol","expireCheck","expire","allPaths","matchingCookie","removeCookie","findCookies","cookies","sort","getCookieString","args","Array","call","arguments","pop","map","join","apply","getSetCookieStrings","serialize","type","constructor","name","serialized","storeType","getAllCookies","serializeSync","_importCookies","jar","isArray","putNext","deserialize","strOrObj","deserializeSync","synchronous","_importCookiesSync","newStore","syncWrap","method","syncErr","syncResult","syncCb","module","exports","permuteDomain"],"sources":["/Users/mohitgupta/Downloads/orgs/Clone/inst/node_modules/tough-cookie/lib/cookie.js"],"sourcesContent":["/*!\n * Copyright (c) 2015, Salesforce.com, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of Salesforce.com nor the names of its contributors may\n * be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n'use strict';\nvar net = require('net');\nvar urlParse = require('url').parse;\nvar pubsuffix = require('./pubsuffix');\nvar Store = require('./store').Store;\nvar MemoryCookieStore = require('./memstore').MemoryCookieStore;\nvar pathMatch = require('./pathMatch').pathMatch;\nvar VERSION = require('../package.json').version;\n\nvar punycode;\ntry {\n  punycode = require('punycode');\n} catch(e) {\n  console.warn(\"cookie: can't load punycode; won't use punycode for domain normalization\");\n}\n\n// From RFC6265 S4.1.1\n// note that it excludes \\x3B \";\"\nvar COOKIE_OCTETS = /^[\\x21\\x23-\\x2B\\x2D-\\x3A\\x3C-\\x5B\\x5D-\\x7E]+$/;\n\nvar CONTROL_CHARS = /[\\x00-\\x1F]/;\n\n// From Chromium // '\\r', '\\n' and '\\0' should be treated as a terminator in\n// the \"relaxed\" mode, see:\n// https://github.com/ChromiumWebApps/chromium/blob/b3d3b4da8bb94c1b2e061600df106d590fda3620/net/cookies/parsed_cookie.cc#L60\nvar TERMINATORS = ['\\n', '\\r', '\\0'];\n\n// RFC6265 S4.1.1 defines path value as 'any CHAR except CTLs or \";\"'\n// Note ';' is \\x3B\nvar PATH_VALUE = /[\\x20-\\x3A\\x3C-\\x7E]+/;\n\n// date-time parsing constants (RFC6265 S5.1.1)\n\nvar DATE_DELIM = /[\\x09\\x20-\\x2F\\x3B-\\x40\\x5B-\\x60\\x7B-\\x7E]/;\n\nvar MONTH_TO_NUM = {\n  jan:0, feb:1, mar:2, apr:3, may:4, jun:5,\n  jul:6, aug:7, sep:8, oct:9, nov:10, dec:11\n};\nvar NUM_TO_MONTH = [\n  'Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'\n];\nvar NUM_TO_DAY = [\n  'Sun','Mon','Tue','Wed','Thu','Fri','Sat'\n];\n\nvar MAX_TIME = 2147483647000; // 31-bit max\nvar MIN_TIME = 0; // 31-bit min\n\n/*\n * Parses a Natural number (i.e., non-negative integer) with either the\n *    <min>*<max>DIGIT ( non-digit *OCTET )\n * or\n *    <min>*<max>DIGIT\n * grammar (RFC6265 S5.1.1).\n *\n * The \"trailingOK\" boolean controls if the grammar accepts a\n * \"( non-digit *OCTET )\" trailer.\n */\nfunction parseDigits(token, minDigits, maxDigits, trailingOK) {\n  var count = 0;\n  while (count < token.length) {\n    var c = token.charCodeAt(count);\n    // \"non-digit = %x00-2F / %x3A-FF\"\n    if (c <= 0x2F || c >= 0x3A) {\n      break;\n    }\n    count++;\n  }\n\n  // constrain to a minimum and maximum number of digits.\n  if (count < minDigits || count > maxDigits) {\n    return null;\n  }\n\n  if (!trailingOK && count != token.length) {\n    return null;\n  }\n\n  return parseInt(token.substr(0,count), 10);\n}\n\nfunction parseTime(token) {\n  var parts = token.split(':');\n  var result = [0,0,0];\n\n  /* RF6256 S5.1.1:\n   *      time            = hms-time ( non-digit *OCTET )\n   *      hms-time        = time-field \":\" time-field \":\" time-field\n   *      time-field      = 1*2DIGIT\n   */\n\n  if (parts.length !== 3) {\n    return null;\n  }\n\n  for (var i = 0; i < 3; i++) {\n    // \"time-field\" must be strictly \"1*2DIGIT\", HOWEVER, \"hms-time\" can be\n    // followed by \"( non-digit *OCTET )\" so therefore the last time-field can\n    // have a trailer\n    var trailingOK = (i == 2);\n    var num = parseDigits(parts[i], 1, 2, trailingOK);\n    if (num === null) {\n      return null;\n    }\n    result[i] = num;\n  }\n\n  return result;\n}\n\nfunction parseMonth(token) {\n  token = String(token).substr(0,3).toLowerCase();\n  var num = MONTH_TO_NUM[token];\n  return num >= 0 ? num : null;\n}\n\n/*\n * RFC6265 S5.1.1 date parser (see RFC for full grammar)\n */\nfunction parseDate(str) {\n  if (!str) {\n    return;\n  }\n\n  /* RFC6265 S5.1.1:\n   * 2. Process each date-token sequentially in the order the date-tokens\n   * appear in the cookie-date\n   */\n  var tokens = str.split(DATE_DELIM);\n  if (!tokens) {\n    return;\n  }\n\n  var hour = null;\n  var minute = null;\n  var second = null;\n  var dayOfMonth = null;\n  var month = null;\n  var year = null;\n\n  for (var i=0; i<tokens.length; i++) {\n    var token = tokens[i].trim();\n    if (!token.length) {\n      continue;\n    }\n\n    var result;\n\n    /* 2.1. If the found-time flag is not set and the token matches the time\n     * production, set the found-time flag and set the hour- value,\n     * minute-value, and second-value to the numbers denoted by the digits in\n     * the date-token, respectively.  Skip the remaining sub-steps and continue\n     * to the next date-token.\n     */\n    if (second === null) {\n      result = parseTime(token);\n      if (result) {\n        hour = result[0];\n        minute = result[1];\n        second = result[2];\n        continue;\n      }\n    }\n\n    /* 2.2. If the found-day-of-month flag is not set and the date-token matches\n     * the day-of-month production, set the found-day-of- month flag and set\n     * the day-of-month-value to the number denoted by the date-token.  Skip\n     * the remaining sub-steps and continue to the next date-token.\n     */\n    if (dayOfMonth === null) {\n      // \"day-of-month = 1*2DIGIT ( non-digit *OCTET )\"\n      result = parseDigits(token, 1, 2, true);\n      if (result !== null) {\n        dayOfMonth = result;\n        continue;\n      }\n    }\n\n    /* 2.3. If the found-month flag is not set and the date-token matches the\n     * month production, set the found-month flag and set the month-value to\n     * the month denoted by the date-token.  Skip the remaining sub-steps and\n     * continue to the next date-token.\n     */\n    if (month === null) {\n      result = parseMonth(token);\n      if (result !== null) {\n        month = result;\n        continue;\n      }\n    }\n\n    /* 2.4. If the found-year flag is not set and the date-token matches the\n     * year production, set the found-year flag and set the year-value to the\n     * number denoted by the date-token.  Skip the remaining sub-steps and\n     * continue to the next date-token.\n     */\n    if (year === null) {\n      // \"year = 2*4DIGIT ( non-digit *OCTET )\"\n      result = parseDigits(token, 2, 4, true);\n      if (result !== null) {\n        year = result;\n        /* From S5.1.1:\n         * 3.  If the year-value is greater than or equal to 70 and less\n         * than or equal to 99, increment the year-value by 1900.\n         * 4.  If the year-value is greater than or equal to 0 and less\n         * than or equal to 69, increment the year-value by 2000.\n         */\n        if (year >= 70 && year <= 99) {\n          year += 1900;\n        } else if (year >= 0 && year <= 69) {\n          year += 2000;\n        }\n      }\n    }\n  }\n\n  /* RFC 6265 S5.1.1\n   * \"5. Abort these steps and fail to parse the cookie-date if:\n   *     *  at least one of the found-day-of-month, found-month, found-\n   *        year, or found-time flags is not set,\n   *     *  the day-of-month-value is less than 1 or greater than 31,\n   *     *  the year-value is less than 1601,\n   *     *  the hour-value is greater than 23,\n   *     *  the minute-value is greater than 59, or\n   *     *  the second-value is greater than 59.\n   *     (Note that leap seconds cannot be represented in this syntax.)\"\n   *\n   * So, in order as above:\n   */\n  if (\n    dayOfMonth === null || month === null || year === null || second === null ||\n    dayOfMonth < 1 || dayOfMonth > 31 ||\n    year < 1601 ||\n    hour > 23 ||\n    minute > 59 ||\n    second > 59\n  ) {\n    return;\n  }\n\n  return new Date(Date.UTC(year, month, dayOfMonth, hour, minute, second));\n}\n\nfunction formatDate(date) {\n  var d = date.getUTCDate(); d = d >= 10 ? d : '0'+d;\n  var h = date.getUTCHours(); h = h >= 10 ? h : '0'+h;\n  var m = date.getUTCMinutes(); m = m >= 10 ? m : '0'+m;\n  var s = date.getUTCSeconds(); s = s >= 10 ? s : '0'+s;\n  return NUM_TO_DAY[date.getUTCDay()] + ', ' +\n    d+' '+ NUM_TO_MONTH[date.getUTCMonth()] +' '+ date.getUTCFullYear() +' '+\n    h+':'+m+':'+s+' GMT';\n}\n\n// S5.1.2 Canonicalized Host Names\nfunction canonicalDomain(str) {\n  if (str == null) {\n    return null;\n  }\n  str = str.trim().replace(/^\\./,''); // S4.1.2.3 & S5.2.3: ignore leading .\n\n  // convert to IDN if any non-ASCII characters\n  if (punycode && /[^\\u0001-\\u007f]/.test(str)) {\n    str = punycode.toASCII(str);\n  }\n\n  return str.toLowerCase();\n}\n\n// S5.1.3 Domain Matching\nfunction domainMatch(str, domStr, canonicalize) {\n  if (str == null || domStr == null) {\n    return null;\n  }\n  if (canonicalize !== false) {\n    str = canonicalDomain(str);\n    domStr = canonicalDomain(domStr);\n  }\n\n  /*\n   * \"The domain string and the string are identical. (Note that both the\n   * domain string and the string will have been canonicalized to lower case at\n   * this point)\"\n   */\n  if (str == domStr) {\n    return true;\n  }\n\n  /* \"All of the following [three] conditions hold:\" (order adjusted from the RFC) */\n\n  /* \"* The string is a host name (i.e., not an IP address).\" */\n  if (net.isIP(str)) {\n    return false;\n  }\n\n  /* \"* The domain string is a suffix of the string\" */\n  var idx = str.indexOf(domStr);\n  if (idx <= 0) {\n    return false; // it's a non-match (-1) or prefix (0)\n  }\n\n  // e.g \"a.b.c\".indexOf(\"b.c\") === 2\n  // 5 === 3+2\n  if (str.length !== domStr.length + idx) { // it's not a suffix\n    return false;\n  }\n\n  /* \"* The last character of the string that is not included in the domain\n  * string is a %x2E (\".\") character.\" */\n  if (str.substr(idx-1,1) !== '.') {\n    return false;\n  }\n\n  return true;\n}\n\n\n// RFC6265 S5.1.4 Paths and Path-Match\n\n/*\n * \"The user agent MUST use an algorithm equivalent to the following algorithm\n * to compute the default-path of a cookie:\"\n *\n * Assumption: the path (and not query part or absolute uri) is passed in.\n */\nfunction defaultPath(path) {\n  // \"2. If the uri-path is empty or if the first character of the uri-path is not\n  // a %x2F (\"/\") character, output %x2F (\"/\") and skip the remaining steps.\n  if (!path || path.substr(0,1) !== \"/\") {\n    return \"/\";\n  }\n\n  // \"3. If the uri-path contains no more than one %x2F (\"/\") character, output\n  // %x2F (\"/\") and skip the remaining step.\"\n  if (path === \"/\") {\n    return path;\n  }\n\n  var rightSlash = path.lastIndexOf(\"/\");\n  if (rightSlash === 0) {\n    return \"/\";\n  }\n\n  // \"4. Output the characters of the uri-path from the first character up to,\n  // but not including, the right-most %x2F (\"/\").\"\n  return path.slice(0, rightSlash);\n}\n\nfunction trimTerminator(str) {\n  for (var t = 0; t < TERMINATORS.length; t++) {\n    var terminatorIdx = str.indexOf(TERMINATORS[t]);\n    if (terminatorIdx !== -1) {\n      str = str.substr(0,terminatorIdx);\n    }\n  }\n\n  return str;\n}\n\nfunction parseCookiePair(cookiePair, looseMode) {\n  cookiePair = trimTerminator(cookiePair);\n\n  var firstEq = cookiePair.indexOf('=');\n  if (looseMode) {\n    if (firstEq === 0) { // '=' is immediately at start\n      cookiePair = cookiePair.substr(1);\n      firstEq = cookiePair.indexOf('='); // might still need to split on '='\n    }\n  } else { // non-loose mode\n    if (firstEq <= 0) { // no '=' or is at start\n      return; // needs to have non-empty \"cookie-name\"\n    }\n  }\n\n  var cookieName, cookieValue;\n  if (firstEq <= 0) {\n    cookieName = \"\";\n    cookieValue = cookiePair.trim();\n  } else {\n    cookieName = cookiePair.substr(0, firstEq).trim();\n    cookieValue = cookiePair.substr(firstEq+1).trim();\n  }\n\n  if (CONTROL_CHARS.test(cookieName) || CONTROL_CHARS.test(cookieValue)) {\n    return;\n  }\n\n  var c = new Cookie();\n  c.key = cookieName;\n  c.value = cookieValue;\n  return c;\n}\n\nfunction parse(str, options) {\n  if (!options || typeof options !== 'object') {\n    options = {};\n  }\n  str = str.trim();\n\n  // We use a regex to parse the \"name-value-pair\" part of S5.2\n  var firstSemi = str.indexOf(';'); // S5.2 step 1\n  var cookiePair = (firstSemi === -1) ? str : str.substr(0, firstSemi);\n  var c = parseCookiePair(cookiePair, !!options.loose);\n  if (!c) {\n    return;\n  }\n\n  if (firstSemi === -1) {\n    return c;\n  }\n\n  // S5.2.3 \"unparsed-attributes consist of the remainder of the set-cookie-string\n  // (including the %x3B (\";\") in question).\" plus later on in the same section\n  // \"discard the first \";\" and trim\".\n  var unparsed = str.slice(firstSemi + 1).trim();\n\n  // \"If the unparsed-attributes string is empty, skip the rest of these\n  // steps.\"\n  if (unparsed.length === 0) {\n    return c;\n  }\n\n  /*\n   * S5.2 says that when looping over the items \"[p]rocess the attribute-name\n   * and attribute-value according to the requirements in the following\n   * subsections\" for every item.  Plus, for many of the individual attributes\n   * in S5.3 it says to use the \"attribute-value of the last attribute in the\n   * cookie-attribute-list\".  Therefore, in this implementation, we overwrite\n   * the previous value.\n   */\n  var cookie_avs = unparsed.split(';');\n  while (cookie_avs.length) {\n    var av = cookie_avs.shift().trim();\n    if (av.length === 0) { // happens if \";;\" appears\n      continue;\n    }\n    var av_sep = av.indexOf('=');\n    var av_key, av_value;\n\n    if (av_sep === -1) {\n      av_key = av;\n      av_value = null;\n    } else {\n      av_key = av.substr(0,av_sep);\n      av_value = av.substr(av_sep+1);\n    }\n\n    av_key = av_key.trim().toLowerCase();\n\n    if (av_value) {\n      av_value = av_value.trim();\n    }\n\n    switch(av_key) {\n    case 'expires': // S5.2.1\n      if (av_value) {\n        var exp = parseDate(av_value);\n        // \"If the attribute-value failed to parse as a cookie date, ignore the\n        // cookie-av.\"\n        if (exp) {\n          // over and underflow not realistically a concern: V8's getTime() seems to\n          // store something larger than a 32-bit time_t (even with 32-bit node)\n          c.expires = exp;\n        }\n      }\n      break;\n\n    case 'max-age': // S5.2.2\n      if (av_value) {\n        // \"If the first character of the attribute-value is not a DIGIT or a \"-\"\n        // character ...[or]... If the remainder of attribute-value contains a\n        // non-DIGIT character, ignore the cookie-av.\"\n        if (/^-?[0-9]+$/.test(av_value)) {\n          var delta = parseInt(av_value, 10);\n          // \"If delta-seconds is less than or equal to zero (0), let expiry-time\n          // be the earliest representable date and time.\"\n          c.setMaxAge(delta);\n        }\n      }\n      break;\n\n    case 'domain': // S5.2.3\n      // \"If the attribute-value is empty, the behavior is undefined.  However,\n      // the user agent SHOULD ignore the cookie-av entirely.\"\n      if (av_value) {\n        // S5.2.3 \"Let cookie-domain be the attribute-value without the leading %x2E\n        // (\".\") character.\"\n        var domain = av_value.trim().replace(/^\\./, '');\n        if (domain) {\n          // \"Convert the cookie-domain to lower case.\"\n          c.domain = domain.toLowerCase();\n        }\n      }\n      break;\n\n    case 'path': // S5.2.4\n      /*\n       * \"If the attribute-value is empty or if the first character of the\n       * attribute-value is not %x2F (\"/\"):\n       *   Let cookie-path be the default-path.\n       * Otherwise:\n       *   Let cookie-path be the attribute-value.\"\n       *\n       * We'll represent the default-path as null since it depends on the\n       * context of the parsing.\n       */\n      c.path = av_value && av_value[0] === \"/\" ? av_value : null;\n      break;\n\n    case 'secure': // S5.2.5\n      /*\n       * \"If the attribute-name case-insensitively matches the string \"Secure\",\n       * the user agent MUST append an attribute to the cookie-attribute-list\n       * with an attribute-name of Secure and an empty attribute-value.\"\n       */\n      c.secure = true;\n      break;\n\n    case 'httponly': // S5.2.6 -- effectively the same as 'secure'\n      c.httpOnly = true;\n      break;\n\n    default:\n      c.extensions = c.extensions || [];\n      c.extensions.push(av);\n      break;\n    }\n  }\n\n  return c;\n}\n\n// avoid the V8 deoptimization monster!\nfunction jsonParse(str) {\n  var obj;\n  try {\n    obj = JSON.parse(str);\n  } catch (e) {\n    return e;\n  }\n  return obj;\n}\n\nfunction fromJSON(str) {\n  if (!str) {\n    return null;\n  }\n\n  var obj;\n  if (typeof str === 'string') {\n    obj = jsonParse(str);\n    if (obj instanceof Error) {\n      return null;\n    }\n  } else {\n    // assume it's an Object\n    obj = str;\n  }\n\n  var c = new Cookie();\n  for (var i=0; i<Cookie.serializableProperties.length; i++) {\n    var prop = Cookie.serializableProperties[i];\n    if (obj[prop] === undefined ||\n        obj[prop] === Cookie.prototype[prop])\n    {\n      continue; // leave as prototype default\n    }\n\n    if (prop === 'expires' ||\n        prop === 'creation' ||\n        prop === 'lastAccessed')\n    {\n      if (obj[prop] === null) {\n        c[prop] = null;\n      } else {\n        c[prop] = obj[prop] == \"Infinity\" ?\n          \"Infinity\" : new Date(obj[prop]);\n      }\n    } else {\n      c[prop] = obj[prop];\n    }\n  }\n\n  return c;\n}\n\n/* Section 5.4 part 2:\n * \"*  Cookies with longer paths are listed before cookies with\n *     shorter paths.\n *\n *  *  Among cookies that have equal-length path fields, cookies with\n *     earlier creation-times are listed before cookies with later\n *     creation-times.\"\n */\n\nfunction cookieCompare(a,b) {\n  var cmp = 0;\n\n  // descending for length: b CMP a\n  var aPathLen = a.path ? a.path.length : 0;\n  var bPathLen = b.path ? b.path.length : 0;\n  cmp = bPathLen - aPathLen;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  // ascending for time: a CMP b\n  var aTime = a.creation ? a.creation.getTime() : MAX_TIME;\n  var bTime = b.creation ? b.creation.getTime() : MAX_TIME;\n  cmp = aTime - bTime;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  // break ties for the same millisecond (precision of JavaScript's clock)\n  cmp = a.creationIndex - b.creationIndex;\n\n  return cmp;\n}\n\n// Gives the permutation of all possible pathMatch()es of a given path. The\n// array is in longest-to-shortest order.  Handy for indexing.\nfunction permutePath(path) {\n  if (path === '/') {\n    return ['/'];\n  }\n  if (path.lastIndexOf('/') === path.length-1) {\n    path = path.substr(0,path.length-1);\n  }\n  var permutations = [path];\n  while (path.length > 1) {\n    var lindex = path.lastIndexOf('/');\n    if (lindex === 0) {\n      break;\n    }\n    path = path.substr(0,lindex);\n    permutations.push(path);\n  }\n  permutations.push('/');\n  return permutations;\n}\n\nfunction getCookieContext(url) {\n  if (url instanceof Object) {\n    return url;\n  }\n  // NOTE: decodeURI will throw on malformed URIs (see GH-32).\n  // Therefore, we will just skip decoding for such URIs.\n  try {\n    url = decodeURI(url);\n  }\n  catch(err) {\n    // Silently swallow error\n  }\n\n  return urlParse(url);\n}\n\nfunction Cookie(options) {\n  options = options || {};\n\n  Object.keys(options).forEach(function(prop) {\n    if (Cookie.prototype.hasOwnProperty(prop) &&\n        Cookie.prototype[prop] !== options[prop] &&\n        prop.substr(0,1) !== '_')\n    {\n      this[prop] = options[prop];\n    }\n  }, this);\n\n  this.creation = this.creation || new Date();\n\n  // used to break creation ties in cookieCompare():\n  Object.defineProperty(this, 'creationIndex', {\n    configurable: false,\n    enumerable: false, // important for assert.deepEqual checks\n    writable: true,\n    value: ++Cookie.cookiesCreated\n  });\n}\n\nCookie.cookiesCreated = 0; // incremented each time a cookie is created\n\nCookie.parse = parse;\nCookie.fromJSON = fromJSON;\n\nCookie.prototype.key = \"\";\nCookie.prototype.value = \"\";\n\n// the order in which the RFC has them:\nCookie.prototype.expires = \"Infinity\"; // coerces to literal Infinity\nCookie.prototype.maxAge = null; // takes precedence over expires for TTL\nCookie.prototype.domain = null;\nCookie.prototype.path = null;\nCookie.prototype.secure = false;\nCookie.prototype.httpOnly = false;\nCookie.prototype.extensions = null;\n\n// set by the CookieJar:\nCookie.prototype.hostOnly = null; // boolean when set\nCookie.prototype.pathIsDefault = null; // boolean when set\nCookie.prototype.creation = null; // Date when set; defaulted by Cookie.parse\nCookie.prototype.lastAccessed = null; // Date when set\nObject.defineProperty(Cookie.prototype, 'creationIndex', {\n  configurable: true,\n  enumerable: false,\n  writable: true,\n  value: 0\n});\n\nCookie.serializableProperties = Object.keys(Cookie.prototype)\n  .filter(function(prop) {\n    return !(\n      Cookie.prototype[prop] instanceof Function ||\n      prop === 'creationIndex' ||\n      prop.substr(0,1) === '_'\n    );\n  });\n\nCookie.prototype.inspect = function inspect() {\n  var now = Date.now();\n  return 'Cookie=\"'+this.toString() +\n    '; hostOnly='+(this.hostOnly != null ? this.hostOnly : '?') +\n    '; aAge='+(this.lastAccessed ? (now-this.lastAccessed.getTime())+'ms' : '?') +\n    '; cAge='+(this.creation ? (now-this.creation.getTime())+'ms' : '?') +\n    '\"';\n};\n\nCookie.prototype.toJSON = function() {\n  var obj = {};\n\n  var props = Cookie.serializableProperties;\n  for (var i=0; i<props.length; i++) {\n    var prop = props[i];\n    if (this[prop] === Cookie.prototype[prop]) {\n      continue; // leave as prototype default\n    }\n\n    if (prop === 'expires' ||\n        prop === 'creation' ||\n        prop === 'lastAccessed')\n    {\n      if (this[prop] === null) {\n        obj[prop] = null;\n      } else {\n        obj[prop] = this[prop] == \"Infinity\" ? // intentionally not ===\n          \"Infinity\" : this[prop].toISOString();\n      }\n    } else if (prop === 'maxAge') {\n      if (this[prop] !== null) {\n        // again, intentionally not ===\n        obj[prop] = (this[prop] == Infinity || this[prop] == -Infinity) ?\n          this[prop].toString() : this[prop];\n      }\n    } else {\n      if (this[prop] !== Cookie.prototype[prop]) {\n        obj[prop] = this[prop];\n      }\n    }\n  }\n\n  return obj;\n};\n\nCookie.prototype.clone = function() {\n  return fromJSON(this.toJSON());\n};\n\nCookie.prototype.validate = function validate() {\n  if (!COOKIE_OCTETS.test(this.value)) {\n    return false;\n  }\n  if (this.expires != Infinity && !(this.expires instanceof Date) && !parseDate(this.expires)) {\n    return false;\n  }\n  if (this.maxAge != null && this.maxAge <= 0) {\n    return false; // \"Max-Age=\" non-zero-digit *DIGIT\n  }\n  if (this.path != null && !PATH_VALUE.test(this.path)) {\n    return false;\n  }\n\n  var cdomain = this.cdomain();\n  if (cdomain) {\n    if (cdomain.match(/\\.$/)) {\n      return false; // S4.1.2.3 suggests that this is bad. domainMatch() tests confirm this\n    }\n    var suffix = pubsuffix.getPublicSuffix(cdomain);\n    if (suffix == null) { // it's a public suffix\n      return false;\n    }\n  }\n  return true;\n};\n\nCookie.prototype.setExpires = function setExpires(exp) {\n  if (exp instanceof Date) {\n    this.expires = exp;\n  } else {\n    this.expires = parseDate(exp) || \"Infinity\";\n  }\n};\n\nCookie.prototype.setMaxAge = function setMaxAge(age) {\n  if (age === Infinity || age === -Infinity) {\n    this.maxAge = age.toString(); // so JSON.stringify() works\n  } else {\n    this.maxAge = age;\n  }\n};\n\n// gives Cookie header format\nCookie.prototype.cookieString = function cookieString() {\n  var val = this.value;\n  if (val == null) {\n    val = '';\n  }\n  if (this.key === '') {\n    return val;\n  }\n  return this.key+'='+val;\n};\n\n// gives Set-Cookie header format\nCookie.prototype.toString = function toString() {\n  var str = this.cookieString();\n\n  if (this.expires != Infinity) {\n    if (this.expires instanceof Date) {\n      str += '; Expires='+formatDate(this.expires);\n    } else {\n      str += '; Expires='+this.expires;\n    }\n  }\n\n  if (this.maxAge != null && this.maxAge != Infinity) {\n    str += '; Max-Age='+this.maxAge;\n  }\n\n  if (this.domain && !this.hostOnly) {\n    str += '; Domain='+this.domain;\n  }\n  if (this.path) {\n    str += '; Path='+this.path;\n  }\n\n  if (this.secure) {\n    str += '; Secure';\n  }\n  if (this.httpOnly) {\n    str += '; HttpOnly';\n  }\n  if (this.extensions) {\n    this.extensions.forEach(function(ext) {\n      str += '; '+ext;\n    });\n  }\n\n  return str;\n};\n\n// TTL() partially replaces the \"expiry-time\" parts of S5.3 step 3 (setCookie()\n// elsewhere)\n// S5.3 says to give the \"latest representable date\" for which we use Infinity\n// For \"expired\" we use 0\nCookie.prototype.TTL = function TTL(now) {\n  /* RFC6265 S4.1.2.2 If a cookie has both the Max-Age and the Expires\n   * attribute, the Max-Age attribute has precedence and controls the\n   * expiration date of the cookie.\n   * (Concurs with S5.3 step 3)\n   */\n  if (this.maxAge != null) {\n    return this.maxAge<=0 ? 0 : this.maxAge*1000;\n  }\n\n  var expires = this.expires;\n  if (expires != Infinity) {\n    if (!(expires instanceof Date)) {\n      expires = parseDate(expires) || Infinity;\n    }\n\n    if (expires == Infinity) {\n      return Infinity;\n    }\n\n    return expires.getTime() - (now || Date.now());\n  }\n\n  return Infinity;\n};\n\n// expiryTime() replaces the \"expiry-time\" parts of S5.3 step 3 (setCookie()\n// elsewhere)\nCookie.prototype.expiryTime = function expiryTime(now) {\n  if (this.maxAge != null) {\n    var relativeTo = now || this.creation || new Date();\n    var age = (this.maxAge <= 0) ? -Infinity : this.maxAge*1000;\n    return relativeTo.getTime() + age;\n  }\n\n  if (this.expires == Infinity) {\n    return Infinity;\n  }\n  return this.expires.getTime();\n};\n\n// expiryDate() replaces the \"expiry-time\" parts of S5.3 step 3 (setCookie()\n// elsewhere), except it returns a Date\nCookie.prototype.expiryDate = function expiryDate(now) {\n  var millisec = this.expiryTime(now);\n  if (millisec == Infinity) {\n    return new Date(MAX_TIME);\n  } else if (millisec == -Infinity) {\n    return new Date(MIN_TIME);\n  } else {\n    return new Date(millisec);\n  }\n};\n\n// This replaces the \"persistent-flag\" parts of S5.3 step 3\nCookie.prototype.isPersistent = function isPersistent() {\n  return (this.maxAge != null || this.expires != Infinity);\n};\n\n// Mostly S5.1.2 and S5.2.3:\nCookie.prototype.cdomain =\nCookie.prototype.canonicalizedDomain = function canonicalizedDomain() {\n  if (this.domain == null) {\n    return null;\n  }\n  return canonicalDomain(this.domain);\n};\n\nfunction CookieJar(store, options) {\n  if (typeof options === \"boolean\") {\n    options = {rejectPublicSuffixes: options};\n  } else if (options == null) {\n    options = {};\n  }\n  if (options.rejectPublicSuffixes != null) {\n    this.rejectPublicSuffixes = options.rejectPublicSuffixes;\n  }\n  if (options.looseMode != null) {\n    this.enableLooseMode = options.looseMode;\n  }\n\n  if (!store) {\n    store = new MemoryCookieStore();\n  }\n  this.store = store;\n}\nCookieJar.prototype.store = null;\nCookieJar.prototype.rejectPublicSuffixes = true;\nCookieJar.prototype.enableLooseMode = false;\nvar CAN_BE_SYNC = [];\n\nCAN_BE_SYNC.push('setCookie');\nCookieJar.prototype.setCookie = function(cookie, url, options, cb) {\n  var err;\n  var context = getCookieContext(url);\n  if (options instanceof Function) {\n    cb = options;\n    options = {};\n  }\n\n  var host = canonicalDomain(context.hostname);\n  var loose = this.enableLooseMode;\n  if (options.loose != null) {\n    loose = options.loose;\n  }\n\n  // S5.3 step 1\n  if (!(cookie instanceof Cookie)) {\n    cookie = Cookie.parse(cookie, { loose: loose });\n  }\n  if (!cookie) {\n    err = new Error(\"Cookie failed to parse\");\n    return cb(options.ignoreError ? null : err);\n  }\n\n  // S5.3 step 2\n  var now = options.now || new Date(); // will assign later to save effort in the face of errors\n\n  // S5.3 step 3: NOOP; persistent-flag and expiry-time is handled by getCookie()\n\n  // S5.3 step 4: NOOP; domain is null by default\n\n  // S5.3 step 5: public suffixes\n  if (this.rejectPublicSuffixes && cookie.domain) {\n    var suffix = pubsuffix.getPublicSuffix(cookie.cdomain());\n    if (suffix == null) { // e.g. \"com\"\n      err = new Error(\"Cookie has domain set to a public suffix\");\n      return cb(options.ignoreError ? null : err);\n    }\n  }\n\n  // S5.3 step 6:\n  if (cookie.domain) {\n    if (!domainMatch(host, cookie.cdomain(), false)) {\n      err = new Error(\"Cookie not in this host's domain. Cookie:\"+cookie.cdomain()+\" Request:\"+host);\n      return cb(options.ignoreError ? null : err);\n    }\n\n    if (cookie.hostOnly == null) { // don't reset if already set\n      cookie.hostOnly = false;\n    }\n\n  } else {\n    cookie.hostOnly = true;\n    cookie.domain = host;\n  }\n\n  //S5.2.4 If the attribute-value is empty or if the first character of the\n  //attribute-value is not %x2F (\"/\"):\n  //Let cookie-path be the default-path.\n  if (!cookie.path || cookie.path[0] !== '/') {\n    cookie.path = defaultPath(context.pathname);\n    cookie.pathIsDefault = true;\n  }\n\n  // S5.3 step 8: NOOP; secure attribute\n  // S5.3 step 9: NOOP; httpOnly attribute\n\n  // S5.3 step 10\n  if (options.http === false && cookie.httpOnly) {\n    err = new Error(\"Cookie is HttpOnly and this isn't an HTTP API\");\n    return cb(options.ignoreError ? null : err);\n  }\n\n  var store = this.store;\n\n  if (!store.updateCookie) {\n    store.updateCookie = function(oldCookie, newCookie, cb) {\n      this.putCookie(newCookie, cb);\n    };\n  }\n\n  function withCookie(err, oldCookie) {\n    if (err) {\n      return cb(err);\n    }\n\n    var next = function(err) {\n      if (err) {\n        return cb(err);\n      } else {\n        cb(null, cookie);\n      }\n    };\n\n    if (oldCookie) {\n      // S5.3 step 11 - \"If the cookie store contains a cookie with the same name,\n      // domain, and path as the newly created cookie:\"\n      if (options.http === false && oldCookie.httpOnly) { // step 11.2\n        err = new Error(\"old Cookie is HttpOnly and this isn't an HTTP API\");\n        return cb(options.ignoreError ? null : err);\n      }\n      cookie.creation = oldCookie.creation; // step 11.3\n      cookie.creationIndex = oldCookie.creationIndex; // preserve tie-breaker\n      cookie.lastAccessed = now;\n      // Step 11.4 (delete cookie) is implied by just setting the new one:\n      store.updateCookie(oldCookie, cookie, next); // step 12\n\n    } else {\n      cookie.creation = cookie.lastAccessed = now;\n      store.putCookie(cookie, next); // step 12\n    }\n  }\n\n  store.findCookie(cookie.domain, cookie.path, cookie.key, withCookie);\n};\n\n// RFC6365 S5.4\nCAN_BE_SYNC.push('getCookies');\nCookieJar.prototype.getCookies = function(url, options, cb) {\n  var context = getCookieContext(url);\n  if (options instanceof Function) {\n    cb = options;\n    options = {};\n  }\n\n  var host = canonicalDomain(context.hostname);\n  var path = context.pathname || '/';\n\n  var secure = options.secure;\n  if (secure == null && context.protocol &&\n      (context.protocol == 'https:' || context.protocol == 'wss:'))\n  {\n    secure = true;\n  }\n\n  var http = options.http;\n  if (http == null) {\n    http = true;\n  }\n\n  var now = options.now || Date.now();\n  var expireCheck = options.expire !== false;\n  var allPaths = !!options.allPaths;\n  var store = this.store;\n\n  function matchingCookie(c) {\n    // \"Either:\n    //   The cookie's host-only-flag is true and the canonicalized\n    //   request-host is identical to the cookie's domain.\n    // Or:\n    //   The cookie's host-only-flag is false and the canonicalized\n    //   request-host domain-matches the cookie's domain.\"\n    if (c.hostOnly) {\n      if (c.domain != host) {\n        return false;\n      }\n    } else {\n      if (!domainMatch(host, c.domain, false)) {\n        return false;\n      }\n    }\n\n    // \"The request-uri's path path-matches the cookie's path.\"\n    if (!allPaths && !pathMatch(path, c.path)) {\n      return false;\n    }\n\n    // \"If the cookie's secure-only-flag is true, then the request-uri's\n    // scheme must denote a \"secure\" protocol\"\n    if (c.secure && !secure) {\n      return false;\n    }\n\n    // \"If the cookie's http-only-flag is true, then exclude the cookie if the\n    // cookie-string is being generated for a \"non-HTTP\" API\"\n    if (c.httpOnly && !http) {\n      return false;\n    }\n\n    // deferred from S5.3\n    // non-RFC: allow retention of expired cookies by choice\n    if (expireCheck && c.expiryTime() <= now) {\n      store.removeCookie(c.domain, c.path, c.key, function(){}); // result ignored\n      return false;\n    }\n\n    return true;\n  }\n\n  store.findCookies(host, allPaths ? null : path, function(err,cookies) {\n    if (err) {\n      return cb(err);\n    }\n\n    cookies = cookies.filter(matchingCookie);\n\n    // sorting of S5.4 part 2\n    if (options.sort !== false) {\n      cookies = cookies.sort(cookieCompare);\n    }\n\n    // S5.4 part 3\n    var now = new Date();\n    cookies.forEach(function(c) {\n      c.lastAccessed = now;\n    });\n    // TODO persist lastAccessed\n\n    cb(null,cookies);\n  });\n};\n\nCAN_BE_SYNC.push('getCookieString');\nCookieJar.prototype.getCookieString = function(/*..., cb*/) {\n  var args = Array.prototype.slice.call(arguments,0);\n  var cb = args.pop();\n  var next = function(err,cookies) {\n    if (err) {\n      cb(err);\n    } else {\n      cb(null, cookies\n        .sort(cookieCompare)\n        .map(function(c){\n          return c.cookieString();\n        })\n        .join('; '));\n    }\n  };\n  args.push(next);\n  this.getCookies.apply(this,args);\n};\n\nCAN_BE_SYNC.push('getSetCookieStrings');\nCookieJar.prototype.getSetCookieStrings = function(/*..., cb*/) {\n  var args = Array.prototype.slice.call(arguments,0);\n  var cb = args.pop();\n  var next = function(err,cookies) {\n    if (err) {\n      cb(err);\n    } else {\n      cb(null, cookies.map(function(c){\n        return c.toString();\n      }));\n    }\n  };\n  args.push(next);\n  this.getCookies.apply(this,args);\n};\n\nCAN_BE_SYNC.push('serialize');\nCookieJar.prototype.serialize = function(cb) {\n  var type = this.store.constructor.name;\n  if (type === 'Object') {\n    type = null;\n  }\n\n  // update README.md \"Serialization Format\" if you change this, please!\n  var serialized = {\n    // The version of tough-cookie that serialized this jar. Generally a good\n    // practice since future versions can make data import decisions based on\n    // known past behavior. When/if this matters, use `semver`.\n    version: 'tough-cookie@'+VERSION,\n\n    // add the store type, to make humans happy:\n    storeType: type,\n\n    // CookieJar configuration:\n    rejectPublicSuffixes: !!this.rejectPublicSuffixes,\n\n    // this gets filled from getAllCookies:\n    cookies: []\n  };\n\n  if (!(this.store.getAllCookies &&\n        typeof this.store.getAllCookies === 'function'))\n  {\n    return cb(new Error('store does not support getAllCookies and cannot be serialized'));\n  }\n\n  this.store.getAllCookies(function(err,cookies) {\n    if (err) {\n      return cb(err);\n    }\n\n    serialized.cookies = cookies.map(function(cookie) {\n      // convert to serialized 'raw' cookies\n      cookie = (cookie instanceof Cookie) ? cookie.toJSON() : cookie;\n\n      // Remove the index so new ones get assigned during deserialization\n      delete cookie.creationIndex;\n\n      return cookie;\n    });\n\n    return cb(null, serialized);\n  });\n};\n\n// well-known name that JSON.stringify calls\nCookieJar.prototype.toJSON = function() {\n  return this.serializeSync();\n};\n\n// use the class method CookieJar.deserialize instead of calling this directly\nCAN_BE_SYNC.push('_importCookies');\nCookieJar.prototype._importCookies = function(serialized, cb) {\n  var jar = this;\n  var cookies = serialized.cookies;\n  if (!cookies || !Array.isArray(cookies)) {\n    return cb(new Error('serialized jar has no cookies array'));\n  }\n  cookies = cookies.slice(); // do not modify the original\n\n  function putNext(err) {\n    if (err) {\n      return cb(err);\n    }\n\n    if (!cookies.length) {\n      return cb(err, jar);\n    }\n\n    var cookie;\n    try {\n      cookie = fromJSON(cookies.shift());\n    } catch (e) {\n      return cb(e);\n    }\n\n    if (cookie === null) {\n      return putNext(null); // skip this cookie\n    }\n\n    jar.store.putCookie(cookie, putNext);\n  }\n\n  putNext();\n};\n\nCookieJar.deserialize = function(strOrObj, store, cb) {\n  if (arguments.length !== 3) {\n    // store is optional\n    cb = store;\n    store = null;\n  }\n\n  var serialized;\n  if (typeof strOrObj === 'string') {\n    serialized = jsonParse(strOrObj);\n    if (serialized instanceof Error) {\n      return cb(serialized);\n    }\n  } else {\n    serialized = strOrObj;\n  }\n\n  var jar = new CookieJar(store, serialized.rejectPublicSuffixes);\n  jar._importCookies(serialized, function(err) {\n    if (err) {\n      return cb(err);\n    }\n    cb(null, jar);\n  });\n};\n\nCookieJar.deserializeSync = function(strOrObj, store) {\n  var serialized = typeof strOrObj === 'string' ?\n    JSON.parse(strOrObj) : strOrObj;\n  var jar = new CookieJar(store, serialized.rejectPublicSuffixes);\n\n  // catch this mistake early:\n  if (!jar.store.synchronous) {\n    throw new Error('CookieJar store is not synchronous; use async API instead.');\n  }\n\n  jar._importCookiesSync(serialized);\n  return jar;\n};\nCookieJar.fromJSON = CookieJar.deserializeSync;\n\nCAN_BE_SYNC.push('clone');\nCookieJar.prototype.clone = function(newStore, cb) {\n  if (arguments.length === 1) {\n    cb = newStore;\n    newStore = null;\n  }\n\n  this.serialize(function(err,serialized) {\n    if (err) {\n      return cb(err);\n    }\n    CookieJar.deserialize(newStore, serialized, cb);\n  });\n};\n\n// Use a closure to provide a true imperative API for synchronous stores.\nfunction syncWrap(method) {\n  return function() {\n    if (!this.store.synchronous) {\n      throw new Error('CookieJar store is not synchronous; use async API instead.');\n    }\n\n    var args = Array.prototype.slice.call(arguments);\n    var syncErr, syncResult;\n    args.push(function syncCb(err, result) {\n      syncErr = err;\n      syncResult = result;\n    });\n    this[method].apply(this, args);\n\n    if (syncErr) {\n      throw syncErr;\n    }\n    return syncResult;\n  };\n}\n\n// wrap all declared CAN_BE_SYNC methods in the sync wrapper\nCAN_BE_SYNC.forEach(function(method) {\n  CookieJar.prototype[method+'Sync'] = syncWrap(method);\n});\n\nmodule.exports = {\n  CookieJar: CookieJar,\n  Cookie: Cookie,\n  Store: Store,\n  MemoryCookieStore: MemoryCookieStore,\n  parseDate: parseDate,\n  formatDate: formatDate,\n  parse: parse,\n  fromJSON: fromJSON,\n  domainMatch: domainMatch,\n  defaultPath: defaultPath,\n  pathMatch: pathMatch,\n  getPublicSuffix: pubsuffix.getPublicSuffix,\n  cookieCompare: cookieCompare,\n  permuteDomain: require('./permuteDomain').permuteDomain,\n  permutePath: permutePath,\n  canonicalDomain: canonicalDomain\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}