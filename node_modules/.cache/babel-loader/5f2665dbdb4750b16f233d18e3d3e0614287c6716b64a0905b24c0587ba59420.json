{"ast":null,"code":"// Copyright 2015 Joyent, Inc.\n\nmodule.exports = SSHBuffer;\nvar assert = require('assert-plus');\nvar Buffer = require('safer-buffer').Buffer;\nfunction SSHBuffer(opts) {\n  assert.object(opts, 'options');\n  if (opts.buffer !== undefined) assert.buffer(opts.buffer, 'options.buffer');\n  this._size = opts.buffer ? opts.buffer.length : 1024;\n  this._buffer = opts.buffer || Buffer.alloc(this._size);\n  this._offset = 0;\n}\nSSHBuffer.prototype.toBuffer = function () {\n  return this._buffer.slice(0, this._offset);\n};\nSSHBuffer.prototype.atEnd = function () {\n  return this._offset >= this._buffer.length;\n};\nSSHBuffer.prototype.remainder = function () {\n  return this._buffer.slice(this._offset);\n};\nSSHBuffer.prototype.skip = function (n) {\n  this._offset += n;\n};\nSSHBuffer.prototype.expand = function () {\n  this._size *= 2;\n  var buf = Buffer.alloc(this._size);\n  this._buffer.copy(buf, 0);\n  this._buffer = buf;\n};\nSSHBuffer.prototype.readPart = function () {\n  return {\n    data: this.readBuffer()\n  };\n};\nSSHBuffer.prototype.readBuffer = function () {\n  var len = this._buffer.readUInt32BE(this._offset);\n  this._offset += 4;\n  assert.ok(this._offset + len <= this._buffer.length, 'length out of bounds at +0x' + this._offset.toString(16) + ' (data truncated?)');\n  var buf = this._buffer.slice(this._offset, this._offset + len);\n  this._offset += len;\n  return buf;\n};\nSSHBuffer.prototype.readString = function () {\n  return this.readBuffer().toString();\n};\nSSHBuffer.prototype.readCString = function () {\n  var offset = this._offset;\n  while (offset < this._buffer.length && this._buffer[offset] !== 0x00) offset++;\n  assert.ok(offset < this._buffer.length, 'c string does not terminate');\n  var str = this._buffer.slice(this._offset, offset).toString();\n  this._offset = offset + 1;\n  return str;\n};\nSSHBuffer.prototype.readInt = function () {\n  var v = this._buffer.readUInt32BE(this._offset);\n  this._offset += 4;\n  return v;\n};\nSSHBuffer.prototype.readInt64 = function () {\n  assert.ok(this._offset + 8 < this._buffer.length, 'buffer not long enough to read Int64');\n  var v = this._buffer.slice(this._offset, this._offset + 8);\n  this._offset += 8;\n  return v;\n};\nSSHBuffer.prototype.readChar = function () {\n  var v = this._buffer[this._offset++];\n  return v;\n};\nSSHBuffer.prototype.writeBuffer = function (buf) {\n  while (this._offset + 4 + buf.length > this._size) this.expand();\n  this._buffer.writeUInt32BE(buf.length, this._offset);\n  this._offset += 4;\n  buf.copy(this._buffer, this._offset);\n  this._offset += buf.length;\n};\nSSHBuffer.prototype.writeString = function (str) {\n  this.writeBuffer(Buffer.from(str, 'utf8'));\n};\nSSHBuffer.prototype.writeCString = function (str) {\n  while (this._offset + 1 + str.length > this._size) this.expand();\n  this._buffer.write(str, this._offset);\n  this._offset += str.length;\n  this._buffer[this._offset++] = 0;\n};\nSSHBuffer.prototype.writeInt = function (v) {\n  while (this._offset + 4 > this._size) this.expand();\n  this._buffer.writeUInt32BE(v, this._offset);\n  this._offset += 4;\n};\nSSHBuffer.prototype.writeInt64 = function (v) {\n  assert.buffer(v, 'value');\n  if (v.length > 8) {\n    var lead = v.slice(0, v.length - 8);\n    for (var i = 0; i < lead.length; ++i) {\n      assert.strictEqual(lead[i], 0, 'must fit in 64 bits of precision');\n    }\n    v = v.slice(v.length - 8, v.length);\n  }\n  while (this._offset + 8 > this._size) this.expand();\n  v.copy(this._buffer, this._offset);\n  this._offset += 8;\n};\nSSHBuffer.prototype.writeChar = function (v) {\n  while (this._offset + 1 > this._size) this.expand();\n  this._buffer[this._offset++] = v;\n};\nSSHBuffer.prototype.writePart = function (p) {\n  this.writeBuffer(p.data);\n};\nSSHBuffer.prototype.write = function (buf) {\n  while (this._offset + buf.length > this._size) this.expand();\n  buf.copy(this._buffer, this._offset);\n  this._offset += buf.length;\n};","map":{"version":3,"names":["module","exports","SSHBuffer","assert","require","Buffer","opts","object","buffer","undefined","_size","length","_buffer","alloc","_offset","prototype","toBuffer","slice","atEnd","remainder","skip","n","expand","buf","copy","readPart","data","readBuffer","len","readUInt32BE","ok","toString","readString","readCString","offset","str","readInt","v","readInt64","readChar","writeBuffer","writeUInt32BE","writeString","from","writeCString","write","writeInt","writeInt64","lead","i","strictEqual","writeChar","writePart","p"],"sources":["/Users/mohitgupta/Downloads/orgs/Clone/inst/node_modules/sshpk/lib/ssh-buffer.js"],"sourcesContent":["// Copyright 2015 Joyent, Inc.\n\nmodule.exports = SSHBuffer;\n\nvar assert = require('assert-plus');\nvar Buffer = require('safer-buffer').Buffer;\n\nfunction SSHBuffer(opts) {\n\tassert.object(opts, 'options');\n\tif (opts.buffer !== undefined)\n\t\tassert.buffer(opts.buffer, 'options.buffer');\n\n\tthis._size = opts.buffer ? opts.buffer.length : 1024;\n\tthis._buffer = opts.buffer || Buffer.alloc(this._size);\n\tthis._offset = 0;\n}\n\nSSHBuffer.prototype.toBuffer = function () {\n\treturn (this._buffer.slice(0, this._offset));\n};\n\nSSHBuffer.prototype.atEnd = function () {\n\treturn (this._offset >= this._buffer.length);\n};\n\nSSHBuffer.prototype.remainder = function () {\n\treturn (this._buffer.slice(this._offset));\n};\n\nSSHBuffer.prototype.skip = function (n) {\n\tthis._offset += n;\n};\n\nSSHBuffer.prototype.expand = function () {\n\tthis._size *= 2;\n\tvar buf = Buffer.alloc(this._size);\n\tthis._buffer.copy(buf, 0);\n\tthis._buffer = buf;\n};\n\nSSHBuffer.prototype.readPart = function () {\n\treturn ({data: this.readBuffer()});\n};\n\nSSHBuffer.prototype.readBuffer = function () {\n\tvar len = this._buffer.readUInt32BE(this._offset);\n\tthis._offset += 4;\n\tassert.ok(this._offset + len <= this._buffer.length,\n\t    'length out of bounds at +0x' + this._offset.toString(16) +\n\t    ' (data truncated?)');\n\tvar buf = this._buffer.slice(this._offset, this._offset + len);\n\tthis._offset += len;\n\treturn (buf);\n};\n\nSSHBuffer.prototype.readString = function () {\n\treturn (this.readBuffer().toString());\n};\n\nSSHBuffer.prototype.readCString = function () {\n\tvar offset = this._offset;\n\twhile (offset < this._buffer.length &&\n\t    this._buffer[offset] !== 0x00)\n\t\toffset++;\n\tassert.ok(offset < this._buffer.length, 'c string does not terminate');\n\tvar str = this._buffer.slice(this._offset, offset).toString();\n\tthis._offset = offset + 1;\n\treturn (str);\n};\n\nSSHBuffer.prototype.readInt = function () {\n\tvar v = this._buffer.readUInt32BE(this._offset);\n\tthis._offset += 4;\n\treturn (v);\n};\n\nSSHBuffer.prototype.readInt64 = function () {\n\tassert.ok(this._offset + 8 < this._buffer.length,\n\t    'buffer not long enough to read Int64');\n\tvar v = this._buffer.slice(this._offset, this._offset + 8);\n\tthis._offset += 8;\n\treturn (v);\n};\n\nSSHBuffer.prototype.readChar = function () {\n\tvar v = this._buffer[this._offset++];\n\treturn (v);\n};\n\nSSHBuffer.prototype.writeBuffer = function (buf) {\n\twhile (this._offset + 4 + buf.length > this._size)\n\t\tthis.expand();\n\tthis._buffer.writeUInt32BE(buf.length, this._offset);\n\tthis._offset += 4;\n\tbuf.copy(this._buffer, this._offset);\n\tthis._offset += buf.length;\n};\n\nSSHBuffer.prototype.writeString = function (str) {\n\tthis.writeBuffer(Buffer.from(str, 'utf8'));\n};\n\nSSHBuffer.prototype.writeCString = function (str) {\n\twhile (this._offset + 1 + str.length > this._size)\n\t\tthis.expand();\n\tthis._buffer.write(str, this._offset);\n\tthis._offset += str.length;\n\tthis._buffer[this._offset++] = 0;\n};\n\nSSHBuffer.prototype.writeInt = function (v) {\n\twhile (this._offset + 4 > this._size)\n\t\tthis.expand();\n\tthis._buffer.writeUInt32BE(v, this._offset);\n\tthis._offset += 4;\n};\n\nSSHBuffer.prototype.writeInt64 = function (v) {\n\tassert.buffer(v, 'value');\n\tif (v.length > 8) {\n\t\tvar lead = v.slice(0, v.length - 8);\n\t\tfor (var i = 0; i < lead.length; ++i) {\n\t\t\tassert.strictEqual(lead[i], 0,\n\t\t\t    'must fit in 64 bits of precision');\n\t\t}\n\t\tv = v.slice(v.length - 8, v.length);\n\t}\n\twhile (this._offset + 8 > this._size)\n\t\tthis.expand();\n\tv.copy(this._buffer, this._offset);\n\tthis._offset += 8;\n};\n\nSSHBuffer.prototype.writeChar = function (v) {\n\twhile (this._offset + 1 > this._size)\n\t\tthis.expand();\n\tthis._buffer[this._offset++] = v;\n};\n\nSSHBuffer.prototype.writePart = function (p) {\n\tthis.writeBuffer(p.data);\n};\n\nSSHBuffer.prototype.write = function (buf) {\n\twhile (this._offset + buf.length > this._size)\n\t\tthis.expand();\n\tbuf.copy(this._buffer, this._offset);\n\tthis._offset += buf.length;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}