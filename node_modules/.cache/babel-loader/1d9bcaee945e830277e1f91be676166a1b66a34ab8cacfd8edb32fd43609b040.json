{"ast":null,"code":"'use strict';\n\nvar crypto = require('crypto');\nfunction randomString(size) {\n  var bits = (size + 1) * 6;\n  var buffer = crypto.randomBytes(Math.ceil(bits / 8));\n  var string = buffer.toString('base64').replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\n  return string.slice(0, size);\n}\nfunction calculatePayloadHash(payload, algorithm, contentType) {\n  var hash = crypto.createHash(algorithm);\n  hash.update('hawk.1.payload\\n');\n  hash.update((contentType ? contentType.split(';')[0].trim().toLowerCase() : '') + '\\n');\n  hash.update(payload || '');\n  hash.update('\\n');\n  return hash.digest('base64');\n}\nexports.calculateMac = function (credentials, opts) {\n  var normalized = 'hawk.1.header\\n' + opts.ts + '\\n' + opts.nonce + '\\n' + (opts.method || '').toUpperCase() + '\\n' + opts.resource + '\\n' + opts.host.toLowerCase() + '\\n' + opts.port + '\\n' + (opts.hash || '') + '\\n';\n  if (opts.ext) {\n    normalized = normalized + opts.ext.replace('\\\\', '\\\\\\\\').replace('\\n', '\\\\n');\n  }\n  normalized = normalized + '\\n';\n  if (opts.app) {\n    normalized = normalized + opts.app + '\\n' + (opts.dlg || '') + '\\n';\n  }\n  var hmac = crypto.createHmac(credentials.algorithm, credentials.key).update(normalized);\n  var digest = hmac.digest('base64');\n  return digest;\n};\nexports.header = function (uri, method, opts) {\n  var timestamp = opts.timestamp || Math.floor((Date.now() + (opts.localtimeOffsetMsec || 0)) / 1000);\n  var credentials = opts.credentials;\n  if (!credentials || !credentials.id || !credentials.key || !credentials.algorithm) {\n    return '';\n  }\n  if (['sha1', 'sha256'].indexOf(credentials.algorithm) === -1) {\n    return '';\n  }\n  var artifacts = {\n    ts: timestamp,\n    nonce: opts.nonce || randomString(6),\n    method: method,\n    resource: uri.pathname + (uri.search || ''),\n    host: uri.hostname,\n    port: uri.port || (uri.protocol === 'http:' ? 80 : 443),\n    hash: opts.hash,\n    ext: opts.ext,\n    app: opts.app,\n    dlg: opts.dlg\n  };\n  if (!artifacts.hash && (opts.payload || opts.payload === '')) {\n    artifacts.hash = calculatePayloadHash(opts.payload, credentials.algorithm, opts.contentType);\n  }\n  var mac = exports.calculateMac(credentials, artifacts);\n  var hasExt = artifacts.ext !== null && artifacts.ext !== undefined && artifacts.ext !== '';\n  var header = 'Hawk id=\"' + credentials.id + '\", ts=\"' + artifacts.ts + '\", nonce=\"' + artifacts.nonce + (artifacts.hash ? '\", hash=\"' + artifacts.hash : '') + (hasExt ? '\", ext=\"' + artifacts.ext.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"') : '') + '\", mac=\"' + mac + '\"';\n  if (artifacts.app) {\n    header = header + ', app=\"' + artifacts.app + (artifacts.dlg ? '\", dlg=\"' + artifacts.dlg : '') + '\"';\n  }\n  return header;\n};","map":{"version":3,"names":["crypto","require","randomString","size","bits","buffer","randomBytes","Math","ceil","string","toString","replace","slice","calculatePayloadHash","payload","algorithm","contentType","hash","createHash","update","split","trim","toLowerCase","digest","exports","calculateMac","credentials","opts","normalized","ts","nonce","method","toUpperCase","resource","host","port","ext","app","dlg","hmac","createHmac","key","header","uri","timestamp","floor","Date","now","localtimeOffsetMsec","id","indexOf","artifacts","pathname","search","hostname","protocol","mac","hasExt","undefined"],"sources":["/Users/mohitgupta/Downloads/orgs/Clone/inst/node_modules/request/lib/hawk.js"],"sourcesContent":["'use strict'\n\nvar crypto = require('crypto')\n\nfunction randomString (size) {\n  var bits = (size + 1) * 6\n  var buffer = crypto.randomBytes(Math.ceil(bits / 8))\n  var string = buffer.toString('base64').replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '')\n  return string.slice(0, size)\n}\n\nfunction calculatePayloadHash (payload, algorithm, contentType) {\n  var hash = crypto.createHash(algorithm)\n  hash.update('hawk.1.payload\\n')\n  hash.update((contentType ? contentType.split(';')[0].trim().toLowerCase() : '') + '\\n')\n  hash.update(payload || '')\n  hash.update('\\n')\n  return hash.digest('base64')\n}\n\nexports.calculateMac = function (credentials, opts) {\n  var normalized = 'hawk.1.header\\n' +\n    opts.ts + '\\n' +\n    opts.nonce + '\\n' +\n    (opts.method || '').toUpperCase() + '\\n' +\n    opts.resource + '\\n' +\n    opts.host.toLowerCase() + '\\n' +\n    opts.port + '\\n' +\n    (opts.hash || '') + '\\n'\n\n  if (opts.ext) {\n    normalized = normalized + opts.ext.replace('\\\\', '\\\\\\\\').replace('\\n', '\\\\n')\n  }\n\n  normalized = normalized + '\\n'\n\n  if (opts.app) {\n    normalized = normalized + opts.app + '\\n' + (opts.dlg || '') + '\\n'\n  }\n\n  var hmac = crypto.createHmac(credentials.algorithm, credentials.key).update(normalized)\n  var digest = hmac.digest('base64')\n  return digest\n}\n\nexports.header = function (uri, method, opts) {\n  var timestamp = opts.timestamp || Math.floor((Date.now() + (opts.localtimeOffsetMsec || 0)) / 1000)\n  var credentials = opts.credentials\n  if (!credentials || !credentials.id || !credentials.key || !credentials.algorithm) {\n    return ''\n  }\n\n  if (['sha1', 'sha256'].indexOf(credentials.algorithm) === -1) {\n    return ''\n  }\n\n  var artifacts = {\n    ts: timestamp,\n    nonce: opts.nonce || randomString(6),\n    method: method,\n    resource: uri.pathname + (uri.search || ''),\n    host: uri.hostname,\n    port: uri.port || (uri.protocol === 'http:' ? 80 : 443),\n    hash: opts.hash,\n    ext: opts.ext,\n    app: opts.app,\n    dlg: opts.dlg\n  }\n\n  if (!artifacts.hash && (opts.payload || opts.payload === '')) {\n    artifacts.hash = calculatePayloadHash(opts.payload, credentials.algorithm, opts.contentType)\n  }\n\n  var mac = exports.calculateMac(credentials, artifacts)\n\n  var hasExt = artifacts.ext !== null && artifacts.ext !== undefined && artifacts.ext !== ''\n  var header = 'Hawk id=\"' + credentials.id +\n    '\", ts=\"' + artifacts.ts +\n    '\", nonce=\"' + artifacts.nonce +\n    (artifacts.hash ? '\", hash=\"' + artifacts.hash : '') +\n    (hasExt ? '\", ext=\"' + artifacts.ext.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"') : '') +\n    '\", mac=\"' + mac + '\"'\n\n  if (artifacts.app) {\n    header = header + ', app=\"' + artifacts.app + (artifacts.dlg ? '\", dlg=\"' + artifacts.dlg : '') + '\"'\n  }\n\n  return header\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}