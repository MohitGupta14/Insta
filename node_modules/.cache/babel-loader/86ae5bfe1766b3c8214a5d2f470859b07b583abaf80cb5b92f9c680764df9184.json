{"ast":null,"code":"/*!\n * Copyright (c) 2015, Salesforce.com, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of Salesforce.com nor the names of its contributors may\n * be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n'use strict';\n\n/*jshint unused:false */\nfunction Store() {}\nexports.Store = Store;\n\n// Stores may be synchronous, but are still required to use a\n// Continuation-Passing Style API.  The CookieJar itself will expose a \"*Sync\"\n// API that converts from synchronous-callbacks to imperative style.\nStore.prototype.synchronous = false;\nStore.prototype.findCookie = function (domain, path, key, cb) {\n  throw new Error('findCookie is not implemented');\n};\nStore.prototype.findCookies = function (domain, path, cb) {\n  throw new Error('findCookies is not implemented');\n};\nStore.prototype.putCookie = function (cookie, cb) {\n  throw new Error('putCookie is not implemented');\n};\nStore.prototype.updateCookie = function (oldCookie, newCookie, cb) {\n  // recommended default implementation:\n  // return this.putCookie(newCookie, cb);\n  throw new Error('updateCookie is not implemented');\n};\nStore.prototype.removeCookie = function (domain, path, key, cb) {\n  throw new Error('removeCookie is not implemented');\n};\nStore.prototype.removeCookies = function (domain, path, cb) {\n  throw new Error('removeCookies is not implemented');\n};\nStore.prototype.getAllCookies = function (cb) {\n  throw new Error('getAllCookies is not implemented (therefore jar cannot be serialized)');\n};","map":{"version":3,"names":["Store","exports","prototype","synchronous","findCookie","domain","path","key","cb","Error","findCookies","putCookie","cookie","updateCookie","oldCookie","newCookie","removeCookie","removeCookies","getAllCookies"],"sources":["/Users/mohitgupta/Downloads/orgs/Clone/inst/node_modules/tough-cookie/lib/store.js"],"sourcesContent":["/*!\n * Copyright (c) 2015, Salesforce.com, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of Salesforce.com nor the names of its contributors may\n * be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n'use strict';\n/*jshint unused:false */\n\nfunction Store() {\n}\nexports.Store = Store;\n\n// Stores may be synchronous, but are still required to use a\n// Continuation-Passing Style API.  The CookieJar itself will expose a \"*Sync\"\n// API that converts from synchronous-callbacks to imperative style.\nStore.prototype.synchronous = false;\n\nStore.prototype.findCookie = function(domain, path, key, cb) {\n  throw new Error('findCookie is not implemented');\n};\n\nStore.prototype.findCookies = function(domain, path, cb) {\n  throw new Error('findCookies is not implemented');\n};\n\nStore.prototype.putCookie = function(cookie, cb) {\n  throw new Error('putCookie is not implemented');\n};\n\nStore.prototype.updateCookie = function(oldCookie, newCookie, cb) {\n  // recommended default implementation:\n  // return this.putCookie(newCookie, cb);\n  throw new Error('updateCookie is not implemented');\n};\n\nStore.prototype.removeCookie = function(domain, path, key, cb) {\n  throw new Error('removeCookie is not implemented');\n};\n\nStore.prototype.removeCookies = function(domain, path, cb) {\n  throw new Error('removeCookies is not implemented');\n};\n\nStore.prototype.getAllCookies = function(cb) {\n  throw new Error('getAllCookies is not implemented (therefore jar cannot be serialized)');\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AACZ;AAEA,SAASA,KAAKA,CAAA,EAAG,CACjB;AACAC,OAAO,CAACD,KAAK,GAAGA,KAAK;;AAErB;AACA;AACA;AACAA,KAAK,CAACE,SAAS,CAACC,WAAW,GAAG,KAAK;AAEnCH,KAAK,CAACE,SAAS,CAACE,UAAU,GAAG,UAASC,MAAM,EAAEC,IAAI,EAAEC,GAAG,EAAEC,EAAE,EAAE;EAC3D,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;AAClD,CAAC;AAEDT,KAAK,CAACE,SAAS,CAACQ,WAAW,GAAG,UAASL,MAAM,EAAEC,IAAI,EAAEE,EAAE,EAAE;EACvD,MAAM,IAAIC,KAAK,CAAC,gCAAgC,CAAC;AACnD,CAAC;AAEDT,KAAK,CAACE,SAAS,CAACS,SAAS,GAAG,UAASC,MAAM,EAAEJ,EAAE,EAAE;EAC/C,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;AACjD,CAAC;AAEDT,KAAK,CAACE,SAAS,CAACW,YAAY,GAAG,UAASC,SAAS,EAAEC,SAAS,EAAEP,EAAE,EAAE;EAChE;EACA;EACA,MAAM,IAAIC,KAAK,CAAC,iCAAiC,CAAC;AACpD,CAAC;AAEDT,KAAK,CAACE,SAAS,CAACc,YAAY,GAAG,UAASX,MAAM,EAAEC,IAAI,EAAEC,GAAG,EAAEC,EAAE,EAAE;EAC7D,MAAM,IAAIC,KAAK,CAAC,iCAAiC,CAAC;AACpD,CAAC;AAEDT,KAAK,CAACE,SAAS,CAACe,aAAa,GAAG,UAASZ,MAAM,EAAEC,IAAI,EAAEE,EAAE,EAAE;EACzD,MAAM,IAAIC,KAAK,CAAC,kCAAkC,CAAC;AACrD,CAAC;AAEDT,KAAK,CAACE,SAAS,CAACgB,aAAa,GAAG,UAASV,EAAE,EAAE;EAC3C,MAAM,IAAIC,KAAK,CAAC,uEAAuE,CAAC;AAC1F,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}