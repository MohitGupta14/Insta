{"ast":null,"code":"'use strict';\n\nmodule.exports = function generate_properties(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $key = 'key' + $lvl,\n    $idx = 'idx' + $lvl,\n    $dataNxt = $it.dataLevel = it.dataLevel + 1,\n    $nextData = 'data' + $dataNxt,\n    $dataProperties = 'dataProperties' + $lvl;\n  var $schemaKeys = Object.keys($schema || {}),\n    $pProperties = it.schema.patternProperties || {},\n    $pPropertyKeys = Object.keys($pProperties),\n    $aProperties = it.schema.additionalProperties,\n    $someProperties = $schemaKeys.length || $pPropertyKeys.length,\n    $noAdditional = $aProperties === false,\n    $additionalIsSchema = typeof $aProperties == 'object' && Object.keys($aProperties).length,\n    $removeAdditional = it.opts.removeAdditional,\n    $checkAdditional = $noAdditional || $additionalIsSchema || $removeAdditional,\n    $ownProperties = it.opts.ownProperties,\n    $currentBaseId = it.baseId;\n  var $required = it.schema.required;\n  if ($required && !(it.opts.v5 && $required.$data) && $required.length < it.opts.loopRequired) var $requiredHash = it.util.toHash($required);\n  if (it.opts.patternGroups) {\n    var $pgProperties = it.schema.patternGroups || {},\n      $pgPropertyKeys = Object.keys($pgProperties);\n  }\n  out += 'var ' + $errs + ' = errors;var ' + $nextValid + ' = true;';\n  if ($ownProperties) {\n    out += ' var ' + $dataProperties + ' = undefined;';\n  }\n  if ($checkAdditional) {\n    if ($ownProperties) {\n      out += ' ' + $dataProperties + ' = ' + $dataProperties + ' || Object.keys(' + $data + '); for (var ' + $idx + '=0; ' + $idx + '<' + $dataProperties + '.length; ' + $idx + '++) { var ' + $key + ' = ' + $dataProperties + '[' + $idx + ']; ';\n    } else {\n      out += ' for (var ' + $key + ' in ' + $data + ') { ';\n    }\n    if ($someProperties) {\n      out += ' var isAdditional' + $lvl + ' = !(false ';\n      if ($schemaKeys.length) {\n        if ($schemaKeys.length > 5) {\n          out += ' || validate.schema' + $schemaPath + '[' + $key + '] ';\n        } else {\n          var arr1 = $schemaKeys;\n          if (arr1) {\n            var $propertyKey,\n              i1 = -1,\n              l1 = arr1.length - 1;\n            while (i1 < l1) {\n              $propertyKey = arr1[i1 += 1];\n              out += ' || ' + $key + ' == ' + it.util.toQuotedString($propertyKey) + ' ';\n            }\n          }\n        }\n      }\n      if ($pPropertyKeys.length) {\n        var arr2 = $pPropertyKeys;\n        if (arr2) {\n          var $pProperty,\n            $i = -1,\n            l2 = arr2.length - 1;\n          while ($i < l2) {\n            $pProperty = arr2[$i += 1];\n            out += ' || ' + it.usePattern($pProperty) + '.test(' + $key + ') ';\n          }\n        }\n      }\n      if (it.opts.patternGroups && $pgPropertyKeys.length) {\n        var arr3 = $pgPropertyKeys;\n        if (arr3) {\n          var $pgProperty,\n            $i = -1,\n            l3 = arr3.length - 1;\n          while ($i < l3) {\n            $pgProperty = arr3[$i += 1];\n            out += ' || ' + it.usePattern($pgProperty) + '.test(' + $key + ') ';\n          }\n        }\n      }\n      out += ' ); if (isAdditional' + $lvl + ') { ';\n    }\n    if ($removeAdditional == 'all') {\n      out += ' delete ' + $data + '[' + $key + ']; ';\n    } else {\n      var $currentErrorPath = it.errorPath;\n      var $additionalProperty = '\\' + ' + $key + ' + \\'';\n      if (it.opts._errorDataPathProperty) {\n        it.errorPath = it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n      }\n      if ($noAdditional) {\n        if ($removeAdditional) {\n          out += ' delete ' + $data + '[' + $key + ']; ';\n        } else {\n          out += ' ' + $nextValid + ' = false; ';\n          var $currErrSchemaPath = $errSchemaPath;\n          $errSchemaPath = it.errSchemaPath + '/additionalProperties';\n          var $$outStack = $$outStack || [];\n          $$outStack.push(out);\n          out = ''; /* istanbul ignore else */\n          if (it.createErrors !== false) {\n            out += ' { keyword: \\'' + 'additionalProperties' + '\\' , dataPath: (dataPath || \\'\\') + ' + it.errorPath + ' , schemaPath: ' + it.util.toQuotedString($errSchemaPath) + ' , params: { additionalProperty: \\'' + $additionalProperty + '\\' } ';\n            if (it.opts.messages !== false) {\n              out += ' , message: \\'should NOT have additional properties\\' ';\n            }\n            if (it.opts.verbose) {\n              out += ' , schema: false , parentSchema: validate.schema' + it.schemaPath + ' , data: ' + $data + ' ';\n            }\n            out += ' } ';\n          } else {\n            out += ' {} ';\n          }\n          var __err = out;\n          out = $$outStack.pop();\n          if (!it.compositeRule && $breakOnError) {\n            /* istanbul ignore if */\n            if (it.async) {\n              out += ' throw new ValidationError([' + __err + ']); ';\n            } else {\n              out += ' validate.errors = [' + __err + ']; return false; ';\n            }\n          } else {\n            out += ' var err = ' + __err + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n          }\n          $errSchemaPath = $currErrSchemaPath;\n          if ($breakOnError) {\n            out += ' break; ';\n          }\n        }\n      } else if ($additionalIsSchema) {\n        if ($removeAdditional == 'failing') {\n          out += ' var ' + $errs + ' = errors;  ';\n          var $wasComposite = it.compositeRule;\n          it.compositeRule = $it.compositeRule = true;\n          $it.schema = $aProperties;\n          $it.schemaPath = it.schemaPath + '.additionalProperties';\n          $it.errSchemaPath = it.errSchemaPath + '/additionalProperties';\n          $it.errorPath = it.opts._errorDataPathProperty ? it.errorPath : it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n          var $passData = $data + '[' + $key + ']';\n          $it.dataPathArr[$dataNxt] = $key;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + it.util.varReplace($code, $nextData, $passData) + ' ';\n          } else {\n            out += ' var ' + $nextData + ' = ' + $passData + '; ' + $code + ' ';\n          }\n          out += ' if (!' + $nextValid + ') { errors = ' + $errs + '; if (validate.errors !== null) { if (errors) validate.errors.length = errors; else validate.errors = null; } delete ' + $data + '[' + $key + ']; }  ';\n          it.compositeRule = $it.compositeRule = $wasComposite;\n        } else {\n          $it.schema = $aProperties;\n          $it.schemaPath = it.schemaPath + '.additionalProperties';\n          $it.errSchemaPath = it.errSchemaPath + '/additionalProperties';\n          $it.errorPath = it.opts._errorDataPathProperty ? it.errorPath : it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n          var $passData = $data + '[' + $key + ']';\n          $it.dataPathArr[$dataNxt] = $key;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + it.util.varReplace($code, $nextData, $passData) + ' ';\n          } else {\n            out += ' var ' + $nextData + ' = ' + $passData + '; ' + $code + ' ';\n          }\n          if ($breakOnError) {\n            out += ' if (!' + $nextValid + ') break; ';\n          }\n        }\n      }\n      it.errorPath = $currentErrorPath;\n    }\n    if ($someProperties) {\n      out += ' } ';\n    }\n    out += ' }  ';\n    if ($breakOnError) {\n      out += ' if (' + $nextValid + ') { ';\n      $closingBraces += '}';\n    }\n  }\n  var $useDefaults = it.opts.useDefaults && !it.compositeRule;\n  if ($schemaKeys.length) {\n    var arr4 = $schemaKeys;\n    if (arr4) {\n      var $propertyKey,\n        i4 = -1,\n        l4 = arr4.length - 1;\n      while (i4 < l4) {\n        $propertyKey = arr4[i4 += 1];\n        var $sch = $schema[$propertyKey];\n        if (it.util.schemaHasRules($sch, it.RULES.all)) {\n          var $prop = it.util.getProperty($propertyKey),\n            $passData = $data + $prop,\n            $hasDefault = $useDefaults && $sch.default !== undefined;\n          $it.schema = $sch;\n          $it.schemaPath = $schemaPath + $prop;\n          $it.errSchemaPath = $errSchemaPath + '/' + it.util.escapeFragment($propertyKey);\n          $it.errorPath = it.util.getPath(it.errorPath, $propertyKey, it.opts.jsonPointers);\n          $it.dataPathArr[$dataNxt] = it.util.toQuotedString($propertyKey);\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            $code = it.util.varReplace($code, $nextData, $passData);\n            var $useData = $passData;\n          } else {\n            var $useData = $nextData;\n            out += ' var ' + $nextData + ' = ' + $passData + '; ';\n          }\n          if ($hasDefault) {\n            out += ' ' + $code + ' ';\n          } else {\n            if ($requiredHash && $requiredHash[$propertyKey]) {\n              out += ' if ( ' + $useData + ' === undefined ';\n              if ($ownProperties) {\n                out += ' || ! Object.prototype.hasOwnProperty.call(' + $data + ', \\'' + it.util.escapeQuotes($propertyKey) + '\\') ';\n              }\n              out += ') { ' + $nextValid + ' = false; ';\n              var $currentErrorPath = it.errorPath,\n                $currErrSchemaPath = $errSchemaPath,\n                $missingProperty = it.util.escapeQuotes($propertyKey);\n              if (it.opts._errorDataPathProperty) {\n                it.errorPath = it.util.getPath($currentErrorPath, $propertyKey, it.opts.jsonPointers);\n              }\n              $errSchemaPath = it.errSchemaPath + '/required';\n              var $$outStack = $$outStack || [];\n              $$outStack.push(out);\n              out = ''; /* istanbul ignore else */\n              if (it.createErrors !== false) {\n                out += ' { keyword: \\'' + 'required' + '\\' , dataPath: (dataPath || \\'\\') + ' + it.errorPath + ' , schemaPath: ' + it.util.toQuotedString($errSchemaPath) + ' , params: { missingProperty: \\'' + $missingProperty + '\\' } ';\n                if (it.opts.messages !== false) {\n                  out += ' , message: \\'';\n                  if (it.opts._errorDataPathProperty) {\n                    out += 'is a required property';\n                  } else {\n                    out += 'should have required property \\\\\\'' + $missingProperty + '\\\\\\'';\n                  }\n                  out += '\\' ';\n                }\n                if (it.opts.verbose) {\n                  out += ' , schema: validate.schema' + $schemaPath + ' , parentSchema: validate.schema' + it.schemaPath + ' , data: ' + $data + ' ';\n                }\n                out += ' } ';\n              } else {\n                out += ' {} ';\n              }\n              var __err = out;\n              out = $$outStack.pop();\n              if (!it.compositeRule && $breakOnError) {\n                /* istanbul ignore if */\n                if (it.async) {\n                  out += ' throw new ValidationError([' + __err + ']); ';\n                } else {\n                  out += ' validate.errors = [' + __err + ']; return false; ';\n                }\n              } else {\n                out += ' var err = ' + __err + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n              }\n              $errSchemaPath = $currErrSchemaPath;\n              it.errorPath = $currentErrorPath;\n              out += ' } else { ';\n            } else {\n              if ($breakOnError) {\n                out += ' if ( ' + $useData + ' === undefined ';\n                if ($ownProperties) {\n                  out += ' || ! Object.prototype.hasOwnProperty.call(' + $data + ', \\'' + it.util.escapeQuotes($propertyKey) + '\\') ';\n                }\n                out += ') { ' + $nextValid + ' = true; } else { ';\n              } else {\n                out += ' if (' + $useData + ' !== undefined ';\n                if ($ownProperties) {\n                  out += ' &&   Object.prototype.hasOwnProperty.call(' + $data + ', \\'' + it.util.escapeQuotes($propertyKey) + '\\') ';\n                }\n                out += ' ) { ';\n              }\n            }\n            out += ' ' + $code + ' } ';\n          }\n        }\n        if ($breakOnError) {\n          out += ' if (' + $nextValid + ') { ';\n          $closingBraces += '}';\n        }\n      }\n    }\n  }\n  if ($pPropertyKeys.length) {\n    var arr5 = $pPropertyKeys;\n    if (arr5) {\n      var $pProperty,\n        i5 = -1,\n        l5 = arr5.length - 1;\n      while (i5 < l5) {\n        $pProperty = arr5[i5 += 1];\n        var $sch = $pProperties[$pProperty];\n        if (it.util.schemaHasRules($sch, it.RULES.all)) {\n          $it.schema = $sch;\n          $it.schemaPath = it.schemaPath + '.patternProperties' + it.util.getProperty($pProperty);\n          $it.errSchemaPath = it.errSchemaPath + '/patternProperties/' + it.util.escapeFragment($pProperty);\n          if ($ownProperties) {\n            out += ' ' + $dataProperties + ' = ' + $dataProperties + ' || Object.keys(' + $data + '); for (var ' + $idx + '=0; ' + $idx + '<' + $dataProperties + '.length; ' + $idx + '++) { var ' + $key + ' = ' + $dataProperties + '[' + $idx + ']; ';\n          } else {\n            out += ' for (var ' + $key + ' in ' + $data + ') { ';\n          }\n          out += ' if (' + it.usePattern($pProperty) + '.test(' + $key + ')) { ';\n          $it.errorPath = it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n          var $passData = $data + '[' + $key + ']';\n          $it.dataPathArr[$dataNxt] = $key;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + it.util.varReplace($code, $nextData, $passData) + ' ';\n          } else {\n            out += ' var ' + $nextData + ' = ' + $passData + '; ' + $code + ' ';\n          }\n          if ($breakOnError) {\n            out += ' if (!' + $nextValid + ') break; ';\n          }\n          out += ' } ';\n          if ($breakOnError) {\n            out += ' else ' + $nextValid + ' = true; ';\n          }\n          out += ' }  ';\n          if ($breakOnError) {\n            out += ' if (' + $nextValid + ') { ';\n            $closingBraces += '}';\n          }\n        }\n      }\n    }\n  }\n  if (it.opts.patternGroups && $pgPropertyKeys.length) {\n    var arr6 = $pgPropertyKeys;\n    if (arr6) {\n      var $pgProperty,\n        i6 = -1,\n        l6 = arr6.length - 1;\n      while (i6 < l6) {\n        $pgProperty = arr6[i6 += 1];\n        var $pgSchema = $pgProperties[$pgProperty],\n          $sch = $pgSchema.schema;\n        if (it.util.schemaHasRules($sch, it.RULES.all)) {\n          $it.schema = $sch;\n          $it.schemaPath = it.schemaPath + '.patternGroups' + it.util.getProperty($pgProperty) + '.schema';\n          $it.errSchemaPath = it.errSchemaPath + '/patternGroups/' + it.util.escapeFragment($pgProperty) + '/schema';\n          out += ' var pgPropCount' + $lvl + ' = 0;  ';\n          if ($ownProperties) {\n            out += ' ' + $dataProperties + ' = ' + $dataProperties + ' || Object.keys(' + $data + '); for (var ' + $idx + '=0; ' + $idx + '<' + $dataProperties + '.length; ' + $idx + '++) { var ' + $key + ' = ' + $dataProperties + '[' + $idx + ']; ';\n          } else {\n            out += ' for (var ' + $key + ' in ' + $data + ') { ';\n          }\n          out += ' if (' + it.usePattern($pgProperty) + '.test(' + $key + ')) { pgPropCount' + $lvl + '++; ';\n          $it.errorPath = it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n          var $passData = $data + '[' + $key + ']';\n          $it.dataPathArr[$dataNxt] = $key;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + it.util.varReplace($code, $nextData, $passData) + ' ';\n          } else {\n            out += ' var ' + $nextData + ' = ' + $passData + '; ' + $code + ' ';\n          }\n          if ($breakOnError) {\n            out += ' if (!' + $nextValid + ') break; ';\n          }\n          out += ' } ';\n          if ($breakOnError) {\n            out += ' else ' + $nextValid + ' = true; ';\n          }\n          out += ' }  ';\n          if ($breakOnError) {\n            out += ' if (' + $nextValid + ') { ';\n            $closingBraces += '}';\n          }\n          var $pgMin = $pgSchema.minimum,\n            $pgMax = $pgSchema.maximum;\n          if ($pgMin !== undefined || $pgMax !== undefined) {\n            out += ' var ' + $valid + ' = true; ';\n            var $currErrSchemaPath = $errSchemaPath;\n            if ($pgMin !== undefined) {\n              var $limit = $pgMin,\n                $reason = 'minimum',\n                $moreOrLess = 'less';\n              out += ' ' + $valid + ' = pgPropCount' + $lvl + ' >= ' + $pgMin + '; ';\n              $errSchemaPath = it.errSchemaPath + '/patternGroups/minimum';\n              out += '  if (!' + $valid + ') {   ';\n              var $$outStack = $$outStack || [];\n              $$outStack.push(out);\n              out = ''; /* istanbul ignore else */\n              if (it.createErrors !== false) {\n                out += ' { keyword: \\'' + 'patternGroups' + '\\' , dataPath: (dataPath || \\'\\') + ' + it.errorPath + ' , schemaPath: ' + it.util.toQuotedString($errSchemaPath) + ' , params: { reason: \\'' + $reason + '\\', limit: ' + $limit + ', pattern: \\'' + it.util.escapeQuotes($pgProperty) + '\\' } ';\n                if (it.opts.messages !== false) {\n                  out += ' , message: \\'should NOT have ' + $moreOrLess + ' than ' + $limit + ' properties matching pattern \"' + it.util.escapeQuotes($pgProperty) + '\"\\' ';\n                }\n                if (it.opts.verbose) {\n                  out += ' , schema: validate.schema' + $schemaPath + ' , parentSchema: validate.schema' + it.schemaPath + ' , data: ' + $data + ' ';\n                }\n                out += ' } ';\n              } else {\n                out += ' {} ';\n              }\n              var __err = out;\n              out = $$outStack.pop();\n              if (!it.compositeRule && $breakOnError) {\n                /* istanbul ignore if */\n                if (it.async) {\n                  out += ' throw new ValidationError([' + __err + ']); ';\n                } else {\n                  out += ' validate.errors = [' + __err + ']; return false; ';\n                }\n              } else {\n                out += ' var err = ' + __err + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n              }\n              out += ' } ';\n              if ($pgMax !== undefined) {\n                out += ' else ';\n              }\n            }\n            if ($pgMax !== undefined) {\n              var $limit = $pgMax,\n                $reason = 'maximum',\n                $moreOrLess = 'more';\n              out += ' ' + $valid + ' = pgPropCount' + $lvl + ' <= ' + $pgMax + '; ';\n              $errSchemaPath = it.errSchemaPath + '/patternGroups/maximum';\n              out += '  if (!' + $valid + ') {   ';\n              var $$outStack = $$outStack || [];\n              $$outStack.push(out);\n              out = ''; /* istanbul ignore else */\n              if (it.createErrors !== false) {\n                out += ' { keyword: \\'' + 'patternGroups' + '\\' , dataPath: (dataPath || \\'\\') + ' + it.errorPath + ' , schemaPath: ' + it.util.toQuotedString($errSchemaPath) + ' , params: { reason: \\'' + $reason + '\\', limit: ' + $limit + ', pattern: \\'' + it.util.escapeQuotes($pgProperty) + '\\' } ';\n                if (it.opts.messages !== false) {\n                  out += ' , message: \\'should NOT have ' + $moreOrLess + ' than ' + $limit + ' properties matching pattern \"' + it.util.escapeQuotes($pgProperty) + '\"\\' ';\n                }\n                if (it.opts.verbose) {\n                  out += ' , schema: validate.schema' + $schemaPath + ' , parentSchema: validate.schema' + it.schemaPath + ' , data: ' + $data + ' ';\n                }\n                out += ' } ';\n              } else {\n                out += ' {} ';\n              }\n              var __err = out;\n              out = $$outStack.pop();\n              if (!it.compositeRule && $breakOnError) {\n                /* istanbul ignore if */\n                if (it.async) {\n                  out += ' throw new ValidationError([' + __err + ']); ';\n                } else {\n                  out += ' validate.errors = [' + __err + ']; return false; ';\n                }\n              } else {\n                out += ' var err = ' + __err + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n              }\n              out += ' } ';\n            }\n            $errSchemaPath = $currErrSchemaPath;\n            if ($breakOnError) {\n              out += ' if (' + $valid + ') { ';\n              $closingBraces += '}';\n            }\n          }\n        }\n      }\n    }\n  }\n  if ($breakOnError) {\n    out += ' ' + $closingBraces + ' if (' + $errs + ' == errors) {';\n  }\n  out = it.util.cleanUpCode(out);\n  return out;\n};","map":{"version":3,"names":["module","exports","generate_properties","it","$keyword","$ruleType","out","$lvl","level","$dataLvl","dataLevel","$schema","schema","$schemaPath","schemaPath","util","getProperty","$errSchemaPath","errSchemaPath","$breakOnError","opts","allErrors","$data","$valid","$errs","$it","copy","$closingBraces","$nextValid","$key","$idx","$dataNxt","$nextData","$dataProperties","$schemaKeys","Object","keys","$pProperties","patternProperties","$pPropertyKeys","$aProperties","additionalProperties","$someProperties","length","$noAdditional","$additionalIsSchema","$removeAdditional","removeAdditional","$checkAdditional","$ownProperties","ownProperties","$currentBaseId","baseId","$required","required","v5","loopRequired","$requiredHash","toHash","patternGroups","$pgProperties","$pgPropertyKeys","arr1","$propertyKey","i1","l1","toQuotedString","arr2","$pProperty","$i","l2","usePattern","arr3","$pgProperty","l3","$currentErrorPath","errorPath","$additionalProperty","_errorDataPathProperty","getPathExpr","jsonPointers","$currErrSchemaPath","$$outStack","push","createErrors","messages","verbose","__err","pop","compositeRule","async","$wasComposite","$passData","dataPathArr","$code","validate","varOccurences","varReplace","$useDefaults","useDefaults","arr4","i4","l4","$sch","schemaHasRules","RULES","all","$prop","$hasDefault","default","undefined","escapeFragment","getPath","$useData","escapeQuotes","$missingProperty","arr5","i5","l5","arr6","i6","l6","$pgSchema","$pgMin","minimum","$pgMax","maximum","$limit","$reason","$moreOrLess","cleanUpCode"],"sources":["/Users/mohitgupta/Downloads/orgs/Clone/inst/node_modules/har-validator/node_modules/ajv/lib/dotjs/properties.js"],"sourcesContent":["'use strict';\nmodule.exports = function generate_properties(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $key = 'key' + $lvl,\n    $idx = 'idx' + $lvl,\n    $dataNxt = $it.dataLevel = it.dataLevel + 1,\n    $nextData = 'data' + $dataNxt,\n    $dataProperties = 'dataProperties' + $lvl;\n  var $schemaKeys = Object.keys($schema || {}),\n    $pProperties = it.schema.patternProperties || {},\n    $pPropertyKeys = Object.keys($pProperties),\n    $aProperties = it.schema.additionalProperties,\n    $someProperties = $schemaKeys.length || $pPropertyKeys.length,\n    $noAdditional = $aProperties === false,\n    $additionalIsSchema = typeof $aProperties == 'object' && Object.keys($aProperties).length,\n    $removeAdditional = it.opts.removeAdditional,\n    $checkAdditional = $noAdditional || $additionalIsSchema || $removeAdditional,\n    $ownProperties = it.opts.ownProperties,\n    $currentBaseId = it.baseId;\n  var $required = it.schema.required;\n  if ($required && !(it.opts.v5 && $required.$data) && $required.length < it.opts.loopRequired) var $requiredHash = it.util.toHash($required);\n  if (it.opts.patternGroups) {\n    var $pgProperties = it.schema.patternGroups || {},\n      $pgPropertyKeys = Object.keys($pgProperties);\n  }\n  out += 'var ' + ($errs) + ' = errors;var ' + ($nextValid) + ' = true;';\n  if ($ownProperties) {\n    out += ' var ' + ($dataProperties) + ' = undefined;';\n  }\n  if ($checkAdditional) {\n    if ($ownProperties) {\n      out += ' ' + ($dataProperties) + ' = ' + ($dataProperties) + ' || Object.keys(' + ($data) + '); for (var ' + ($idx) + '=0; ' + ($idx) + '<' + ($dataProperties) + '.length; ' + ($idx) + '++) { var ' + ($key) + ' = ' + ($dataProperties) + '[' + ($idx) + ']; ';\n    } else {\n      out += ' for (var ' + ($key) + ' in ' + ($data) + ') { ';\n    }\n    if ($someProperties) {\n      out += ' var isAdditional' + ($lvl) + ' = !(false ';\n      if ($schemaKeys.length) {\n        if ($schemaKeys.length > 5) {\n          out += ' || validate.schema' + ($schemaPath) + '[' + ($key) + '] ';\n        } else {\n          var arr1 = $schemaKeys;\n          if (arr1) {\n            var $propertyKey, i1 = -1,\n              l1 = arr1.length - 1;\n            while (i1 < l1) {\n              $propertyKey = arr1[i1 += 1];\n              out += ' || ' + ($key) + ' == ' + (it.util.toQuotedString($propertyKey)) + ' ';\n            }\n          }\n        }\n      }\n      if ($pPropertyKeys.length) {\n        var arr2 = $pPropertyKeys;\n        if (arr2) {\n          var $pProperty, $i = -1,\n            l2 = arr2.length - 1;\n          while ($i < l2) {\n            $pProperty = arr2[$i += 1];\n            out += ' || ' + (it.usePattern($pProperty)) + '.test(' + ($key) + ') ';\n          }\n        }\n      }\n      if (it.opts.patternGroups && $pgPropertyKeys.length) {\n        var arr3 = $pgPropertyKeys;\n        if (arr3) {\n          var $pgProperty, $i = -1,\n            l3 = arr3.length - 1;\n          while ($i < l3) {\n            $pgProperty = arr3[$i += 1];\n            out += ' || ' + (it.usePattern($pgProperty)) + '.test(' + ($key) + ') ';\n          }\n        }\n      }\n      out += ' ); if (isAdditional' + ($lvl) + ') { ';\n    }\n    if ($removeAdditional == 'all') {\n      out += ' delete ' + ($data) + '[' + ($key) + ']; ';\n    } else {\n      var $currentErrorPath = it.errorPath;\n      var $additionalProperty = '\\' + ' + $key + ' + \\'';\n      if (it.opts._errorDataPathProperty) {\n        it.errorPath = it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n      }\n      if ($noAdditional) {\n        if ($removeAdditional) {\n          out += ' delete ' + ($data) + '[' + ($key) + ']; ';\n        } else {\n          out += ' ' + ($nextValid) + ' = false; ';\n          var $currErrSchemaPath = $errSchemaPath;\n          $errSchemaPath = it.errSchemaPath + '/additionalProperties';\n          var $$outStack = $$outStack || [];\n          $$outStack.push(out);\n          out = ''; /* istanbul ignore else */\n          if (it.createErrors !== false) {\n            out += ' { keyword: \\'' + ('additionalProperties') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { additionalProperty: \\'' + ($additionalProperty) + '\\' } ';\n            if (it.opts.messages !== false) {\n              out += ' , message: \\'should NOT have additional properties\\' ';\n            }\n            if (it.opts.verbose) {\n              out += ' , schema: false , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n            }\n            out += ' } ';\n          } else {\n            out += ' {} ';\n          }\n          var __err = out;\n          out = $$outStack.pop();\n          if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n            if (it.async) {\n              out += ' throw new ValidationError([' + (__err) + ']); ';\n            } else {\n              out += ' validate.errors = [' + (__err) + ']; return false; ';\n            }\n          } else {\n            out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n          }\n          $errSchemaPath = $currErrSchemaPath;\n          if ($breakOnError) {\n            out += ' break; ';\n          }\n        }\n      } else if ($additionalIsSchema) {\n        if ($removeAdditional == 'failing') {\n          out += ' var ' + ($errs) + ' = errors;  ';\n          var $wasComposite = it.compositeRule;\n          it.compositeRule = $it.compositeRule = true;\n          $it.schema = $aProperties;\n          $it.schemaPath = it.schemaPath + '.additionalProperties';\n          $it.errSchemaPath = it.errSchemaPath + '/additionalProperties';\n          $it.errorPath = it.opts._errorDataPathProperty ? it.errorPath : it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n          var $passData = $data + '[' + $key + ']';\n          $it.dataPathArr[$dataNxt] = $key;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n          } else {\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n          }\n          out += ' if (!' + ($nextValid) + ') { errors = ' + ($errs) + '; if (validate.errors !== null) { if (errors) validate.errors.length = errors; else validate.errors = null; } delete ' + ($data) + '[' + ($key) + ']; }  ';\n          it.compositeRule = $it.compositeRule = $wasComposite;\n        } else {\n          $it.schema = $aProperties;\n          $it.schemaPath = it.schemaPath + '.additionalProperties';\n          $it.errSchemaPath = it.errSchemaPath + '/additionalProperties';\n          $it.errorPath = it.opts._errorDataPathProperty ? it.errorPath : it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n          var $passData = $data + '[' + $key + ']';\n          $it.dataPathArr[$dataNxt] = $key;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n          } else {\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n          }\n          if ($breakOnError) {\n            out += ' if (!' + ($nextValid) + ') break; ';\n          }\n        }\n      }\n      it.errorPath = $currentErrorPath;\n    }\n    if ($someProperties) {\n      out += ' } ';\n    }\n    out += ' }  ';\n    if ($breakOnError) {\n      out += ' if (' + ($nextValid) + ') { ';\n      $closingBraces += '}';\n    }\n  }\n  var $useDefaults = it.opts.useDefaults && !it.compositeRule;\n  if ($schemaKeys.length) {\n    var arr4 = $schemaKeys;\n    if (arr4) {\n      var $propertyKey, i4 = -1,\n        l4 = arr4.length - 1;\n      while (i4 < l4) {\n        $propertyKey = arr4[i4 += 1];\n        var $sch = $schema[$propertyKey];\n        if (it.util.schemaHasRules($sch, it.RULES.all)) {\n          var $prop = it.util.getProperty($propertyKey),\n            $passData = $data + $prop,\n            $hasDefault = $useDefaults && $sch.default !== undefined;\n          $it.schema = $sch;\n          $it.schemaPath = $schemaPath + $prop;\n          $it.errSchemaPath = $errSchemaPath + '/' + it.util.escapeFragment($propertyKey);\n          $it.errorPath = it.util.getPath(it.errorPath, $propertyKey, it.opts.jsonPointers);\n          $it.dataPathArr[$dataNxt] = it.util.toQuotedString($propertyKey);\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            $code = it.util.varReplace($code, $nextData, $passData);\n            var $useData = $passData;\n          } else {\n            var $useData = $nextData;\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ';\n          }\n          if ($hasDefault) {\n            out += ' ' + ($code) + ' ';\n          } else {\n            if ($requiredHash && $requiredHash[$propertyKey]) {\n              out += ' if ( ' + ($useData) + ' === undefined ';\n              if ($ownProperties) {\n                out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n              }\n              out += ') { ' + ($nextValid) + ' = false; ';\n              var $currentErrorPath = it.errorPath,\n                $currErrSchemaPath = $errSchemaPath,\n                $missingProperty = it.util.escapeQuotes($propertyKey);\n              if (it.opts._errorDataPathProperty) {\n                it.errorPath = it.util.getPath($currentErrorPath, $propertyKey, it.opts.jsonPointers);\n              }\n              $errSchemaPath = it.errSchemaPath + '/required';\n              var $$outStack = $$outStack || [];\n              $$outStack.push(out);\n              out = ''; /* istanbul ignore else */\n              if (it.createErrors !== false) {\n                out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n                if (it.opts.messages !== false) {\n                  out += ' , message: \\'';\n                  if (it.opts._errorDataPathProperty) {\n                    out += 'is a required property';\n                  } else {\n                    out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n                  }\n                  out += '\\' ';\n                }\n                if (it.opts.verbose) {\n                  out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n                }\n                out += ' } ';\n              } else {\n                out += ' {} ';\n              }\n              var __err = out;\n              out = $$outStack.pop();\n              if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n                if (it.async) {\n                  out += ' throw new ValidationError([' + (__err) + ']); ';\n                } else {\n                  out += ' validate.errors = [' + (__err) + ']; return false; ';\n                }\n              } else {\n                out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n              }\n              $errSchemaPath = $currErrSchemaPath;\n              it.errorPath = $currentErrorPath;\n              out += ' } else { ';\n            } else {\n              if ($breakOnError) {\n                out += ' if ( ' + ($useData) + ' === undefined ';\n                if ($ownProperties) {\n                  out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n                }\n                out += ') { ' + ($nextValid) + ' = true; } else { ';\n              } else {\n                out += ' if (' + ($useData) + ' !== undefined ';\n                if ($ownProperties) {\n                  out += ' &&   Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n                }\n                out += ' ) { ';\n              }\n            }\n            out += ' ' + ($code) + ' } ';\n          }\n        }\n        if ($breakOnError) {\n          out += ' if (' + ($nextValid) + ') { ';\n          $closingBraces += '}';\n        }\n      }\n    }\n  }\n  if ($pPropertyKeys.length) {\n    var arr5 = $pPropertyKeys;\n    if (arr5) {\n      var $pProperty, i5 = -1,\n        l5 = arr5.length - 1;\n      while (i5 < l5) {\n        $pProperty = arr5[i5 += 1];\n        var $sch = $pProperties[$pProperty];\n        if (it.util.schemaHasRules($sch, it.RULES.all)) {\n          $it.schema = $sch;\n          $it.schemaPath = it.schemaPath + '.patternProperties' + it.util.getProperty($pProperty);\n          $it.errSchemaPath = it.errSchemaPath + '/patternProperties/' + it.util.escapeFragment($pProperty);\n          if ($ownProperties) {\n            out += ' ' + ($dataProperties) + ' = ' + ($dataProperties) + ' || Object.keys(' + ($data) + '); for (var ' + ($idx) + '=0; ' + ($idx) + '<' + ($dataProperties) + '.length; ' + ($idx) + '++) { var ' + ($key) + ' = ' + ($dataProperties) + '[' + ($idx) + ']; ';\n          } else {\n            out += ' for (var ' + ($key) + ' in ' + ($data) + ') { ';\n          }\n          out += ' if (' + (it.usePattern($pProperty)) + '.test(' + ($key) + ')) { ';\n          $it.errorPath = it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n          var $passData = $data + '[' + $key + ']';\n          $it.dataPathArr[$dataNxt] = $key;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n          } else {\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n          }\n          if ($breakOnError) {\n            out += ' if (!' + ($nextValid) + ') break; ';\n          }\n          out += ' } ';\n          if ($breakOnError) {\n            out += ' else ' + ($nextValid) + ' = true; ';\n          }\n          out += ' }  ';\n          if ($breakOnError) {\n            out += ' if (' + ($nextValid) + ') { ';\n            $closingBraces += '}';\n          }\n        }\n      }\n    }\n  }\n  if (it.opts.patternGroups && $pgPropertyKeys.length) {\n    var arr6 = $pgPropertyKeys;\n    if (arr6) {\n      var $pgProperty, i6 = -1,\n        l6 = arr6.length - 1;\n      while (i6 < l6) {\n        $pgProperty = arr6[i6 += 1];\n        var $pgSchema = $pgProperties[$pgProperty],\n          $sch = $pgSchema.schema;\n        if (it.util.schemaHasRules($sch, it.RULES.all)) {\n          $it.schema = $sch;\n          $it.schemaPath = it.schemaPath + '.patternGroups' + it.util.getProperty($pgProperty) + '.schema';\n          $it.errSchemaPath = it.errSchemaPath + '/patternGroups/' + it.util.escapeFragment($pgProperty) + '/schema';\n          out += ' var pgPropCount' + ($lvl) + ' = 0;  ';\n          if ($ownProperties) {\n            out += ' ' + ($dataProperties) + ' = ' + ($dataProperties) + ' || Object.keys(' + ($data) + '); for (var ' + ($idx) + '=0; ' + ($idx) + '<' + ($dataProperties) + '.length; ' + ($idx) + '++) { var ' + ($key) + ' = ' + ($dataProperties) + '[' + ($idx) + ']; ';\n          } else {\n            out += ' for (var ' + ($key) + ' in ' + ($data) + ') { ';\n          }\n          out += ' if (' + (it.usePattern($pgProperty)) + '.test(' + ($key) + ')) { pgPropCount' + ($lvl) + '++; ';\n          $it.errorPath = it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n          var $passData = $data + '[' + $key + ']';\n          $it.dataPathArr[$dataNxt] = $key;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n          } else {\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n          }\n          if ($breakOnError) {\n            out += ' if (!' + ($nextValid) + ') break; ';\n          }\n          out += ' } ';\n          if ($breakOnError) {\n            out += ' else ' + ($nextValid) + ' = true; ';\n          }\n          out += ' }  ';\n          if ($breakOnError) {\n            out += ' if (' + ($nextValid) + ') { ';\n            $closingBraces += '}';\n          }\n          var $pgMin = $pgSchema.minimum,\n            $pgMax = $pgSchema.maximum;\n          if ($pgMin !== undefined || $pgMax !== undefined) {\n            out += ' var ' + ($valid) + ' = true; ';\n            var $currErrSchemaPath = $errSchemaPath;\n            if ($pgMin !== undefined) {\n              var $limit = $pgMin,\n                $reason = 'minimum',\n                $moreOrLess = 'less';\n              out += ' ' + ($valid) + ' = pgPropCount' + ($lvl) + ' >= ' + ($pgMin) + '; ';\n              $errSchemaPath = it.errSchemaPath + '/patternGroups/minimum';\n              out += '  if (!' + ($valid) + ') {   ';\n              var $$outStack = $$outStack || [];\n              $$outStack.push(out);\n              out = ''; /* istanbul ignore else */\n              if (it.createErrors !== false) {\n                out += ' { keyword: \\'' + ('patternGroups') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { reason: \\'' + ($reason) + '\\', limit: ' + ($limit) + ', pattern: \\'' + (it.util.escapeQuotes($pgProperty)) + '\\' } ';\n                if (it.opts.messages !== false) {\n                  out += ' , message: \\'should NOT have ' + ($moreOrLess) + ' than ' + ($limit) + ' properties matching pattern \"' + (it.util.escapeQuotes($pgProperty)) + '\"\\' ';\n                }\n                if (it.opts.verbose) {\n                  out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n                }\n                out += ' } ';\n              } else {\n                out += ' {} ';\n              }\n              var __err = out;\n              out = $$outStack.pop();\n              if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n                if (it.async) {\n                  out += ' throw new ValidationError([' + (__err) + ']); ';\n                } else {\n                  out += ' validate.errors = [' + (__err) + ']; return false; ';\n                }\n              } else {\n                out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n              }\n              out += ' } ';\n              if ($pgMax !== undefined) {\n                out += ' else ';\n              }\n            }\n            if ($pgMax !== undefined) {\n              var $limit = $pgMax,\n                $reason = 'maximum',\n                $moreOrLess = 'more';\n              out += ' ' + ($valid) + ' = pgPropCount' + ($lvl) + ' <= ' + ($pgMax) + '; ';\n              $errSchemaPath = it.errSchemaPath + '/patternGroups/maximum';\n              out += '  if (!' + ($valid) + ') {   ';\n              var $$outStack = $$outStack || [];\n              $$outStack.push(out);\n              out = ''; /* istanbul ignore else */\n              if (it.createErrors !== false) {\n                out += ' { keyword: \\'' + ('patternGroups') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { reason: \\'' + ($reason) + '\\', limit: ' + ($limit) + ', pattern: \\'' + (it.util.escapeQuotes($pgProperty)) + '\\' } ';\n                if (it.opts.messages !== false) {\n                  out += ' , message: \\'should NOT have ' + ($moreOrLess) + ' than ' + ($limit) + ' properties matching pattern \"' + (it.util.escapeQuotes($pgProperty)) + '\"\\' ';\n                }\n                if (it.opts.verbose) {\n                  out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n                }\n                out += ' } ';\n              } else {\n                out += ' {} ';\n              }\n              var __err = out;\n              out = $$outStack.pop();\n              if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n                if (it.async) {\n                  out += ' throw new ValidationError([' + (__err) + ']); ';\n                } else {\n                  out += ' validate.errors = [' + (__err) + ']; return false; ';\n                }\n              } else {\n                out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n              }\n              out += ' } ';\n            }\n            $errSchemaPath = $currErrSchemaPath;\n            if ($breakOnError) {\n              out += ' if (' + ($valid) + ') { ';\n              $closingBraces += '}';\n            }\n          }\n        }\n      }\n    }\n  }\n  if ($breakOnError) {\n    out += ' ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';\n  }\n  out = it.util.cleanUpCode(out);\n  return out;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}