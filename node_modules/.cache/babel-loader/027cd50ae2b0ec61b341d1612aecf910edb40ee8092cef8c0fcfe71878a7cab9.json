{"ast":null,"code":"'use strict';\n\nmodule.exports = function generate_validate(it, $keyword, $ruleType) {\n  var out = '';\n  var $async = it.schema.$async === true,\n    $refKeywords = it.util.schemaHasRulesExcept(it.schema, it.RULES.all, '$ref'),\n    $id = it.self._getId(it.schema);\n  if (it.isTop) {\n    if ($async) {\n      it.async = true;\n      var $es7 = it.opts.async == 'es7';\n      it.yieldAwait = $es7 ? 'await' : 'yield';\n    }\n    out += ' var validate = ';\n    if ($async) {\n      if ($es7) {\n        out += ' (async function ';\n      } else {\n        if (it.opts.async != '*') {\n          out += 'co.wrap';\n        }\n        out += '(function* ';\n      }\n    } else {\n      out += ' (function ';\n    }\n    out += ' (data, dataPath, parentData, parentDataProperty, rootData) { \\'use strict\\'; ';\n    if ($id && (it.opts.sourceCode || it.opts.processCode)) {\n      out += ' ' + ('/\\*# sourceURL=' + $id + ' */') + ' ';\n    }\n  }\n  if (typeof it.schema == 'boolean' || !($refKeywords || it.schema.$ref)) {\n    var $keyword = 'false schema';\n    var $lvl = it.level;\n    var $dataLvl = it.dataLevel;\n    var $schema = it.schema[$keyword];\n    var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n    var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n    var $breakOnError = !it.opts.allErrors;\n    var $errorKeyword;\n    var $data = 'data' + ($dataLvl || '');\n    var $valid = 'valid' + $lvl;\n    if (it.schema === false) {\n      if (it.isTop) {\n        $breakOnError = true;\n      } else {\n        out += ' var ' + $valid + ' = false; ';\n      }\n      var $$outStack = $$outStack || [];\n      $$outStack.push(out);\n      out = ''; /* istanbul ignore else */\n      if (it.createErrors !== false) {\n        out += ' { keyword: \\'' + ($errorKeyword || 'false schema') + '\\' , dataPath: (dataPath || \\'\\') + ' + it.errorPath + ' , schemaPath: ' + it.util.toQuotedString($errSchemaPath) + ' , params: {} ';\n        if (it.opts.messages !== false) {\n          out += ' , message: \\'boolean schema is false\\' ';\n        }\n        if (it.opts.verbose) {\n          out += ' , schema: false , parentSchema: validate.schema' + it.schemaPath + ' , data: ' + $data + ' ';\n        }\n        out += ' } ';\n      } else {\n        out += ' {} ';\n      }\n      var __err = out;\n      out = $$outStack.pop();\n      if (!it.compositeRule && $breakOnError) {\n        /* istanbul ignore if */\n        if (it.async) {\n          out += ' throw new ValidationError([' + __err + ']); ';\n        } else {\n          out += ' validate.errors = [' + __err + ']; return false; ';\n        }\n      } else {\n        out += ' var err = ' + __err + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n      }\n    } else {\n      if (it.isTop) {\n        if ($async) {\n          out += ' return data; ';\n        } else {\n          out += ' validate.errors = null; return true; ';\n        }\n      } else {\n        out += ' var ' + $valid + ' = true; ';\n      }\n    }\n    if (it.isTop) {\n      out += ' }); return validate; ';\n    }\n    return out;\n  }\n  if (it.isTop) {\n    var $top = it.isTop,\n      $lvl = it.level = 0,\n      $dataLvl = it.dataLevel = 0,\n      $data = 'data';\n    it.rootId = it.resolve.fullPath(it.self._getId(it.root.schema));\n    it.baseId = it.baseId || it.rootId;\n    delete it.isTop;\n    it.dataPathArr = [undefined];\n    out += ' var vErrors = null; ';\n    out += ' var errors = 0;     ';\n    out += ' if (rootData === undefined) rootData = data; ';\n  } else {\n    var $lvl = it.level,\n      $dataLvl = it.dataLevel,\n      $data = 'data' + ($dataLvl || '');\n    if ($id) it.baseId = it.resolve.url(it.baseId, $id);\n    if ($async && !it.async) throw new Error('async schema in sync schema');\n    out += ' var errs_' + $lvl + ' = errors;';\n  }\n  var $valid = 'valid' + $lvl,\n    $breakOnError = !it.opts.allErrors,\n    $closingBraces1 = '',\n    $closingBraces2 = '';\n  var $errorKeyword;\n  var $typeSchema = it.schema.type,\n    $typeIsArray = Array.isArray($typeSchema);\n  if ($typeIsArray && $typeSchema.length == 1) {\n    $typeSchema = $typeSchema[0];\n    $typeIsArray = false;\n  }\n  if (it.schema.$ref && $refKeywords) {\n    if (it.opts.extendRefs == 'fail') {\n      throw new Error('$ref: validation keywords used in schema at path \"' + it.errSchemaPath + '\" (see option extendRefs)');\n    } else if (it.opts.extendRefs !== true) {\n      $refKeywords = false;\n      it.logger.warn('$ref: keywords ignored in schema at path \"' + it.errSchemaPath + '\"');\n    }\n  }\n  if ($typeSchema) {\n    if (it.opts.coerceTypes) {\n      var $coerceToTypes = it.util.coerceToTypes(it.opts.coerceTypes, $typeSchema);\n    }\n    var $rulesGroup = it.RULES.types[$typeSchema];\n    if ($coerceToTypes || $typeIsArray || $rulesGroup === true || $rulesGroup && !$shouldUseGroup($rulesGroup)) {\n      var $schemaPath = it.schemaPath + '.type',\n        $errSchemaPath = it.errSchemaPath + '/type';\n      var $schemaPath = it.schemaPath + '.type',\n        $errSchemaPath = it.errSchemaPath + '/type',\n        $method = $typeIsArray ? 'checkDataTypes' : 'checkDataType';\n      out += ' if (' + it.util[$method]($typeSchema, $data, true) + ') { ';\n      if ($coerceToTypes) {\n        var $dataType = 'dataType' + $lvl,\n          $coerced = 'coerced' + $lvl;\n        out += ' var ' + $dataType + ' = typeof ' + $data + '; ';\n        if (it.opts.coerceTypes == 'array') {\n          out += ' if (' + $dataType + ' == \\'object\\' && Array.isArray(' + $data + ')) ' + $dataType + ' = \\'array\\'; ';\n        }\n        out += ' var ' + $coerced + ' = undefined; ';\n        var $bracesCoercion = '';\n        var arr1 = $coerceToTypes;\n        if (arr1) {\n          var $type,\n            $i = -1,\n            l1 = arr1.length - 1;\n          while ($i < l1) {\n            $type = arr1[$i += 1];\n            if ($i) {\n              out += ' if (' + $coerced + ' === undefined) { ';\n              $bracesCoercion += '}';\n            }\n            if (it.opts.coerceTypes == 'array' && $type != 'array') {\n              out += ' if (' + $dataType + ' == \\'array\\' && ' + $data + '.length == 1) { ' + $coerced + ' = ' + $data + ' = ' + $data + '[0]; ' + $dataType + ' = typeof ' + $data + ';  } ';\n            }\n            if ($type == 'string') {\n              out += ' if (' + $dataType + ' == \\'number\\' || ' + $dataType + ' == \\'boolean\\') ' + $coerced + ' = \\'\\' + ' + $data + '; else if (' + $data + ' === null) ' + $coerced + ' = \\'\\'; ';\n            } else if ($type == 'number' || $type == 'integer') {\n              out += ' if (' + $dataType + ' == \\'boolean\\' || ' + $data + ' === null || (' + $dataType + ' == \\'string\\' && ' + $data + ' && ' + $data + ' == +' + $data + ' ';\n              if ($type == 'integer') {\n                out += ' && !(' + $data + ' % 1)';\n              }\n              out += ')) ' + $coerced + ' = +' + $data + '; ';\n            } else if ($type == 'boolean') {\n              out += ' if (' + $data + ' === \\'false\\' || ' + $data + ' === 0 || ' + $data + ' === null) ' + $coerced + ' = false; else if (' + $data + ' === \\'true\\' || ' + $data + ' === 1) ' + $coerced + ' = true; ';\n            } else if ($type == 'null') {\n              out += ' if (' + $data + ' === \\'\\' || ' + $data + ' === 0 || ' + $data + ' === false) ' + $coerced + ' = null; ';\n            } else if (it.opts.coerceTypes == 'array' && $type == 'array') {\n              out += ' if (' + $dataType + ' == \\'string\\' || ' + $dataType + ' == \\'number\\' || ' + $dataType + ' == \\'boolean\\' || ' + $data + ' == null) ' + $coerced + ' = [' + $data + ']; ';\n            }\n          }\n        }\n        out += ' ' + $bracesCoercion + ' if (' + $coerced + ' === undefined) {   ';\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + it.errorPath + ' , schemaPath: ' + it.util.toQuotedString($errSchemaPath) + ' , params: { type: \\'';\n          if ($typeIsArray) {\n            out += '' + $typeSchema.join(\",\");\n          } else {\n            out += '' + $typeSchema;\n          }\n          out += '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'should be ';\n            if ($typeIsArray) {\n              out += '' + $typeSchema.join(\",\");\n            } else {\n              out += '' + $typeSchema;\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + $schemaPath + ' , parentSchema: validate.schema' + it.schemaPath + ' , data: ' + $data + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + __err + ']); ';\n          } else {\n            out += ' validate.errors = [' + __err + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + __err + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n        out += ' } else {  ';\n        var $parentData = $dataLvl ? 'data' + ($dataLvl - 1 || '') : 'parentData',\n          $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';\n        out += ' ' + $data + ' = ' + $coerced + '; ';\n        if (!$dataLvl) {\n          out += 'if (' + $parentData + ' !== undefined)';\n        }\n        out += ' ' + $parentData + '[' + $parentDataProperty + '] = ' + $coerced + '; } ';\n      } else {\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + it.errorPath + ' , schemaPath: ' + it.util.toQuotedString($errSchemaPath) + ' , params: { type: \\'';\n          if ($typeIsArray) {\n            out += '' + $typeSchema.join(\",\");\n          } else {\n            out += '' + $typeSchema;\n          }\n          out += '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'should be ';\n            if ($typeIsArray) {\n              out += '' + $typeSchema.join(\",\");\n            } else {\n              out += '' + $typeSchema;\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + $schemaPath + ' , parentSchema: validate.schema' + it.schemaPath + ' , data: ' + $data + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + __err + ']); ';\n          } else {\n            out += ' validate.errors = [' + __err + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + __err + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n      }\n      out += ' } ';\n    }\n  }\n  if (it.schema.$ref && !$refKeywords) {\n    out += ' ' + it.RULES.all.$ref.code(it, '$ref') + ' ';\n    if ($breakOnError) {\n      out += ' } if (errors === ';\n      if ($top) {\n        out += '0';\n      } else {\n        out += 'errs_' + $lvl;\n      }\n      out += ') { ';\n      $closingBraces2 += '}';\n    }\n  } else {\n    if (it.opts.v5 && it.schema.patternGroups) {\n      it.logger.warn('keyword \"patternGroups\" is deprecated and disabled. Use option patternGroups: true to enable.');\n    }\n    var arr2 = it.RULES;\n    if (arr2) {\n      var $rulesGroup,\n        i2 = -1,\n        l2 = arr2.length - 1;\n      while (i2 < l2) {\n        $rulesGroup = arr2[i2 += 1];\n        if ($shouldUseGroup($rulesGroup)) {\n          if ($rulesGroup.type) {\n            out += ' if (' + it.util.checkDataType($rulesGroup.type, $data) + ') { ';\n          }\n          if (it.opts.useDefaults && !it.compositeRule) {\n            if ($rulesGroup.type == 'object' && it.schema.properties) {\n              var $schema = it.schema.properties,\n                $schemaKeys = Object.keys($schema);\n              var arr3 = $schemaKeys;\n              if (arr3) {\n                var $propertyKey,\n                  i3 = -1,\n                  l3 = arr3.length - 1;\n                while (i3 < l3) {\n                  $propertyKey = arr3[i3 += 1];\n                  var $sch = $schema[$propertyKey];\n                  if ($sch.default !== undefined) {\n                    var $passData = $data + it.util.getProperty($propertyKey);\n                    out += '  if (' + $passData + ' === undefined) ' + $passData + ' = ';\n                    if (it.opts.useDefaults == 'shared') {\n                      out += ' ' + it.useDefault($sch.default) + ' ';\n                    } else {\n                      out += ' ' + JSON.stringify($sch.default) + ' ';\n                    }\n                    out += '; ';\n                  }\n                }\n              }\n            } else if ($rulesGroup.type == 'array' && Array.isArray(it.schema.items)) {\n              var arr4 = it.schema.items;\n              if (arr4) {\n                var $sch,\n                  $i = -1,\n                  l4 = arr4.length - 1;\n                while ($i < l4) {\n                  $sch = arr4[$i += 1];\n                  if ($sch.default !== undefined) {\n                    var $passData = $data + '[' + $i + ']';\n                    out += '  if (' + $passData + ' === undefined) ' + $passData + ' = ';\n                    if (it.opts.useDefaults == 'shared') {\n                      out += ' ' + it.useDefault($sch.default) + ' ';\n                    } else {\n                      out += ' ' + JSON.stringify($sch.default) + ' ';\n                    }\n                    out += '; ';\n                  }\n                }\n              }\n            }\n          }\n          var arr5 = $rulesGroup.rules;\n          if (arr5) {\n            var $rule,\n              i5 = -1,\n              l5 = arr5.length - 1;\n            while (i5 < l5) {\n              $rule = arr5[i5 += 1];\n              if ($shouldUseRule($rule)) {\n                var $code = $rule.code(it, $rule.keyword, $rulesGroup.type);\n                if ($code) {\n                  out += ' ' + $code + ' ';\n                  if ($breakOnError) {\n                    $closingBraces1 += '}';\n                  }\n                }\n              }\n            }\n          }\n          if ($breakOnError) {\n            out += ' ' + $closingBraces1 + ' ';\n            $closingBraces1 = '';\n          }\n          if ($rulesGroup.type) {\n            out += ' } ';\n            if ($typeSchema && $typeSchema === $rulesGroup.type && !$coerceToTypes) {\n              out += ' else { ';\n              var $schemaPath = it.schemaPath + '.type',\n                $errSchemaPath = it.errSchemaPath + '/type';\n              var $$outStack = $$outStack || [];\n              $$outStack.push(out);\n              out = ''; /* istanbul ignore else */\n              if (it.createErrors !== false) {\n                out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + it.errorPath + ' , schemaPath: ' + it.util.toQuotedString($errSchemaPath) + ' , params: { type: \\'';\n                if ($typeIsArray) {\n                  out += '' + $typeSchema.join(\",\");\n                } else {\n                  out += '' + $typeSchema;\n                }\n                out += '\\' } ';\n                if (it.opts.messages !== false) {\n                  out += ' , message: \\'should be ';\n                  if ($typeIsArray) {\n                    out += '' + $typeSchema.join(\",\");\n                  } else {\n                    out += '' + $typeSchema;\n                  }\n                  out += '\\' ';\n                }\n                if (it.opts.verbose) {\n                  out += ' , schema: validate.schema' + $schemaPath + ' , parentSchema: validate.schema' + it.schemaPath + ' , data: ' + $data + ' ';\n                }\n                out += ' } ';\n              } else {\n                out += ' {} ';\n              }\n              var __err = out;\n              out = $$outStack.pop();\n              if (!it.compositeRule && $breakOnError) {\n                /* istanbul ignore if */\n                if (it.async) {\n                  out += ' throw new ValidationError([' + __err + ']); ';\n                } else {\n                  out += ' validate.errors = [' + __err + ']; return false; ';\n                }\n              } else {\n                out += ' var err = ' + __err + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n              }\n              out += ' } ';\n            }\n          }\n          if ($breakOnError) {\n            out += ' if (errors === ';\n            if ($top) {\n              out += '0';\n            } else {\n              out += 'errs_' + $lvl;\n            }\n            out += ') { ';\n            $closingBraces2 += '}';\n          }\n        }\n      }\n    }\n  }\n  if ($breakOnError) {\n    out += ' ' + $closingBraces2 + ' ';\n  }\n  if ($top) {\n    if ($async) {\n      out += ' if (errors === 0) return data;           ';\n      out += ' else throw new ValidationError(vErrors); ';\n    } else {\n      out += ' validate.errors = vErrors; ';\n      out += ' return errors === 0;       ';\n    }\n    out += ' }); return validate;';\n  } else {\n    out += ' var ' + $valid + ' = errors === errs_' + $lvl + ';';\n  }\n  out = it.util.cleanUpCode(out);\n  if ($top) {\n    out = it.util.finalCleanUpCode(out, $async);\n  }\n  function $shouldUseGroup($rulesGroup) {\n    var rules = $rulesGroup.rules;\n    for (var i = 0; i < rules.length; i++) if ($shouldUseRule(rules[i])) return true;\n  }\n  function $shouldUseRule($rule) {\n    return it.schema[$rule.keyword] !== undefined || $rule.implements && $ruleImplementsSomeKeyword($rule);\n  }\n  function $ruleImplementsSomeKeyword($rule) {\n    var impl = $rule.implements;\n    for (var i = 0; i < impl.length; i++) if (it.schema[impl[i]] !== undefined) return true;\n  }\n  return out;\n};","map":{"version":3,"names":["module","exports","generate_validate","it","$keyword","$ruleType","out","$async","schema","$refKeywords","util","schemaHasRulesExcept","RULES","all","$id","self","_getId","isTop","async","$es7","opts","yieldAwait","sourceCode","processCode","$ref","$lvl","level","$dataLvl","dataLevel","$schema","$schemaPath","schemaPath","getProperty","$errSchemaPath","errSchemaPath","$breakOnError","allErrors","$errorKeyword","$data","$valid","$$outStack","push","createErrors","errorPath","toQuotedString","messages","verbose","__err","pop","compositeRule","$top","rootId","resolve","fullPath","root","baseId","dataPathArr","undefined","url","Error","$closingBraces1","$closingBraces2","$typeSchema","type","$typeIsArray","Array","isArray","length","extendRefs","logger","warn","coerceTypes","$coerceToTypes","coerceToTypes","$rulesGroup","types","$shouldUseGroup","$method","$dataType","$coerced","$bracesCoercion","arr1","$type","$i","l1","join","$parentData","$parentDataProperty","code","v5","patternGroups","arr2","i2","l2","checkDataType","useDefaults","properties","$schemaKeys","Object","keys","arr3","$propertyKey","i3","l3","$sch","default","$passData","useDefault","JSON","stringify","items","arr4","l4","arr5","rules","$rule","i5","l5","$shouldUseRule","$code","keyword","cleanUpCode","finalCleanUpCode","i","implements","$ruleImplementsSomeKeyword","impl"],"sources":["/Users/mohitgupta/Downloads/orgs/Clone/inst/node_modules/har-validator/node_modules/ajv/lib/dotjs/validate.js"],"sourcesContent":["'use strict';\nmodule.exports = function generate_validate(it, $keyword, $ruleType) {\n  var out = '';\n  var $async = it.schema.$async === true,\n    $refKeywords = it.util.schemaHasRulesExcept(it.schema, it.RULES.all, '$ref'),\n    $id = it.self._getId(it.schema);\n  if (it.isTop) {\n    if ($async) {\n      it.async = true;\n      var $es7 = it.opts.async == 'es7';\n      it.yieldAwait = $es7 ? 'await' : 'yield';\n    }\n    out += ' var validate = ';\n    if ($async) {\n      if ($es7) {\n        out += ' (async function ';\n      } else {\n        if (it.opts.async != '*') {\n          out += 'co.wrap';\n        }\n        out += '(function* ';\n      }\n    } else {\n      out += ' (function ';\n    }\n    out += ' (data, dataPath, parentData, parentDataProperty, rootData) { \\'use strict\\'; ';\n    if ($id && (it.opts.sourceCode || it.opts.processCode)) {\n      out += ' ' + ('/\\*# sourceURL=' + $id + ' */') + ' ';\n    }\n  }\n  if (typeof it.schema == 'boolean' || !($refKeywords || it.schema.$ref)) {\n    var $keyword = 'false schema';\n    var $lvl = it.level;\n    var $dataLvl = it.dataLevel;\n    var $schema = it.schema[$keyword];\n    var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n    var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n    var $breakOnError = !it.opts.allErrors;\n    var $errorKeyword;\n    var $data = 'data' + ($dataLvl || '');\n    var $valid = 'valid' + $lvl;\n    if (it.schema === false) {\n      if (it.isTop) {\n        $breakOnError = true;\n      } else {\n        out += ' var ' + ($valid) + ' = false; ';\n      }\n      var $$outStack = $$outStack || [];\n      $$outStack.push(out);\n      out = ''; /* istanbul ignore else */\n      if (it.createErrors !== false) {\n        out += ' { keyword: \\'' + ($errorKeyword || 'false schema') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n        if (it.opts.messages !== false) {\n          out += ' , message: \\'boolean schema is false\\' ';\n        }\n        if (it.opts.verbose) {\n          out += ' , schema: false , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n        }\n        out += ' } ';\n      } else {\n        out += ' {} ';\n      }\n      var __err = out;\n      out = $$outStack.pop();\n      if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n        if (it.async) {\n          out += ' throw new ValidationError([' + (__err) + ']); ';\n        } else {\n          out += ' validate.errors = [' + (__err) + ']; return false; ';\n        }\n      } else {\n        out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n      }\n    } else {\n      if (it.isTop) {\n        if ($async) {\n          out += ' return data; ';\n        } else {\n          out += ' validate.errors = null; return true; ';\n        }\n      } else {\n        out += ' var ' + ($valid) + ' = true; ';\n      }\n    }\n    if (it.isTop) {\n      out += ' }); return validate; ';\n    }\n    return out;\n  }\n  if (it.isTop) {\n    var $top = it.isTop,\n      $lvl = it.level = 0,\n      $dataLvl = it.dataLevel = 0,\n      $data = 'data';\n    it.rootId = it.resolve.fullPath(it.self._getId(it.root.schema));\n    it.baseId = it.baseId || it.rootId;\n    delete it.isTop;\n    it.dataPathArr = [undefined];\n    out += ' var vErrors = null; ';\n    out += ' var errors = 0;     ';\n    out += ' if (rootData === undefined) rootData = data; ';\n  } else {\n    var $lvl = it.level,\n      $dataLvl = it.dataLevel,\n      $data = 'data' + ($dataLvl || '');\n    if ($id) it.baseId = it.resolve.url(it.baseId, $id);\n    if ($async && !it.async) throw new Error('async schema in sync schema');\n    out += ' var errs_' + ($lvl) + ' = errors;';\n  }\n  var $valid = 'valid' + $lvl,\n    $breakOnError = !it.opts.allErrors,\n    $closingBraces1 = '',\n    $closingBraces2 = '';\n  var $errorKeyword;\n  var $typeSchema = it.schema.type,\n    $typeIsArray = Array.isArray($typeSchema);\n  if ($typeIsArray && $typeSchema.length == 1) {\n    $typeSchema = $typeSchema[0];\n    $typeIsArray = false;\n  }\n  if (it.schema.$ref && $refKeywords) {\n    if (it.opts.extendRefs == 'fail') {\n      throw new Error('$ref: validation keywords used in schema at path \"' + it.errSchemaPath + '\" (see option extendRefs)');\n    } else if (it.opts.extendRefs !== true) {\n      $refKeywords = false;\n      it.logger.warn('$ref: keywords ignored in schema at path \"' + it.errSchemaPath + '\"');\n    }\n  }\n  if ($typeSchema) {\n    if (it.opts.coerceTypes) {\n      var $coerceToTypes = it.util.coerceToTypes(it.opts.coerceTypes, $typeSchema);\n    }\n    var $rulesGroup = it.RULES.types[$typeSchema];\n    if ($coerceToTypes || $typeIsArray || $rulesGroup === true || ($rulesGroup && !$shouldUseGroup($rulesGroup))) {\n      var $schemaPath = it.schemaPath + '.type',\n        $errSchemaPath = it.errSchemaPath + '/type';\n      var $schemaPath = it.schemaPath + '.type',\n        $errSchemaPath = it.errSchemaPath + '/type',\n        $method = $typeIsArray ? 'checkDataTypes' : 'checkDataType';\n      out += ' if (' + (it.util[$method]($typeSchema, $data, true)) + ') { ';\n      if ($coerceToTypes) {\n        var $dataType = 'dataType' + $lvl,\n          $coerced = 'coerced' + $lvl;\n        out += ' var ' + ($dataType) + ' = typeof ' + ($data) + '; ';\n        if (it.opts.coerceTypes == 'array') {\n          out += ' if (' + ($dataType) + ' == \\'object\\' && Array.isArray(' + ($data) + ')) ' + ($dataType) + ' = \\'array\\'; ';\n        }\n        out += ' var ' + ($coerced) + ' = undefined; ';\n        var $bracesCoercion = '';\n        var arr1 = $coerceToTypes;\n        if (arr1) {\n          var $type, $i = -1,\n            l1 = arr1.length - 1;\n          while ($i < l1) {\n            $type = arr1[$i += 1];\n            if ($i) {\n              out += ' if (' + ($coerced) + ' === undefined) { ';\n              $bracesCoercion += '}';\n            }\n            if (it.opts.coerceTypes == 'array' && $type != 'array') {\n              out += ' if (' + ($dataType) + ' == \\'array\\' && ' + ($data) + '.length == 1) { ' + ($coerced) + ' = ' + ($data) + ' = ' + ($data) + '[0]; ' + ($dataType) + ' = typeof ' + ($data) + ';  } ';\n            }\n            if ($type == 'string') {\n              out += ' if (' + ($dataType) + ' == \\'number\\' || ' + ($dataType) + ' == \\'boolean\\') ' + ($coerced) + ' = \\'\\' + ' + ($data) + '; else if (' + ($data) + ' === null) ' + ($coerced) + ' = \\'\\'; ';\n            } else if ($type == 'number' || $type == 'integer') {\n              out += ' if (' + ($dataType) + ' == \\'boolean\\' || ' + ($data) + ' === null || (' + ($dataType) + ' == \\'string\\' && ' + ($data) + ' && ' + ($data) + ' == +' + ($data) + ' ';\n              if ($type == 'integer') {\n                out += ' && !(' + ($data) + ' % 1)';\n              }\n              out += ')) ' + ($coerced) + ' = +' + ($data) + '; ';\n            } else if ($type == 'boolean') {\n              out += ' if (' + ($data) + ' === \\'false\\' || ' + ($data) + ' === 0 || ' + ($data) + ' === null) ' + ($coerced) + ' = false; else if (' + ($data) + ' === \\'true\\' || ' + ($data) + ' === 1) ' + ($coerced) + ' = true; ';\n            } else if ($type == 'null') {\n              out += ' if (' + ($data) + ' === \\'\\' || ' + ($data) + ' === 0 || ' + ($data) + ' === false) ' + ($coerced) + ' = null; ';\n            } else if (it.opts.coerceTypes == 'array' && $type == 'array') {\n              out += ' if (' + ($dataType) + ' == \\'string\\' || ' + ($dataType) + ' == \\'number\\' || ' + ($dataType) + ' == \\'boolean\\' || ' + ($data) + ' == null) ' + ($coerced) + ' = [' + ($data) + ']; ';\n            }\n          }\n        }\n        out += ' ' + ($bracesCoercion) + ' if (' + ($coerced) + ' === undefined) {   ';\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \\'';\n          if ($typeIsArray) {\n            out += '' + ($typeSchema.join(\",\"));\n          } else {\n            out += '' + ($typeSchema);\n          }\n          out += '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'should be ';\n            if ($typeIsArray) {\n              out += '' + ($typeSchema.join(\",\"));\n            } else {\n              out += '' + ($typeSchema);\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n        out += ' } else {  ';\n        var $parentData = $dataLvl ? 'data' + (($dataLvl - 1) || '') : 'parentData',\n          $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';\n        out += ' ' + ($data) + ' = ' + ($coerced) + '; ';\n        if (!$dataLvl) {\n          out += 'if (' + ($parentData) + ' !== undefined)';\n        }\n        out += ' ' + ($parentData) + '[' + ($parentDataProperty) + '] = ' + ($coerced) + '; } ';\n      } else {\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \\'';\n          if ($typeIsArray) {\n            out += '' + ($typeSchema.join(\",\"));\n          } else {\n            out += '' + ($typeSchema);\n          }\n          out += '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'should be ';\n            if ($typeIsArray) {\n              out += '' + ($typeSchema.join(\",\"));\n            } else {\n              out += '' + ($typeSchema);\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n      }\n      out += ' } ';\n    }\n  }\n  if (it.schema.$ref && !$refKeywords) {\n    out += ' ' + (it.RULES.all.$ref.code(it, '$ref')) + ' ';\n    if ($breakOnError) {\n      out += ' } if (errors === ';\n      if ($top) {\n        out += '0';\n      } else {\n        out += 'errs_' + ($lvl);\n      }\n      out += ') { ';\n      $closingBraces2 += '}';\n    }\n  } else {\n    if (it.opts.v5 && it.schema.patternGroups) {\n      it.logger.warn('keyword \"patternGroups\" is deprecated and disabled. Use option patternGroups: true to enable.');\n    }\n    var arr2 = it.RULES;\n    if (arr2) {\n      var $rulesGroup, i2 = -1,\n        l2 = arr2.length - 1;\n      while (i2 < l2) {\n        $rulesGroup = arr2[i2 += 1];\n        if ($shouldUseGroup($rulesGroup)) {\n          if ($rulesGroup.type) {\n            out += ' if (' + (it.util.checkDataType($rulesGroup.type, $data)) + ') { ';\n          }\n          if (it.opts.useDefaults && !it.compositeRule) {\n            if ($rulesGroup.type == 'object' && it.schema.properties) {\n              var $schema = it.schema.properties,\n                $schemaKeys = Object.keys($schema);\n              var arr3 = $schemaKeys;\n              if (arr3) {\n                var $propertyKey, i3 = -1,\n                  l3 = arr3.length - 1;\n                while (i3 < l3) {\n                  $propertyKey = arr3[i3 += 1];\n                  var $sch = $schema[$propertyKey];\n                  if ($sch.default !== undefined) {\n                    var $passData = $data + it.util.getProperty($propertyKey);\n                    out += '  if (' + ($passData) + ' === undefined) ' + ($passData) + ' = ';\n                    if (it.opts.useDefaults == 'shared') {\n                      out += ' ' + (it.useDefault($sch.default)) + ' ';\n                    } else {\n                      out += ' ' + (JSON.stringify($sch.default)) + ' ';\n                    }\n                    out += '; ';\n                  }\n                }\n              }\n            } else if ($rulesGroup.type == 'array' && Array.isArray(it.schema.items)) {\n              var arr4 = it.schema.items;\n              if (arr4) {\n                var $sch, $i = -1,\n                  l4 = arr4.length - 1;\n                while ($i < l4) {\n                  $sch = arr4[$i += 1];\n                  if ($sch.default !== undefined) {\n                    var $passData = $data + '[' + $i + ']';\n                    out += '  if (' + ($passData) + ' === undefined) ' + ($passData) + ' = ';\n                    if (it.opts.useDefaults == 'shared') {\n                      out += ' ' + (it.useDefault($sch.default)) + ' ';\n                    } else {\n                      out += ' ' + (JSON.stringify($sch.default)) + ' ';\n                    }\n                    out += '; ';\n                  }\n                }\n              }\n            }\n          }\n          var arr5 = $rulesGroup.rules;\n          if (arr5) {\n            var $rule, i5 = -1,\n              l5 = arr5.length - 1;\n            while (i5 < l5) {\n              $rule = arr5[i5 += 1];\n              if ($shouldUseRule($rule)) {\n                var $code = $rule.code(it, $rule.keyword, $rulesGroup.type);\n                if ($code) {\n                  out += ' ' + ($code) + ' ';\n                  if ($breakOnError) {\n                    $closingBraces1 += '}';\n                  }\n                }\n              }\n            }\n          }\n          if ($breakOnError) {\n            out += ' ' + ($closingBraces1) + ' ';\n            $closingBraces1 = '';\n          }\n          if ($rulesGroup.type) {\n            out += ' } ';\n            if ($typeSchema && $typeSchema === $rulesGroup.type && !$coerceToTypes) {\n              out += ' else { ';\n              var $schemaPath = it.schemaPath + '.type',\n                $errSchemaPath = it.errSchemaPath + '/type';\n              var $$outStack = $$outStack || [];\n              $$outStack.push(out);\n              out = ''; /* istanbul ignore else */\n              if (it.createErrors !== false) {\n                out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \\'';\n                if ($typeIsArray) {\n                  out += '' + ($typeSchema.join(\",\"));\n                } else {\n                  out += '' + ($typeSchema);\n                }\n                out += '\\' } ';\n                if (it.opts.messages !== false) {\n                  out += ' , message: \\'should be ';\n                  if ($typeIsArray) {\n                    out += '' + ($typeSchema.join(\",\"));\n                  } else {\n                    out += '' + ($typeSchema);\n                  }\n                  out += '\\' ';\n                }\n                if (it.opts.verbose) {\n                  out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n                }\n                out += ' } ';\n              } else {\n                out += ' {} ';\n              }\n              var __err = out;\n              out = $$outStack.pop();\n              if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n                if (it.async) {\n                  out += ' throw new ValidationError([' + (__err) + ']); ';\n                } else {\n                  out += ' validate.errors = [' + (__err) + ']; return false; ';\n                }\n              } else {\n                out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n              }\n              out += ' } ';\n            }\n          }\n          if ($breakOnError) {\n            out += ' if (errors === ';\n            if ($top) {\n              out += '0';\n            } else {\n              out += 'errs_' + ($lvl);\n            }\n            out += ') { ';\n            $closingBraces2 += '}';\n          }\n        }\n      }\n    }\n  }\n  if ($breakOnError) {\n    out += ' ' + ($closingBraces2) + ' ';\n  }\n  if ($top) {\n    if ($async) {\n      out += ' if (errors === 0) return data;           ';\n      out += ' else throw new ValidationError(vErrors); ';\n    } else {\n      out += ' validate.errors = vErrors; ';\n      out += ' return errors === 0;       ';\n    }\n    out += ' }); return validate;';\n  } else {\n    out += ' var ' + ($valid) + ' = errors === errs_' + ($lvl) + ';';\n  }\n  out = it.util.cleanUpCode(out);\n  if ($top) {\n    out = it.util.finalCleanUpCode(out, $async);\n  }\n\n  function $shouldUseGroup($rulesGroup) {\n    var rules = $rulesGroup.rules;\n    for (var i = 0; i < rules.length; i++)\n      if ($shouldUseRule(rules[i])) return true;\n  }\n\n  function $shouldUseRule($rule) {\n    return it.schema[$rule.keyword] !== undefined || ($rule.implements && $ruleImplementsSomeKeyword($rule));\n  }\n\n  function $ruleImplementsSomeKeyword($rule) {\n    var impl = $rule.implements;\n    for (var i = 0; i < impl.length; i++)\n      if (it.schema[impl[i]] !== undefined) return true;\n  }\n  return out;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}