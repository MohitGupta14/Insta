{"ast":null,"code":"// Copyright 2018 Joyent, Inc.\n\nmodule.exports = {\n  read: read,\n  write: write\n};\nvar assert = require('assert-plus');\nvar Buffer = require('safer-buffer').Buffer;\nvar utils = require('../utils');\nvar Key = require('../key');\nvar PrivateKey = require('../private-key');\nvar pem = require('./pem');\nvar ssh = require('./ssh');\nvar rfc4253 = require('./rfc4253');\nvar dnssec = require('./dnssec');\nvar putty = require('./putty');\nvar DNSSEC_PRIVKEY_HEADER_PREFIX = 'Private-key-format: v1';\nfunction read(buf, options) {\n  if (typeof buf === 'string') {\n    if (buf.trim().match(/^[-]+[ ]*BEGIN/)) return pem.read(buf, options);\n    if (buf.match(/^\\s*ssh-[a-z]/)) return ssh.read(buf, options);\n    if (buf.match(/^\\s*ecdsa-/)) return ssh.read(buf, options);\n    if (buf.match(/^putty-user-key-file-2:/i)) return putty.read(buf, options);\n    if (findDNSSECHeader(buf)) return dnssec.read(buf, options);\n    buf = Buffer.from(buf, 'binary');\n  } else {\n    assert.buffer(buf);\n    if (findPEMHeader(buf)) return pem.read(buf, options);\n    if (findSSHHeader(buf)) return ssh.read(buf, options);\n    if (findPuTTYHeader(buf)) return putty.read(buf, options);\n    if (findDNSSECHeader(buf)) return dnssec.read(buf, options);\n  }\n  if (buf.readUInt32BE(0) < buf.length) return rfc4253.read(buf, options);\n  throw new Error('Failed to auto-detect format of key');\n}\nfunction findPuTTYHeader(buf) {\n  var offset = 0;\n  while (offset < buf.length && (buf[offset] === 32 || buf[offset] === 10 || buf[offset] === 9)) ++offset;\n  if (offset + 22 <= buf.length && buf.slice(offset, offset + 22).toString('ascii').toLowerCase() === 'putty-user-key-file-2:') return true;\n  return false;\n}\nfunction findSSHHeader(buf) {\n  var offset = 0;\n  while (offset < buf.length && (buf[offset] === 32 || buf[offset] === 10 || buf[offset] === 9)) ++offset;\n  if (offset + 4 <= buf.length && buf.slice(offset, offset + 4).toString('ascii') === 'ssh-') return true;\n  if (offset + 6 <= buf.length && buf.slice(offset, offset + 6).toString('ascii') === 'ecdsa-') return true;\n  return false;\n}\nfunction findPEMHeader(buf) {\n  var offset = 0;\n  while (offset < buf.length && (buf[offset] === 32 || buf[offset] === 10)) ++offset;\n  if (buf[offset] !== 45) return false;\n  while (offset < buf.length && buf[offset] === 45) ++offset;\n  while (offset < buf.length && buf[offset] === 32) ++offset;\n  if (offset + 5 > buf.length || buf.slice(offset, offset + 5).toString('ascii') !== 'BEGIN') return false;\n  return true;\n}\nfunction findDNSSECHeader(buf) {\n  // private case first\n  if (buf.length <= DNSSEC_PRIVKEY_HEADER_PREFIX.length) return false;\n  var headerCheck = buf.slice(0, DNSSEC_PRIVKEY_HEADER_PREFIX.length);\n  if (headerCheck.toString('ascii') === DNSSEC_PRIVKEY_HEADER_PREFIX) return true;\n\n  // public-key RFC3110 ?\n  // 'domain.com. IN KEY ...' or 'domain.com. IN DNSKEY ...'\n  // skip any comment-lines\n  if (typeof buf !== 'string') {\n    buf = buf.toString('ascii');\n  }\n  var lines = buf.split('\\n');\n  var line = 0;\n  /* JSSTYLED */\n  while (lines[line].match(/^\\;/)) line++;\n  if (lines[line].toString('ascii').match(/\\. IN KEY /)) return true;\n  if (lines[line].toString('ascii').match(/\\. IN DNSKEY /)) return true;\n  return false;\n}\nfunction write(key, options) {\n  throw new Error('\"auto\" format cannot be used for writing');\n}","map":{"version":3,"names":["module","exports","read","write","assert","require","Buffer","utils","Key","PrivateKey","pem","ssh","rfc4253","dnssec","putty","DNSSEC_PRIVKEY_HEADER_PREFIX","buf","options","trim","match","findDNSSECHeader","from","buffer","findPEMHeader","findSSHHeader","findPuTTYHeader","readUInt32BE","length","Error","offset","slice","toString","toLowerCase","headerCheck","lines","split","line","key"],"sources":["/Users/mohitgupta/Downloads/orgs/Clone/inst/node_modules/sshpk/lib/formats/auto.js"],"sourcesContent":["// Copyright 2018 Joyent, Inc.\n\nmodule.exports = {\n\tread: read,\n\twrite: write\n};\n\nvar assert = require('assert-plus');\nvar Buffer = require('safer-buffer').Buffer;\nvar utils = require('../utils');\nvar Key = require('../key');\nvar PrivateKey = require('../private-key');\n\nvar pem = require('./pem');\nvar ssh = require('./ssh');\nvar rfc4253 = require('./rfc4253');\nvar dnssec = require('./dnssec');\nvar putty = require('./putty');\n\nvar DNSSEC_PRIVKEY_HEADER_PREFIX = 'Private-key-format: v1';\n\nfunction read(buf, options) {\n\tif (typeof (buf) === 'string') {\n\t\tif (buf.trim().match(/^[-]+[ ]*BEGIN/))\n\t\t\treturn (pem.read(buf, options));\n\t\tif (buf.match(/^\\s*ssh-[a-z]/))\n\t\t\treturn (ssh.read(buf, options));\n\t\tif (buf.match(/^\\s*ecdsa-/))\n\t\t\treturn (ssh.read(buf, options));\n\t\tif (buf.match(/^putty-user-key-file-2:/i))\n\t\t\treturn (putty.read(buf, options));\n\t\tif (findDNSSECHeader(buf))\n\t\t\treturn (dnssec.read(buf, options));\n\t\tbuf = Buffer.from(buf, 'binary');\n\t} else {\n\t\tassert.buffer(buf);\n\t\tif (findPEMHeader(buf))\n\t\t\treturn (pem.read(buf, options));\n\t\tif (findSSHHeader(buf))\n\t\t\treturn (ssh.read(buf, options));\n\t\tif (findPuTTYHeader(buf))\n\t\t\treturn (putty.read(buf, options));\n\t\tif (findDNSSECHeader(buf))\n\t\t\treturn (dnssec.read(buf, options));\n\t}\n\tif (buf.readUInt32BE(0) < buf.length)\n\t\treturn (rfc4253.read(buf, options));\n\tthrow (new Error('Failed to auto-detect format of key'));\n}\n\nfunction findPuTTYHeader(buf) {\n\tvar offset = 0;\n\twhile (offset < buf.length &&\n\t    (buf[offset] === 32 || buf[offset] === 10 || buf[offset] === 9))\n\t\t++offset;\n\tif (offset + 22 <= buf.length &&\n\t    buf.slice(offset, offset + 22).toString('ascii').toLowerCase() ===\n\t    'putty-user-key-file-2:')\n\t\treturn (true);\n\treturn (false);\n}\n\nfunction findSSHHeader(buf) {\n\tvar offset = 0;\n\twhile (offset < buf.length &&\n\t    (buf[offset] === 32 || buf[offset] === 10 || buf[offset] === 9))\n\t\t++offset;\n\tif (offset + 4 <= buf.length &&\n\t    buf.slice(offset, offset + 4).toString('ascii') === 'ssh-')\n\t\treturn (true);\n\tif (offset + 6 <= buf.length &&\n\t    buf.slice(offset, offset + 6).toString('ascii') === 'ecdsa-')\n\t\treturn (true);\n\treturn (false);\n}\n\nfunction findPEMHeader(buf) {\n\tvar offset = 0;\n\twhile (offset < buf.length &&\n\t    (buf[offset] === 32 || buf[offset] === 10))\n\t\t++offset;\n\tif (buf[offset] !== 45)\n\t\treturn (false);\n\twhile (offset < buf.length &&\n\t    (buf[offset] === 45))\n\t\t++offset;\n\twhile (offset < buf.length &&\n\t    (buf[offset] === 32))\n\t\t++offset;\n\tif (offset + 5 > buf.length ||\n\t    buf.slice(offset, offset + 5).toString('ascii') !== 'BEGIN')\n\t\treturn (false);\n\treturn (true);\n}\n\nfunction findDNSSECHeader(buf) {\n\t// private case first\n\tif (buf.length <= DNSSEC_PRIVKEY_HEADER_PREFIX.length)\n\t\treturn (false);\n\tvar headerCheck = buf.slice(0, DNSSEC_PRIVKEY_HEADER_PREFIX.length);\n\tif (headerCheck.toString('ascii') === DNSSEC_PRIVKEY_HEADER_PREFIX)\n\t\treturn (true);\n\n\t// public-key RFC3110 ?\n\t// 'domain.com. IN KEY ...' or 'domain.com. IN DNSKEY ...'\n\t// skip any comment-lines\n\tif (typeof (buf) !== 'string') {\n\t\tbuf = buf.toString('ascii');\n\t}\n\tvar lines = buf.split('\\n');\n\tvar line = 0;\n\t/* JSSTYLED */\n\twhile (lines[line].match(/^\\;/))\n\t\tline++;\n\tif (lines[line].toString('ascii').match(/\\. IN KEY /))\n\t\treturn (true);\n\tif (lines[line].toString('ascii').match(/\\. IN DNSKEY /))\n\t\treturn (true);\n\treturn (false);\n}\n\nfunction write(key, options) {\n\tthrow (new Error('\"auto\" format cannot be used for writing'));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}