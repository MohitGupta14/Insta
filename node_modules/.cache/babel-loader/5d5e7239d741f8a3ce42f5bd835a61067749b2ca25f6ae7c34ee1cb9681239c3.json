{"ast":null,"code":"// Named EC curves\n\n// Requires ec.js, jsbn.js, and jsbn2.js\nvar BigInteger = require('jsbn').BigInteger;\nvar ECCurveFp = require('./ec.js').ECCurveFp;\n\n// ----------------\n// X9ECParameters\n\n// constructor\nfunction X9ECParameters(curve, g, n, h) {\n  this.curve = curve;\n  this.g = g;\n  this.n = n;\n  this.h = h;\n}\nfunction x9getCurve() {\n  return this.curve;\n}\nfunction x9getG() {\n  return this.g;\n}\nfunction x9getN() {\n  return this.n;\n}\nfunction x9getH() {\n  return this.h;\n}\nX9ECParameters.prototype.getCurve = x9getCurve;\nX9ECParameters.prototype.getG = x9getG;\nX9ECParameters.prototype.getN = x9getN;\nX9ECParameters.prototype.getH = x9getH;\n\n// ----------------\n// SECNamedCurves\n\nfunction fromHex(s) {\n  return new BigInteger(s, 16);\n}\nfunction secp128r1() {\n  // p = 2^128 - 2^97 - 1\n  var p = fromHex(\"FFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFF\");\n  var a = fromHex(\"FFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFC\");\n  var b = fromHex(\"E87579C11079F43DD824993C2CEE5ED3\");\n  //byte[] S = Hex.decode(\"000E0D4D696E6768756151750CC03A4473D03679\");\n  var n = fromHex(\"FFFFFFFE0000000075A30D1B9038A115\");\n  var h = BigInteger.ONE;\n  var curve = new ECCurveFp(p, a, b);\n  var G = curve.decodePointHex(\"04\" + \"161FF7528B899B2D0C28607CA52C5B86\" + \"CF5AC8395BAFEB13C02DA292DDED7A83\");\n  return new X9ECParameters(curve, G, n, h);\n}\nfunction secp160k1() {\n  // p = 2^160 - 2^32 - 2^14 - 2^12 - 2^9 - 2^8 - 2^7 - 2^3 - 2^2 - 1\n  var p = fromHex(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFAC73\");\n  var a = BigInteger.ZERO;\n  var b = fromHex(\"7\");\n  //byte[] S = null;\n  var n = fromHex(\"0100000000000000000001B8FA16DFAB9ACA16B6B3\");\n  var h = BigInteger.ONE;\n  var curve = new ECCurveFp(p, a, b);\n  var G = curve.decodePointHex(\"04\" + \"3B4C382CE37AA192A4019E763036F4F5DD4D7EBB\" + \"938CF935318FDCED6BC28286531733C3F03C4FEE\");\n  return new X9ECParameters(curve, G, n, h);\n}\nfunction secp160r1() {\n  // p = 2^160 - 2^31 - 1\n  var p = fromHex(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFF\");\n  var a = fromHex(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFC\");\n  var b = fromHex(\"1C97BEFC54BD7A8B65ACF89F81D4D4ADC565FA45\");\n  //byte[] S = Hex.decode(\"1053CDE42C14D696E67687561517533BF3F83345\");\n  var n = fromHex(\"0100000000000000000001F4C8F927AED3CA752257\");\n  var h = BigInteger.ONE;\n  var curve = new ECCurveFp(p, a, b);\n  var G = curve.decodePointHex(\"04\" + \"4A96B5688EF573284664698968C38BB913CBFC82\" + \"23A628553168947D59DCC912042351377AC5FB32\");\n  return new X9ECParameters(curve, G, n, h);\n}\nfunction secp192k1() {\n  // p = 2^192 - 2^32 - 2^12 - 2^8 - 2^7 - 2^6 - 2^3 - 1\n  var p = fromHex(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFEE37\");\n  var a = BigInteger.ZERO;\n  var b = fromHex(\"3\");\n  //byte[] S = null;\n  var n = fromHex(\"FFFFFFFFFFFFFFFFFFFFFFFE26F2FC170F69466A74DEFD8D\");\n  var h = BigInteger.ONE;\n  var curve = new ECCurveFp(p, a, b);\n  var G = curve.decodePointHex(\"04\" + \"DB4FF10EC057E9AE26B07D0280B7F4341DA5D1B1EAE06C7D\" + \"9B2F2F6D9C5628A7844163D015BE86344082AA88D95E2F9D\");\n  return new X9ECParameters(curve, G, n, h);\n}\nfunction secp192r1() {\n  // p = 2^192 - 2^64 - 1\n  var p = fromHex(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFF\");\n  var a = fromHex(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFC\");\n  var b = fromHex(\"64210519E59C80E70FA7E9AB72243049FEB8DEECC146B9B1\");\n  //byte[] S = Hex.decode(\"3045AE6FC8422F64ED579528D38120EAE12196D5\");\n  var n = fromHex(\"FFFFFFFFFFFFFFFFFFFFFFFF99DEF836146BC9B1B4D22831\");\n  var h = BigInteger.ONE;\n  var curve = new ECCurveFp(p, a, b);\n  var G = curve.decodePointHex(\"04\" + \"188DA80EB03090F67CBF20EB43A18800F4FF0AFD82FF1012\" + \"07192B95FFC8DA78631011ED6B24CDD573F977A11E794811\");\n  return new X9ECParameters(curve, G, n, h);\n}\nfunction secp224r1() {\n  // p = 2^224 - 2^96 + 1\n  var p = fromHex(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000001\");\n  var a = fromHex(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFE\");\n  var b = fromHex(\"B4050A850C04B3ABF54132565044B0B7D7BFD8BA270B39432355FFB4\");\n  //byte[] S = Hex.decode(\"BD71344799D5C7FCDC45B59FA3B9AB8F6A948BC5\");\n  var n = fromHex(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFF16A2E0B8F03E13DD29455C5C2A3D\");\n  var h = BigInteger.ONE;\n  var curve = new ECCurveFp(p, a, b);\n  var G = curve.decodePointHex(\"04\" + \"B70E0CBD6BB4BF7F321390B94A03C1D356C21122343280D6115C1D21\" + \"BD376388B5F723FB4C22DFE6CD4375A05A07476444D5819985007E34\");\n  return new X9ECParameters(curve, G, n, h);\n}\nfunction secp256r1() {\n  // p = 2^224 (2^32 - 1) + 2^192 + 2^96 - 1\n  var p = fromHex(\"FFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF\");\n  var a = fromHex(\"FFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFC\");\n  var b = fromHex(\"5AC635D8AA3A93E7B3EBBD55769886BC651D06B0CC53B0F63BCE3C3E27D2604B\");\n  //byte[] S = Hex.decode(\"C49D360886E704936A6678E1139D26B7819F7E90\");\n  var n = fromHex(\"FFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551\");\n  var h = BigInteger.ONE;\n  var curve = new ECCurveFp(p, a, b);\n  var G = curve.decodePointHex(\"04\" + \"6B17D1F2E12C4247F8BCE6E563A440F277037D812DEB33A0F4A13945D898C296\" + \"4FE342E2FE1A7F9B8EE7EB4A7C0F9E162BCE33576B315ECECBB6406837BF51F5\");\n  return new X9ECParameters(curve, G, n, h);\n}\n\n// TODO: make this into a proper hashtable\nfunction getSECCurveByName(name) {\n  if (name == \"secp128r1\") return secp128r1();\n  if (name == \"secp160k1\") return secp160k1();\n  if (name == \"secp160r1\") return secp160r1();\n  if (name == \"secp192k1\") return secp192k1();\n  if (name == \"secp192r1\") return secp192r1();\n  if (name == \"secp224r1\") return secp224r1();\n  if (name == \"secp256r1\") return secp256r1();\n  return null;\n}\nmodule.exports = {\n  \"secp128r1\": secp128r1,\n  \"secp160k1\": secp160k1,\n  \"secp160r1\": secp160r1,\n  \"secp192k1\": secp192k1,\n  \"secp192r1\": secp192r1,\n  \"secp224r1\": secp224r1,\n  \"secp256r1\": secp256r1\n};","map":{"version":3,"names":["BigInteger","require","ECCurveFp","X9ECParameters","curve","g","n","h","x9getCurve","x9getG","x9getN","x9getH","prototype","getCurve","getG","getN","getH","fromHex","s","secp128r1","p","a","b","ONE","G","decodePointHex","secp160k1","ZERO","secp160r1","secp192k1","secp192r1","secp224r1","secp256r1","getSECCurveByName","name","module","exports"],"sources":["/Users/mohitgupta/Downloads/orgs/Clone/inst/node_modules/ecc-jsbn/lib/sec.js"],"sourcesContent":["// Named EC curves\n\n// Requires ec.js, jsbn.js, and jsbn2.js\nvar BigInteger = require('jsbn').BigInteger\nvar ECCurveFp = require('./ec.js').ECCurveFp\n\n\n// ----------------\n// X9ECParameters\n\n// constructor\nfunction X9ECParameters(curve,g,n,h) {\n    this.curve = curve;\n    this.g = g;\n    this.n = n;\n    this.h = h;\n}\n\nfunction x9getCurve() {\n    return this.curve;\n}\n\nfunction x9getG() {\n    return this.g;\n}\n\nfunction x9getN() {\n    return this.n;\n}\n\nfunction x9getH() {\n    return this.h;\n}\n\nX9ECParameters.prototype.getCurve = x9getCurve;\nX9ECParameters.prototype.getG = x9getG;\nX9ECParameters.prototype.getN = x9getN;\nX9ECParameters.prototype.getH = x9getH;\n\n// ----------------\n// SECNamedCurves\n\nfunction fromHex(s) { return new BigInteger(s, 16); }\n\nfunction secp128r1() {\n    // p = 2^128 - 2^97 - 1\n    var p = fromHex(\"FFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFF\");\n    var a = fromHex(\"FFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFC\");\n    var b = fromHex(\"E87579C11079F43DD824993C2CEE5ED3\");\n    //byte[] S = Hex.decode(\"000E0D4D696E6768756151750CC03A4473D03679\");\n    var n = fromHex(\"FFFFFFFE0000000075A30D1B9038A115\");\n    var h = BigInteger.ONE;\n    var curve = new ECCurveFp(p, a, b);\n    var G = curve.decodePointHex(\"04\"\n                + \"161FF7528B899B2D0C28607CA52C5B86\"\n\t\t+ \"CF5AC8395BAFEB13C02DA292DDED7A83\");\n    return new X9ECParameters(curve, G, n, h);\n}\n\nfunction secp160k1() {\n    // p = 2^160 - 2^32 - 2^14 - 2^12 - 2^9 - 2^8 - 2^7 - 2^3 - 2^2 - 1\n    var p = fromHex(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFAC73\");\n    var a = BigInteger.ZERO;\n    var b = fromHex(\"7\");\n    //byte[] S = null;\n    var n = fromHex(\"0100000000000000000001B8FA16DFAB9ACA16B6B3\");\n    var h = BigInteger.ONE;\n    var curve = new ECCurveFp(p, a, b);\n    var G = curve.decodePointHex(\"04\"\n                + \"3B4C382CE37AA192A4019E763036F4F5DD4D7EBB\"\n                + \"938CF935318FDCED6BC28286531733C3F03C4FEE\");\n    return new X9ECParameters(curve, G, n, h);\n}\n\nfunction secp160r1() {\n    // p = 2^160 - 2^31 - 1\n    var p = fromHex(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFF\");\n    var a = fromHex(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFC\");\n    var b = fromHex(\"1C97BEFC54BD7A8B65ACF89F81D4D4ADC565FA45\");\n    //byte[] S = Hex.decode(\"1053CDE42C14D696E67687561517533BF3F83345\");\n    var n = fromHex(\"0100000000000000000001F4C8F927AED3CA752257\");\n    var h = BigInteger.ONE;\n    var curve = new ECCurveFp(p, a, b);\n    var G = curve.decodePointHex(\"04\"\n\t\t+ \"4A96B5688EF573284664698968C38BB913CBFC82\"\n\t\t+ \"23A628553168947D59DCC912042351377AC5FB32\");\n    return new X9ECParameters(curve, G, n, h);\n}\n\nfunction secp192k1() {\n    // p = 2^192 - 2^32 - 2^12 - 2^8 - 2^7 - 2^6 - 2^3 - 1\n    var p = fromHex(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFEE37\");\n    var a = BigInteger.ZERO;\n    var b = fromHex(\"3\");\n    //byte[] S = null;\n    var n = fromHex(\"FFFFFFFFFFFFFFFFFFFFFFFE26F2FC170F69466A74DEFD8D\");\n    var h = BigInteger.ONE;\n    var curve = new ECCurveFp(p, a, b);\n    var G = curve.decodePointHex(\"04\"\n                + \"DB4FF10EC057E9AE26B07D0280B7F4341DA5D1B1EAE06C7D\"\n                + \"9B2F2F6D9C5628A7844163D015BE86344082AA88D95E2F9D\");\n    return new X9ECParameters(curve, G, n, h);\n}\n\nfunction secp192r1() {\n    // p = 2^192 - 2^64 - 1\n    var p = fromHex(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFF\");\n    var a = fromHex(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFC\");\n    var b = fromHex(\"64210519E59C80E70FA7E9AB72243049FEB8DEECC146B9B1\");\n    //byte[] S = Hex.decode(\"3045AE6FC8422F64ED579528D38120EAE12196D5\");\n    var n = fromHex(\"FFFFFFFFFFFFFFFFFFFFFFFF99DEF836146BC9B1B4D22831\");\n    var h = BigInteger.ONE;\n    var curve = new ECCurveFp(p, a, b);\n    var G = curve.decodePointHex(\"04\"\n                + \"188DA80EB03090F67CBF20EB43A18800F4FF0AFD82FF1012\"\n                + \"07192B95FFC8DA78631011ED6B24CDD573F977A11E794811\");\n    return new X9ECParameters(curve, G, n, h);\n}\n\nfunction secp224r1() {\n    // p = 2^224 - 2^96 + 1\n    var p = fromHex(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000001\");\n    var a = fromHex(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFE\");\n    var b = fromHex(\"B4050A850C04B3ABF54132565044B0B7D7BFD8BA270B39432355FFB4\");\n    //byte[] S = Hex.decode(\"BD71344799D5C7FCDC45B59FA3B9AB8F6A948BC5\");\n    var n = fromHex(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFF16A2E0B8F03E13DD29455C5C2A3D\");\n    var h = BigInteger.ONE;\n    var curve = new ECCurveFp(p, a, b);\n    var G = curve.decodePointHex(\"04\"\n                + \"B70E0CBD6BB4BF7F321390B94A03C1D356C21122343280D6115C1D21\"\n                + \"BD376388B5F723FB4C22DFE6CD4375A05A07476444D5819985007E34\");\n    return new X9ECParameters(curve, G, n, h);\n}\n\nfunction secp256r1() {\n    // p = 2^224 (2^32 - 1) + 2^192 + 2^96 - 1\n    var p = fromHex(\"FFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF\");\n    var a = fromHex(\"FFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFC\");\n    var b = fromHex(\"5AC635D8AA3A93E7B3EBBD55769886BC651D06B0CC53B0F63BCE3C3E27D2604B\");\n    //byte[] S = Hex.decode(\"C49D360886E704936A6678E1139D26B7819F7E90\");\n    var n = fromHex(\"FFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551\");\n    var h = BigInteger.ONE;\n    var curve = new ECCurveFp(p, a, b);\n    var G = curve.decodePointHex(\"04\"\n                + \"6B17D1F2E12C4247F8BCE6E563A440F277037D812DEB33A0F4A13945D898C296\"\n\t\t+ \"4FE342E2FE1A7F9B8EE7EB4A7C0F9E162BCE33576B315ECECBB6406837BF51F5\");\n    return new X9ECParameters(curve, G, n, h);\n}\n\n// TODO: make this into a proper hashtable\nfunction getSECCurveByName(name) {\n    if(name == \"secp128r1\") return secp128r1();\n    if(name == \"secp160k1\") return secp160k1();\n    if(name == \"secp160r1\") return secp160r1();\n    if(name == \"secp192k1\") return secp192k1();\n    if(name == \"secp192r1\") return secp192r1();\n    if(name == \"secp224r1\") return secp224r1();\n    if(name == \"secp256r1\") return secp256r1();\n    return null;\n}\n\nmodule.exports = {\n  \"secp128r1\":secp128r1,\n  \"secp160k1\":secp160k1,\n  \"secp160r1\":secp160r1,\n  \"secp192k1\":secp192k1,\n  \"secp192r1\":secp192r1,\n  \"secp224r1\":secp224r1,\n  \"secp256r1\":secp256r1\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}