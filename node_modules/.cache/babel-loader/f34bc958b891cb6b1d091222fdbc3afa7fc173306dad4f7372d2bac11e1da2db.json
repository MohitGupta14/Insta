{"ast":null,"code":"/*!\n * Copyright (c) 2015, Salesforce.com, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of Salesforce.com nor the names of its contributors may\n * be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n'use strict';\n\nvar Store = require('./store').Store;\nvar permuteDomain = require('./permuteDomain').permuteDomain;\nvar pathMatch = require('./pathMatch').pathMatch;\nvar util = require('util');\nfunction MemoryCookieStore() {\n  Store.call(this);\n  this.idx = {};\n}\nutil.inherits(MemoryCookieStore, Store);\nexports.MemoryCookieStore = MemoryCookieStore;\nMemoryCookieStore.prototype.idx = null;\n\n// Since it's just a struct in RAM, this Store is synchronous\nMemoryCookieStore.prototype.synchronous = true;\n\n// force a default depth:\nMemoryCookieStore.prototype.inspect = function () {\n  return \"{ idx: \" + util.inspect(this.idx, false, 2) + ' }';\n};\nMemoryCookieStore.prototype.findCookie = function (domain, path, key, cb) {\n  if (!this.idx[domain]) {\n    return cb(null, undefined);\n  }\n  if (!this.idx[domain][path]) {\n    return cb(null, undefined);\n  }\n  return cb(null, this.idx[domain][path][key] || null);\n};\nMemoryCookieStore.prototype.findCookies = function (domain, path, cb) {\n  var results = [];\n  if (!domain) {\n    return cb(null, []);\n  }\n  var pathMatcher;\n  if (!path) {\n    // null means \"all paths\"\n    pathMatcher = function matchAll(domainIndex) {\n      for (var curPath in domainIndex) {\n        var pathIndex = domainIndex[curPath];\n        for (var key in pathIndex) {\n          results.push(pathIndex[key]);\n        }\n      }\n    };\n  } else {\n    pathMatcher = function matchRFC(domainIndex) {\n      //NOTE: we should use path-match algorithm from S5.1.4 here\n      //(see : https://github.com/ChromiumWebApps/chromium/blob/b3d3b4da8bb94c1b2e061600df106d590fda3620/net/cookies/canonical_cookie.cc#L299)\n      Object.keys(domainIndex).forEach(function (cookiePath) {\n        if (pathMatch(path, cookiePath)) {\n          var pathIndex = domainIndex[cookiePath];\n          for (var key in pathIndex) {\n            results.push(pathIndex[key]);\n          }\n        }\n      });\n    };\n  }\n  var domains = permuteDomain(domain) || [domain];\n  var idx = this.idx;\n  domains.forEach(function (curDomain) {\n    var domainIndex = idx[curDomain];\n    if (!domainIndex) {\n      return;\n    }\n    pathMatcher(domainIndex);\n  });\n  cb(null, results);\n};\nMemoryCookieStore.prototype.putCookie = function (cookie, cb) {\n  if (!this.idx[cookie.domain]) {\n    this.idx[cookie.domain] = {};\n  }\n  if (!this.idx[cookie.domain][cookie.path]) {\n    this.idx[cookie.domain][cookie.path] = {};\n  }\n  this.idx[cookie.domain][cookie.path][cookie.key] = cookie;\n  cb(null);\n};\nMemoryCookieStore.prototype.updateCookie = function (oldCookie, newCookie, cb) {\n  // updateCookie() may avoid updating cookies that are identical.  For example,\n  // lastAccessed may not be important to some stores and an equality\n  // comparison could exclude that field.\n  this.putCookie(newCookie, cb);\n};\nMemoryCookieStore.prototype.removeCookie = function (domain, path, key, cb) {\n  if (this.idx[domain] && this.idx[domain][path] && this.idx[domain][path][key]) {\n    delete this.idx[domain][path][key];\n  }\n  cb(null);\n};\nMemoryCookieStore.prototype.removeCookies = function (domain, path, cb) {\n  if (this.idx[domain]) {\n    if (path) {\n      delete this.idx[domain][path];\n    } else {\n      delete this.idx[domain];\n    }\n  }\n  return cb(null);\n};\nMemoryCookieStore.prototype.getAllCookies = function (cb) {\n  var cookies = [];\n  var idx = this.idx;\n  var domains = Object.keys(idx);\n  domains.forEach(function (domain) {\n    var paths = Object.keys(idx[domain]);\n    paths.forEach(function (path) {\n      var keys = Object.keys(idx[domain][path]);\n      keys.forEach(function (key) {\n        if (key !== null) {\n          cookies.push(idx[domain][path][key]);\n        }\n      });\n    });\n  });\n\n  // Sort by creationIndex so deserializing retains the creation order.\n  // When implementing your own store, this SHOULD retain the order too\n  cookies.sort(function (a, b) {\n    return (a.creationIndex || 0) - (b.creationIndex || 0);\n  });\n  cb(null, cookies);\n};","map":{"version":3,"names":["Store","require","permuteDomain","pathMatch","util","MemoryCookieStore","call","idx","inherits","exports","prototype","synchronous","inspect","findCookie","domain","path","key","cb","undefined","findCookies","results","pathMatcher","matchAll","domainIndex","curPath","pathIndex","push","matchRFC","Object","keys","forEach","cookiePath","domains","curDomain","putCookie","cookie","updateCookie","oldCookie","newCookie","removeCookie","removeCookies","getAllCookies","cookies","paths","sort","a","b","creationIndex"],"sources":["/Users/mohitgupta/Downloads/orgs/Clone/inst/node_modules/tough-cookie/lib/memstore.js"],"sourcesContent":["/*!\n * Copyright (c) 2015, Salesforce.com, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of Salesforce.com nor the names of its contributors may\n * be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n'use strict';\nvar Store = require('./store').Store;\nvar permuteDomain = require('./permuteDomain').permuteDomain;\nvar pathMatch = require('./pathMatch').pathMatch;\nvar util = require('util');\n\nfunction MemoryCookieStore() {\n  Store.call(this);\n  this.idx = {};\n}\nutil.inherits(MemoryCookieStore, Store);\nexports.MemoryCookieStore = MemoryCookieStore;\nMemoryCookieStore.prototype.idx = null;\n\n// Since it's just a struct in RAM, this Store is synchronous\nMemoryCookieStore.prototype.synchronous = true;\n\n// force a default depth:\nMemoryCookieStore.prototype.inspect = function() {\n  return \"{ idx: \"+util.inspect(this.idx, false, 2)+' }';\n};\n\nMemoryCookieStore.prototype.findCookie = function(domain, path, key, cb) {\n  if (!this.idx[domain]) {\n    return cb(null,undefined);\n  }\n  if (!this.idx[domain][path]) {\n    return cb(null,undefined);\n  }\n  return cb(null,this.idx[domain][path][key]||null);\n};\n\nMemoryCookieStore.prototype.findCookies = function(domain, path, cb) {\n  var results = [];\n  if (!domain) {\n    return cb(null,[]);\n  }\n\n  var pathMatcher;\n  if (!path) {\n    // null means \"all paths\"\n    pathMatcher = function matchAll(domainIndex) {\n      for (var curPath in domainIndex) {\n        var pathIndex = domainIndex[curPath];\n        for (var key in pathIndex) {\n          results.push(pathIndex[key]);\n        }\n      }\n    };\n\n  } else {\n    pathMatcher = function matchRFC(domainIndex) {\n       //NOTE: we should use path-match algorithm from S5.1.4 here\n       //(see : https://github.com/ChromiumWebApps/chromium/blob/b3d3b4da8bb94c1b2e061600df106d590fda3620/net/cookies/canonical_cookie.cc#L299)\n       Object.keys(domainIndex).forEach(function (cookiePath) {\n         if (pathMatch(path, cookiePath)) {\n           var pathIndex = domainIndex[cookiePath];\n\n           for (var key in pathIndex) {\n             results.push(pathIndex[key]);\n           }\n         }\n       });\n     };\n  }\n\n  var domains = permuteDomain(domain) || [domain];\n  var idx = this.idx;\n  domains.forEach(function(curDomain) {\n    var domainIndex = idx[curDomain];\n    if (!domainIndex) {\n      return;\n    }\n    pathMatcher(domainIndex);\n  });\n\n  cb(null,results);\n};\n\nMemoryCookieStore.prototype.putCookie = function(cookie, cb) {\n  if (!this.idx[cookie.domain]) {\n    this.idx[cookie.domain] = {};\n  }\n  if (!this.idx[cookie.domain][cookie.path]) {\n    this.idx[cookie.domain][cookie.path] = {};\n  }\n  this.idx[cookie.domain][cookie.path][cookie.key] = cookie;\n  cb(null);\n};\n\nMemoryCookieStore.prototype.updateCookie = function(oldCookie, newCookie, cb) {\n  // updateCookie() may avoid updating cookies that are identical.  For example,\n  // lastAccessed may not be important to some stores and an equality\n  // comparison could exclude that field.\n  this.putCookie(newCookie,cb);\n};\n\nMemoryCookieStore.prototype.removeCookie = function(domain, path, key, cb) {\n  if (this.idx[domain] && this.idx[domain][path] && this.idx[domain][path][key]) {\n    delete this.idx[domain][path][key];\n  }\n  cb(null);\n};\n\nMemoryCookieStore.prototype.removeCookies = function(domain, path, cb) {\n  if (this.idx[domain]) {\n    if (path) {\n      delete this.idx[domain][path];\n    } else {\n      delete this.idx[domain];\n    }\n  }\n  return cb(null);\n};\n\nMemoryCookieStore.prototype.getAllCookies = function(cb) {\n  var cookies = [];\n  var idx = this.idx;\n\n  var domains = Object.keys(idx);\n  domains.forEach(function(domain) {\n    var paths = Object.keys(idx[domain]);\n    paths.forEach(function(path) {\n      var keys = Object.keys(idx[domain][path]);\n      keys.forEach(function(key) {\n        if (key !== null) {\n          cookies.push(idx[domain][path][key]);\n        }\n      });\n    });\n  });\n\n  // Sort by creationIndex so deserializing retains the creation order.\n  // When implementing your own store, this SHOULD retain the order too\n  cookies.sort(function(a,b) {\n    return (a.creationIndex||0) - (b.creationIndex||0);\n  });\n\n  cb(null, cookies);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}