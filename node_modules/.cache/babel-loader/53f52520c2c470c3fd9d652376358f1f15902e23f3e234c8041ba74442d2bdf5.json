{"ast":null,"code":"// Copyright 2015 Joyent, Inc.\n\nvar assert = require('assert-plus');\nvar util = require('util');\nfunction FingerprintFormatError(fp, format) {\n  if (Error.captureStackTrace) Error.captureStackTrace(this, FingerprintFormatError);\n  this.name = 'FingerprintFormatError';\n  this.fingerprint = fp;\n  this.format = format;\n  this.message = 'Fingerprint format is not supported, or is invalid: ';\n  if (fp !== undefined) this.message += ' fingerprint = ' + fp;\n  if (format !== undefined) this.message += ' format = ' + format;\n}\nutil.inherits(FingerprintFormatError, Error);\nfunction InvalidAlgorithmError(alg) {\n  if (Error.captureStackTrace) Error.captureStackTrace(this, InvalidAlgorithmError);\n  this.name = 'InvalidAlgorithmError';\n  this.algorithm = alg;\n  this.message = 'Algorithm \"' + alg + '\" is not supported';\n}\nutil.inherits(InvalidAlgorithmError, Error);\nfunction KeyParseError(name, format, innerErr) {\n  if (Error.captureStackTrace) Error.captureStackTrace(this, KeyParseError);\n  this.name = 'KeyParseError';\n  this.format = format;\n  this.keyName = name;\n  this.innerErr = innerErr;\n  this.message = 'Failed to parse ' + name + ' as a valid ' + format + ' format key: ' + innerErr.message;\n}\nutil.inherits(KeyParseError, Error);\nfunction SignatureParseError(type, format, innerErr) {\n  if (Error.captureStackTrace) Error.captureStackTrace(this, SignatureParseError);\n  this.name = 'SignatureParseError';\n  this.type = type;\n  this.format = format;\n  this.innerErr = innerErr;\n  this.message = 'Failed to parse the given data as a ' + type + ' signature in ' + format + ' format: ' + innerErr.message;\n}\nutil.inherits(SignatureParseError, Error);\nfunction CertificateParseError(name, format, innerErr) {\n  if (Error.captureStackTrace) Error.captureStackTrace(this, CertificateParseError);\n  this.name = 'CertificateParseError';\n  this.format = format;\n  this.certName = name;\n  this.innerErr = innerErr;\n  this.message = 'Failed to parse ' + name + ' as a valid ' + format + ' format certificate: ' + innerErr.message;\n}\nutil.inherits(CertificateParseError, Error);\nfunction KeyEncryptedError(name, format) {\n  if (Error.captureStackTrace) Error.captureStackTrace(this, KeyEncryptedError);\n  this.name = 'KeyEncryptedError';\n  this.format = format;\n  this.keyName = name;\n  this.message = 'The ' + format + ' format key ' + name + ' is ' + 'encrypted (password-protected), and no passphrase was ' + 'provided in `options`';\n}\nutil.inherits(KeyEncryptedError, Error);\nmodule.exports = {\n  FingerprintFormatError: FingerprintFormatError,\n  InvalidAlgorithmError: InvalidAlgorithmError,\n  KeyParseError: KeyParseError,\n  SignatureParseError: SignatureParseError,\n  KeyEncryptedError: KeyEncryptedError,\n  CertificateParseError: CertificateParseError\n};","map":{"version":3,"names":["assert","require","util","FingerprintFormatError","fp","format","Error","captureStackTrace","name","fingerprint","message","undefined","inherits","InvalidAlgorithmError","alg","algorithm","KeyParseError","innerErr","keyName","SignatureParseError","type","CertificateParseError","certName","KeyEncryptedError","module","exports"],"sources":["/Users/mohitgupta/Downloads/orgs/Clone/inst/node_modules/sshpk/lib/errors.js"],"sourcesContent":["// Copyright 2015 Joyent, Inc.\n\nvar assert = require('assert-plus');\nvar util = require('util');\n\nfunction FingerprintFormatError(fp, format) {\n\tif (Error.captureStackTrace)\n\t\tError.captureStackTrace(this, FingerprintFormatError);\n\tthis.name = 'FingerprintFormatError';\n\tthis.fingerprint = fp;\n\tthis.format = format;\n\tthis.message = 'Fingerprint format is not supported, or is invalid: ';\n\tif (fp !== undefined)\n\t\tthis.message += ' fingerprint = ' + fp;\n\tif (format !== undefined)\n\t\tthis.message += ' format = ' + format;\n}\nutil.inherits(FingerprintFormatError, Error);\n\nfunction InvalidAlgorithmError(alg) {\n\tif (Error.captureStackTrace)\n\t\tError.captureStackTrace(this, InvalidAlgorithmError);\n\tthis.name = 'InvalidAlgorithmError';\n\tthis.algorithm = alg;\n\tthis.message = 'Algorithm \"' + alg + '\" is not supported';\n}\nutil.inherits(InvalidAlgorithmError, Error);\n\nfunction KeyParseError(name, format, innerErr) {\n\tif (Error.captureStackTrace)\n\t\tError.captureStackTrace(this, KeyParseError);\n\tthis.name = 'KeyParseError';\n\tthis.format = format;\n\tthis.keyName = name;\n\tthis.innerErr = innerErr;\n\tthis.message = 'Failed to parse ' + name + ' as a valid ' + format +\n\t    ' format key: ' + innerErr.message;\n}\nutil.inherits(KeyParseError, Error);\n\nfunction SignatureParseError(type, format, innerErr) {\n\tif (Error.captureStackTrace)\n\t\tError.captureStackTrace(this, SignatureParseError);\n\tthis.name = 'SignatureParseError';\n\tthis.type = type;\n\tthis.format = format;\n\tthis.innerErr = innerErr;\n\tthis.message = 'Failed to parse the given data as a ' + type +\n\t    ' signature in ' + format + ' format: ' + innerErr.message;\n}\nutil.inherits(SignatureParseError, Error);\n\nfunction CertificateParseError(name, format, innerErr) {\n\tif (Error.captureStackTrace)\n\t\tError.captureStackTrace(this, CertificateParseError);\n\tthis.name = 'CertificateParseError';\n\tthis.format = format;\n\tthis.certName = name;\n\tthis.innerErr = innerErr;\n\tthis.message = 'Failed to parse ' + name + ' as a valid ' + format +\n\t    ' format certificate: ' + innerErr.message;\n}\nutil.inherits(CertificateParseError, Error);\n\nfunction KeyEncryptedError(name, format) {\n\tif (Error.captureStackTrace)\n\t\tError.captureStackTrace(this, KeyEncryptedError);\n\tthis.name = 'KeyEncryptedError';\n\tthis.format = format;\n\tthis.keyName = name;\n\tthis.message = 'The ' + format + ' format key ' + name + ' is ' +\n\t    'encrypted (password-protected), and no passphrase was ' +\n\t    'provided in `options`';\n}\nutil.inherits(KeyEncryptedError, Error);\n\nmodule.exports = {\n\tFingerprintFormatError: FingerprintFormatError,\n\tInvalidAlgorithmError: InvalidAlgorithmError,\n\tKeyParseError: KeyParseError,\n\tSignatureParseError: SignatureParseError,\n\tKeyEncryptedError: KeyEncryptedError,\n\tCertificateParseError: CertificateParseError\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}