{"ast":null,"code":"'use strict';\n\nvar IDENTIFIER = /^[a-z_$][a-z0-9_$-]*$/i;\nvar customRuleCode = require('./dotjs/custom');\nmodule.exports = {\n  add: addKeyword,\n  get: getKeyword,\n  remove: removeKeyword\n};\n\n/**\n * Define custom keyword\n * @this  Ajv\n * @param {String} keyword custom keyword, should be unique (including different from all standard, custom and macro keywords).\n * @param {Object} definition keyword definition object with properties `type` (type(s) which the keyword applies to), `validate` or `compile`.\n * @return {Ajv} this for method chaining\n */\nfunction addKeyword(keyword, definition) {\n  /* jshint validthis: true */\n  /* eslint no-shadow: 0 */\n  var RULES = this.RULES;\n  if (RULES.keywords[keyword]) throw new Error('Keyword ' + keyword + ' is already defined');\n  if (!IDENTIFIER.test(keyword)) throw new Error('Keyword ' + keyword + ' is not a valid identifier');\n  if (definition) {\n    if (definition.macro && definition.valid !== undefined) throw new Error('\"valid\" option cannot be used with macro keywords');\n    var dataType = definition.type;\n    if (Array.isArray(dataType)) {\n      var i,\n        len = dataType.length;\n      for (i = 0; i < len; i++) checkDataType(dataType[i]);\n      for (i = 0; i < len; i++) _addRule(keyword, dataType[i], definition);\n    } else {\n      if (dataType) checkDataType(dataType);\n      _addRule(keyword, dataType, definition);\n    }\n    var $data = definition.$data === true && this._opts.$data;\n    if ($data && !definition.validate) throw new Error('$data support: \"validate\" function is not defined');\n    var metaSchema = definition.metaSchema;\n    if (metaSchema) {\n      if ($data) {\n        metaSchema = {\n          anyOf: [metaSchema, {\n            '$ref': 'https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/$data.json#'\n          }]\n        };\n      }\n      definition.validateSchema = this.compile(metaSchema, true);\n    }\n  }\n  RULES.keywords[keyword] = RULES.all[keyword] = true;\n  function _addRule(keyword, dataType, definition) {\n    var ruleGroup;\n    for (var i = 0; i < RULES.length; i++) {\n      var rg = RULES[i];\n      if (rg.type == dataType) {\n        ruleGroup = rg;\n        break;\n      }\n    }\n    if (!ruleGroup) {\n      ruleGroup = {\n        type: dataType,\n        rules: []\n      };\n      RULES.push(ruleGroup);\n    }\n    var rule = {\n      keyword: keyword,\n      definition: definition,\n      custom: true,\n      code: customRuleCode,\n      implements: definition.implements\n    };\n    ruleGroup.rules.push(rule);\n    RULES.custom[keyword] = rule;\n  }\n  function checkDataType(dataType) {\n    if (!RULES.types[dataType]) throw new Error('Unknown type ' + dataType);\n  }\n  return this;\n}\n\n/**\n * Get keyword\n * @this  Ajv\n * @param {String} keyword pre-defined or custom keyword.\n * @return {Object|Boolean} custom keyword definition, `true` if it is a predefined keyword, `false` otherwise.\n */\nfunction getKeyword(keyword) {\n  /* jshint validthis: true */\n  var rule = this.RULES.custom[keyword];\n  return rule ? rule.definition : this.RULES.keywords[keyword] || false;\n}\n\n/**\n * Remove keyword\n * @this  Ajv\n * @param {String} keyword pre-defined or custom keyword.\n * @return {Ajv} this for method chaining\n */\nfunction removeKeyword(keyword) {\n  /* jshint validthis: true */\n  var RULES = this.RULES;\n  delete RULES.keywords[keyword];\n  delete RULES.all[keyword];\n  delete RULES.custom[keyword];\n  for (var i = 0; i < RULES.length; i++) {\n    var rules = RULES[i].rules;\n    for (var j = 0; j < rules.length; j++) {\n      if (rules[j].keyword == keyword) {\n        rules.splice(j, 1);\n        break;\n      }\n    }\n  }\n  return this;\n}","map":{"version":3,"names":["IDENTIFIER","customRuleCode","require","module","exports","add","addKeyword","get","getKeyword","remove","removeKeyword","keyword","definition","RULES","keywords","Error","test","macro","valid","undefined","dataType","type","Array","isArray","i","len","length","checkDataType","_addRule","$data","_opts","validate","metaSchema","anyOf","validateSchema","compile","all","ruleGroup","rg","rules","push","rule","custom","code","implements","types","j","splice"],"sources":["/Users/mohitgupta/Downloads/orgs/Clone/inst/node_modules/har-validator/node_modules/ajv/lib/keyword.js"],"sourcesContent":["'use strict';\n\nvar IDENTIFIER = /^[a-z_$][a-z0-9_$-]*$/i;\nvar customRuleCode = require('./dotjs/custom');\n\nmodule.exports = {\n  add: addKeyword,\n  get: getKeyword,\n  remove: removeKeyword\n};\n\n/**\n * Define custom keyword\n * @this  Ajv\n * @param {String} keyword custom keyword, should be unique (including different from all standard, custom and macro keywords).\n * @param {Object} definition keyword definition object with properties `type` (type(s) which the keyword applies to), `validate` or `compile`.\n * @return {Ajv} this for method chaining\n */\nfunction addKeyword(keyword, definition) {\n  /* jshint validthis: true */\n  /* eslint no-shadow: 0 */\n  var RULES = this.RULES;\n\n  if (RULES.keywords[keyword])\n    throw new Error('Keyword ' + keyword + ' is already defined');\n\n  if (!IDENTIFIER.test(keyword))\n    throw new Error('Keyword ' + keyword + ' is not a valid identifier');\n\n  if (definition) {\n    if (definition.macro && definition.valid !== undefined)\n      throw new Error('\"valid\" option cannot be used with macro keywords');\n\n    var dataType = definition.type;\n    if (Array.isArray(dataType)) {\n      var i, len = dataType.length;\n      for (i=0; i<len; i++) checkDataType(dataType[i]);\n      for (i=0; i<len; i++) _addRule(keyword, dataType[i], definition);\n    } else {\n      if (dataType) checkDataType(dataType);\n      _addRule(keyword, dataType, definition);\n    }\n\n    var $data = definition.$data === true && this._opts.$data;\n    if ($data && !definition.validate)\n      throw new Error('$data support: \"validate\" function is not defined');\n\n    var metaSchema = definition.metaSchema;\n    if (metaSchema) {\n      if ($data) {\n        metaSchema = {\n          anyOf: [\n            metaSchema,\n            { '$ref': 'https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/$data.json#' }\n          ]\n        };\n      }\n      definition.validateSchema = this.compile(metaSchema, true);\n    }\n  }\n\n  RULES.keywords[keyword] = RULES.all[keyword] = true;\n\n\n  function _addRule(keyword, dataType, definition) {\n    var ruleGroup;\n    for (var i=0; i<RULES.length; i++) {\n      var rg = RULES[i];\n      if (rg.type == dataType) {\n        ruleGroup = rg;\n        break;\n      }\n    }\n\n    if (!ruleGroup) {\n      ruleGroup = { type: dataType, rules: [] };\n      RULES.push(ruleGroup);\n    }\n\n    var rule = {\n      keyword: keyword,\n      definition: definition,\n      custom: true,\n      code: customRuleCode,\n      implements: definition.implements\n    };\n    ruleGroup.rules.push(rule);\n    RULES.custom[keyword] = rule;\n  }\n\n\n  function checkDataType(dataType) {\n    if (!RULES.types[dataType]) throw new Error('Unknown type ' + dataType);\n  }\n\n  return this;\n}\n\n\n/**\n * Get keyword\n * @this  Ajv\n * @param {String} keyword pre-defined or custom keyword.\n * @return {Object|Boolean} custom keyword definition, `true` if it is a predefined keyword, `false` otherwise.\n */\nfunction getKeyword(keyword) {\n  /* jshint validthis: true */\n  var rule = this.RULES.custom[keyword];\n  return rule ? rule.definition : this.RULES.keywords[keyword] || false;\n}\n\n\n/**\n * Remove keyword\n * @this  Ajv\n * @param {String} keyword pre-defined or custom keyword.\n * @return {Ajv} this for method chaining\n */\nfunction removeKeyword(keyword) {\n  /* jshint validthis: true */\n  var RULES = this.RULES;\n  delete RULES.keywords[keyword];\n  delete RULES.all[keyword];\n  delete RULES.custom[keyword];\n  for (var i=0; i<RULES.length; i++) {\n    var rules = RULES[i].rules;\n    for (var j=0; j<rules.length; j++) {\n      if (rules[j].keyword == keyword) {\n        rules.splice(j, 1);\n        break;\n      }\n    }\n  }\n  return this;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}