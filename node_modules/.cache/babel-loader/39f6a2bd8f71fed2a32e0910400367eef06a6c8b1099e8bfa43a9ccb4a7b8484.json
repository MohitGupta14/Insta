{"ast":null,"code":"'use strict';\n\nmodule.exports = function generate_oneOf(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  out += 'var ' + $errs + ' = errors;var prevValid' + $lvl + ' = false;var ' + $valid + ' = false;';\n  var $currentBaseId = $it.baseId;\n  var $wasComposite = it.compositeRule;\n  it.compositeRule = $it.compositeRule = true;\n  var arr1 = $schema;\n  if (arr1) {\n    var $sch,\n      $i = -1,\n      l1 = arr1.length - 1;\n    while ($i < l1) {\n      $sch = arr1[$i += 1];\n      if (it.util.schemaHasRules($sch, it.RULES.all)) {\n        $it.schema = $sch;\n        $it.schemaPath = $schemaPath + '[' + $i + ']';\n        $it.errSchemaPath = $errSchemaPath + '/' + $i;\n        out += '  ' + it.validate($it) + ' ';\n        $it.baseId = $currentBaseId;\n      } else {\n        out += ' var ' + $nextValid + ' = true; ';\n      }\n      if ($i) {\n        out += ' if (' + $nextValid + ' && prevValid' + $lvl + ') ' + $valid + ' = false; else { ';\n        $closingBraces += '}';\n      }\n      out += ' if (' + $nextValid + ') ' + $valid + ' = prevValid' + $lvl + ' = true;';\n    }\n  }\n  it.compositeRule = $it.compositeRule = $wasComposite;\n  out += '' + $closingBraces + 'if (!' + $valid + ') {   var err =   '; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + 'oneOf' + '\\' , dataPath: (dataPath || \\'\\') + ' + it.errorPath + ' , schemaPath: ' + it.util.toQuotedString($errSchemaPath) + ' , params: {} ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should match exactly one schema in oneOf\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema: validate.schema' + $schemaPath + ' , parentSchema: validate.schema' + it.schemaPath + ' , data: ' + $data + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError(vErrors); ';\n    } else {\n      out += ' validate.errors = vErrors; return false; ';\n    }\n  }\n  out += '} else {  errors = ' + $errs + '; if (vErrors !== null) { if (' + $errs + ') vErrors.length = ' + $errs + '; else vErrors = null; }';\n  if (it.opts.allErrors) {\n    out += ' } ';\n  }\n  return out;\n};","map":{"version":3,"names":["module","exports","generate_oneOf","it","$keyword","$ruleType","out","$lvl","level","$dataLvl","dataLevel","$schema","schema","$schemaPath","schemaPath","util","getProperty","$errSchemaPath","errSchemaPath","$breakOnError","opts","allErrors","$data","$valid","$errs","$it","copy","$closingBraces","$nextValid","$currentBaseId","baseId","$wasComposite","compositeRule","arr1","$sch","$i","l1","length","schemaHasRules","RULES","all","validate","createErrors","errorPath","toQuotedString","messages","verbose","async"],"sources":["/Users/mohitgupta/Downloads/orgs/Clone/inst/node_modules/har-validator/node_modules/ajv/lib/dotjs/oneOf.js"],"sourcesContent":["'use strict';\nmodule.exports = function generate_oneOf(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  out += 'var ' + ($errs) + ' = errors;var prevValid' + ($lvl) + ' = false;var ' + ($valid) + ' = false;';\n  var $currentBaseId = $it.baseId;\n  var $wasComposite = it.compositeRule;\n  it.compositeRule = $it.compositeRule = true;\n  var arr1 = $schema;\n  if (arr1) {\n    var $sch, $i = -1,\n      l1 = arr1.length - 1;\n    while ($i < l1) {\n      $sch = arr1[$i += 1];\n      if (it.util.schemaHasRules($sch, it.RULES.all)) {\n        $it.schema = $sch;\n        $it.schemaPath = $schemaPath + '[' + $i + ']';\n        $it.errSchemaPath = $errSchemaPath + '/' + $i;\n        out += '  ' + (it.validate($it)) + ' ';\n        $it.baseId = $currentBaseId;\n      } else {\n        out += ' var ' + ($nextValid) + ' = true; ';\n      }\n      if ($i) {\n        out += ' if (' + ($nextValid) + ' && prevValid' + ($lvl) + ') ' + ($valid) + ' = false; else { ';\n        $closingBraces += '}';\n      }\n      out += ' if (' + ($nextValid) + ') ' + ($valid) + ' = prevValid' + ($lvl) + ' = true;';\n    }\n  }\n  it.compositeRule = $it.compositeRule = $wasComposite;\n  out += '' + ($closingBraces) + 'if (!' + ($valid) + ') {   var err =   '; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('oneOf') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should match exactly one schema in oneOf\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError(vErrors); ';\n    } else {\n      out += ' validate.errors = vErrors; return false; ';\n    }\n  }\n  out += '} else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; }';\n  if (it.opts.allErrors) {\n    out += ' } ';\n  }\n  return out;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}