{"ast":null,"code":"var aws4 = exports,\n  url = require('url'),\n  querystring = require('querystring'),\n  crypto = require('crypto'),\n  lru = require('./lru'),\n  credentialsCache = lru(1000);\n\n// http://docs.amazonwebservices.com/general/latest/gr/signature-version-4.html\n\nfunction hmac(key, string, encoding) {\n  return crypto.createHmac('sha256', key).update(string, 'utf8').digest(encoding);\n}\nfunction hash(string, encoding) {\n  return crypto.createHash('sha256').update(string, 'utf8').digest(encoding);\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase();\n  });\n}\nfunction encodeRfc3986Full(str) {\n  return encodeRfc3986(encodeURIComponent(str));\n}\n\n// A bit of a combination of:\n// https://github.com/aws/aws-sdk-java-v2/blob/dc695de6ab49ad03934e1b02e7263abbd2354be0/core/auth/src/main/java/software/amazon/awssdk/auth/signer/internal/AbstractAws4Signer.java#L59\n// https://github.com/aws/aws-sdk-js/blob/18cb7e5b463b46239f9fdd4a65e2ff8c81831e8f/lib/signers/v4.js#L191-L199\n// https://github.com/mhart/aws4fetch/blob/b3aed16b6f17384cf36ea33bcba3c1e9f3bdfefd/src/main.js#L25-L34\nvar HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true\n};\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\n// credentials: { accessKeyId, secretAccessKey, [sessionToken] }\nfunction RequestSigner(request, credentials) {\n  if (typeof request === 'string') request = url.parse(request);\n  var headers = request.headers = request.headers || {},\n    hostParts = (!this.service || !this.region) && this.matchHost(request.hostname || request.host || headers.Host || headers.host);\n  this.request = request;\n  this.credentials = credentials || this.defaultCredentials();\n  this.service = request.service || hostParts[0] || '';\n  this.region = request.region || hostParts[1] || 'us-east-1';\n\n  // SES uses a different domain from the service name\n  if (this.service === 'email') this.service = 'ses';\n  if (!request.method && request.body) request.method = 'POST';\n  if (!headers.Host && !headers.host) {\n    headers.Host = request.hostname || request.host || this.createHost();\n\n    // If a port is specified explicitly, use it as is\n    if (request.port) headers.Host += ':' + request.port;\n  }\n  if (!request.hostname && !request.host) request.hostname = headers.Host || headers.host;\n  this.isCodeCommitGit = this.service === 'codecommit' && request.method === 'GIT';\n  this.extraHeadersToIgnore = request.extraHeadersToIgnore || Object.create(null);\n  this.extraHeadersToInclude = request.extraHeadersToInclude || Object.create(null);\n}\nRequestSigner.prototype.matchHost = function (host) {\n  var match = (host || '').match(/([^\\.]+)\\.(?:([^\\.]*)\\.)?amazonaws\\.com(\\.cn)?$/);\n  var hostParts = (match || []).slice(1, 3);\n\n  // ES's hostParts are sometimes the other way round, if the value that is expected\n  // to be region equals ‘es’ switch them back\n  // e.g. search-cluster-name-aaaa00aaaa0aaa0aaaaaaa0aaa.us-east-1.es.amazonaws.com\n  if (hostParts[1] === 'es' || hostParts[1] === 'aoss') hostParts = hostParts.reverse();\n  if (hostParts[1] == 's3') {\n    hostParts[0] = 's3';\n    hostParts[1] = 'us-east-1';\n  } else {\n    for (var i = 0; i < 2; i++) {\n      if (/^s3-/.test(hostParts[i])) {\n        hostParts[1] = hostParts[i].slice(3);\n        hostParts[0] = 's3';\n        break;\n      }\n    }\n  }\n  return hostParts;\n};\n\n// http://docs.aws.amazon.com/general/latest/gr/rande.html\nRequestSigner.prototype.isSingleRegion = function () {\n  // Special case for S3 and SimpleDB in us-east-1\n  if (['s3', 'sdb'].indexOf(this.service) >= 0 && this.region === 'us-east-1') return true;\n  return ['cloudfront', 'ls', 'route53', 'iam', 'importexport', 'sts'].indexOf(this.service) >= 0;\n};\nRequestSigner.prototype.createHost = function () {\n  var region = this.isSingleRegion() ? '' : '.' + this.region,\n    subdomain = this.service === 'ses' ? 'email' : this.service;\n  return subdomain + region + '.amazonaws.com';\n};\nRequestSigner.prototype.prepareRequest = function () {\n  this.parsePath();\n  var request = this.request,\n    headers = request.headers,\n    query;\n  if (request.signQuery) {\n    this.parsedPath.query = query = this.parsedPath.query || {};\n    if (this.credentials.sessionToken) query['X-Amz-Security-Token'] = this.credentials.sessionToken;\n    if (this.service === 's3' && !query['X-Amz-Expires']) query['X-Amz-Expires'] = 86400;\n    if (query['X-Amz-Date']) this.datetime = query['X-Amz-Date'];else query['X-Amz-Date'] = this.getDateTime();\n    query['X-Amz-Algorithm'] = 'AWS4-HMAC-SHA256';\n    query['X-Amz-Credential'] = this.credentials.accessKeyId + '/' + this.credentialString();\n    query['X-Amz-SignedHeaders'] = this.signedHeaders();\n  } else {\n    if (!request.doNotModifyHeaders && !this.isCodeCommitGit) {\n      if (request.body && !headers['Content-Type'] && !headers['content-type']) headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n      if (request.body && !headers['Content-Length'] && !headers['content-length']) headers['Content-Length'] = Buffer.byteLength(request.body);\n      if (this.credentials.sessionToken && !headers['X-Amz-Security-Token'] && !headers['x-amz-security-token']) headers['X-Amz-Security-Token'] = this.credentials.sessionToken;\n      if (this.service === 's3' && !headers['X-Amz-Content-Sha256'] && !headers['x-amz-content-sha256']) headers['X-Amz-Content-Sha256'] = hash(this.request.body || '', 'hex');\n      if (headers['X-Amz-Date'] || headers['x-amz-date']) this.datetime = headers['X-Amz-Date'] || headers['x-amz-date'];else headers['X-Amz-Date'] = this.getDateTime();\n    }\n    delete headers.Authorization;\n    delete headers.authorization;\n  }\n};\nRequestSigner.prototype.sign = function () {\n  if (!this.parsedPath) this.prepareRequest();\n  if (this.request.signQuery) {\n    this.parsedPath.query['X-Amz-Signature'] = this.signature();\n  } else {\n    this.request.headers.Authorization = this.authHeader();\n  }\n  this.request.path = this.formatPath();\n  return this.request;\n};\nRequestSigner.prototype.getDateTime = function () {\n  if (!this.datetime) {\n    var headers = this.request.headers,\n      date = new Date(headers.Date || headers.date || new Date());\n    this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n\n    // Remove the trailing 'Z' on the timestamp string for CodeCommit git access\n    if (this.isCodeCommitGit) this.datetime = this.datetime.slice(0, -1);\n  }\n  return this.datetime;\n};\nRequestSigner.prototype.getDate = function () {\n  return this.getDateTime().substr(0, 8);\n};\nRequestSigner.prototype.authHeader = function () {\n  return ['AWS4-HMAC-SHA256 Credential=' + this.credentials.accessKeyId + '/' + this.credentialString(), 'SignedHeaders=' + this.signedHeaders(), 'Signature=' + this.signature()].join(', ');\n};\nRequestSigner.prototype.signature = function () {\n  var date = this.getDate(),\n    cacheKey = [this.credentials.secretAccessKey, date, this.region, this.service].join(),\n    kDate,\n    kRegion,\n    kService,\n    kCredentials = credentialsCache.get(cacheKey);\n  if (!kCredentials) {\n    kDate = hmac('AWS4' + this.credentials.secretAccessKey, date);\n    kRegion = hmac(kDate, this.region);\n    kService = hmac(kRegion, this.service);\n    kCredentials = hmac(kService, 'aws4_request');\n    credentialsCache.set(cacheKey, kCredentials);\n  }\n  return hmac(kCredentials, this.stringToSign(), 'hex');\n};\nRequestSigner.prototype.stringToSign = function () {\n  return ['AWS4-HMAC-SHA256', this.getDateTime(), this.credentialString(), hash(this.canonicalString(), 'hex')].join('\\n');\n};\nRequestSigner.prototype.canonicalString = function () {\n  if (!this.parsedPath) this.prepareRequest();\n  var pathStr = this.parsedPath.path,\n    query = this.parsedPath.query,\n    headers = this.request.headers,\n    queryStr = '',\n    normalizePath = this.service !== 's3',\n    decodePath = this.service === 's3' || this.request.doNotEncodePath,\n    decodeSlashesInPath = this.service === 's3',\n    firstValOnly = this.service === 's3',\n    bodyHash;\n  if (this.service === 's3' && this.request.signQuery) {\n    bodyHash = 'UNSIGNED-PAYLOAD';\n  } else if (this.isCodeCommitGit) {\n    bodyHash = '';\n  } else {\n    bodyHash = headers['X-Amz-Content-Sha256'] || headers['x-amz-content-sha256'] || hash(this.request.body || '', 'hex');\n  }\n  if (query) {\n    var reducedQuery = Object.keys(query).reduce(function (obj, key) {\n      if (!key) return obj;\n      obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] : firstValOnly ? query[key][0] : query[key];\n      return obj;\n    }, {});\n    var encodedQueryPieces = [];\n    Object.keys(reducedQuery).sort().forEach(function (key) {\n      if (!Array.isArray(reducedQuery[key])) {\n        encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n      } else {\n        reducedQuery[key].map(encodeRfc3986Full).sort().forEach(function (val) {\n          encodedQueryPieces.push(key + '=' + val);\n        });\n      }\n    });\n    queryStr = encodedQueryPieces.join('&');\n  }\n  if (pathStr !== '/') {\n    if (normalizePath) pathStr = pathStr.replace(/\\/{2,}/g, '/');\n    pathStr = pathStr.split('/').reduce(function (path, piece) {\n      if (normalizePath && piece === '..') {\n        path.pop();\n      } else if (!normalizePath || piece !== '.') {\n        if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\n        path.push(encodeRfc3986Full(piece));\n      }\n      return path;\n    }, []).join('/');\n    if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n    if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n  }\n  return [this.request.method || 'GET', pathStr, queryStr, this.canonicalHeaders() + '\\n', this.signedHeaders(), bodyHash].join('\\n');\n};\nRequestSigner.prototype.canonicalHeaders = function () {\n  var headers = this.request.headers;\n  function trimAll(header) {\n    return header.toString().trim().replace(/\\s+/g, ' ');\n  }\n  return Object.keys(headers).filter(function (key) {\n    return HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n  }).sort(function (a, b) {\n    return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n  }).map(function (key) {\n    return key.toLowerCase() + ':' + trimAll(headers[key]);\n  }).join('\\n');\n};\nRequestSigner.prototype.signedHeaders = function () {\n  var extraHeadersToInclude = this.extraHeadersToInclude,\n    extraHeadersToIgnore = this.extraHeadersToIgnore;\n  return Object.keys(this.request.headers).map(function (key) {\n    return key.toLowerCase();\n  }).filter(function (key) {\n    return extraHeadersToInclude[key] || HEADERS_TO_IGNORE[key] == null && !extraHeadersToIgnore[key];\n  }).sort().join(';');\n};\nRequestSigner.prototype.credentialString = function () {\n  return [this.getDate(), this.region, this.service, 'aws4_request'].join('/');\n};\nRequestSigner.prototype.defaultCredentials = function () {\n  var env = process.env;\n  return {\n    accessKeyId: env.AWS_ACCESS_KEY_ID || env.AWS_ACCESS_KEY,\n    secretAccessKey: env.AWS_SECRET_ACCESS_KEY || env.AWS_SECRET_KEY,\n    sessionToken: env.AWS_SESSION_TOKEN\n  };\n};\nRequestSigner.prototype.parsePath = function () {\n  var path = this.request.path || '/';\n\n  // S3 doesn't always encode characters > 127 correctly and\n  // all services don't encode characters > 255 correctly\n  // So if there are non-reserved chars (and it's not already all % encoded), just encode them all\n  if (/[^0-9A-Za-z;,/?:@&=+$\\-_.!~*'()#%]/.test(path)) {\n    path = encodeURI(decodeURI(path));\n  }\n  var queryIx = path.indexOf('?'),\n    query = null;\n  if (queryIx >= 0) {\n    query = querystring.parse(path.slice(queryIx + 1));\n    path = path.slice(0, queryIx);\n  }\n  this.parsedPath = {\n    path: path,\n    query: query\n  };\n};\nRequestSigner.prototype.formatPath = function () {\n  var path = this.parsedPath.path,\n    query = this.parsedPath.query;\n  if (!query) return path;\n\n  // Services don't support empty query string keys\n  if (query[''] != null) delete query[''];\n  return path + '?' + encodeRfc3986(querystring.stringify(query));\n};\naws4.RequestSigner = RequestSigner;\naws4.sign = function (request, credentials) {\n  return new RequestSigner(request, credentials).sign();\n};","map":{"version":3,"names":["aws4","exports","url","require","querystring","crypto","lru","credentialsCache","hmac","key","string","encoding","createHmac","update","digest","hash","createHash","encodeRfc3986","urlEncodedString","replace","c","charCodeAt","toString","toUpperCase","encodeRfc3986Full","str","encodeURIComponent","HEADERS_TO_IGNORE","RequestSigner","request","credentials","parse","headers","hostParts","service","region","matchHost","hostname","host","Host","defaultCredentials","method","body","createHost","port","isCodeCommitGit","extraHeadersToIgnore","Object","create","extraHeadersToInclude","prototype","match","slice","reverse","i","test","isSingleRegion","indexOf","subdomain","prepareRequest","parsePath","query","signQuery","parsedPath","sessionToken","datetime","getDateTime","accessKeyId","credentialString","signedHeaders","doNotModifyHeaders","Buffer","byteLength","Authorization","authorization","sign","signature","authHeader","path","formatPath","date","Date","toISOString","getDate","substr","join","cacheKey","secretAccessKey","kDate","kRegion","kService","kCredentials","get","set","stringToSign","canonicalString","pathStr","queryStr","normalizePath","decodePath","doNotEncodePath","decodeSlashesInPath","firstValOnly","bodyHash","reducedQuery","keys","reduce","obj","Array","isArray","encodedQueryPieces","sort","forEach","push","map","val","split","piece","pop","decodeURIComponent","canonicalHeaders","trimAll","header","trim","filter","toLowerCase","a","b","env","process","AWS_ACCESS_KEY_ID","AWS_ACCESS_KEY","AWS_SECRET_ACCESS_KEY","AWS_SECRET_KEY","AWS_SESSION_TOKEN","encodeURI","decodeURI","queryIx","stringify"],"sources":["/Users/mohitgupta/Downloads/orgs/Clone/inst/node_modules/aws4/aws4.js"],"sourcesContent":["var aws4 = exports,\n    url = require('url'),\n    querystring = require('querystring'),\n    crypto = require('crypto'),\n    lru = require('./lru'),\n    credentialsCache = lru(1000)\n\n// http://docs.amazonwebservices.com/general/latest/gr/signature-version-4.html\n\nfunction hmac(key, string, encoding) {\n  return crypto.createHmac('sha256', key).update(string, 'utf8').digest(encoding)\n}\n\nfunction hash(string, encoding) {\n  return crypto.createHash('sha256').update(string, 'utf8').digest(encoding)\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function(c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\nfunction encodeRfc3986Full(str) {\n  return encodeRfc3986(encodeURIComponent(str))\n}\n\n// A bit of a combination of:\n// https://github.com/aws/aws-sdk-java-v2/blob/dc695de6ab49ad03934e1b02e7263abbd2354be0/core/auth/src/main/java/software/amazon/awssdk/auth/signer/internal/AbstractAws4Signer.java#L59\n// https://github.com/aws/aws-sdk-js/blob/18cb7e5b463b46239f9fdd4a65e2ff8c81831e8f/lib/signers/v4.js#L191-L199\n// https://github.com/mhart/aws4fetch/blob/b3aed16b6f17384cf36ea33bcba3c1e9f3bdfefd/src/main.js#L25-L34\nvar HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n}\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\n// credentials: { accessKeyId, secretAccessKey, [sessionToken] }\nfunction RequestSigner(request, credentials) {\n\n  if (typeof request === 'string') request = url.parse(request)\n\n  var headers = request.headers = (request.headers || {}),\n      hostParts = (!this.service || !this.region) && this.matchHost(request.hostname || request.host || headers.Host || headers.host)\n\n  this.request = request\n  this.credentials = credentials || this.defaultCredentials()\n\n  this.service = request.service || hostParts[0] || ''\n  this.region = request.region || hostParts[1] || 'us-east-1'\n\n  // SES uses a different domain from the service name\n  if (this.service === 'email') this.service = 'ses'\n\n  if (!request.method && request.body)\n    request.method = 'POST'\n\n  if (!headers.Host && !headers.host) {\n    headers.Host = request.hostname || request.host || this.createHost()\n\n    // If a port is specified explicitly, use it as is\n    if (request.port)\n      headers.Host += ':' + request.port\n  }\n  if (!request.hostname && !request.host)\n    request.hostname = headers.Host || headers.host\n\n  this.isCodeCommitGit = this.service === 'codecommit' && request.method === 'GIT'\n\n  this.extraHeadersToIgnore = request.extraHeadersToIgnore || Object.create(null)\n  this.extraHeadersToInclude = request.extraHeadersToInclude || Object.create(null)\n}\n\nRequestSigner.prototype.matchHost = function(host) {\n  var match = (host || '').match(/([^\\.]+)\\.(?:([^\\.]*)\\.)?amazonaws\\.com(\\.cn)?$/)\n  var hostParts = (match || []).slice(1, 3)\n\n  // ES's hostParts are sometimes the other way round, if the value that is expected\n  // to be region equals ‘es’ switch them back\n  // e.g. search-cluster-name-aaaa00aaaa0aaa0aaaaaaa0aaa.us-east-1.es.amazonaws.com\n  if (hostParts[1] === 'es' || hostParts[1] === 'aoss')\n    hostParts = hostParts.reverse()\n\n  if (hostParts[1] == 's3') {\n    hostParts[0] = 's3'\n    hostParts[1] = 'us-east-1'\n  } else {\n    for (var i = 0; i < 2; i++) {\n      if (/^s3-/.test(hostParts[i])) {\n        hostParts[1] = hostParts[i].slice(3)\n        hostParts[0] = 's3'\n        break\n      }\n    }\n  }\n\n  return hostParts\n}\n\n// http://docs.aws.amazon.com/general/latest/gr/rande.html\nRequestSigner.prototype.isSingleRegion = function() {\n  // Special case for S3 and SimpleDB in us-east-1\n  if (['s3', 'sdb'].indexOf(this.service) >= 0 && this.region === 'us-east-1') return true\n\n  return ['cloudfront', 'ls', 'route53', 'iam', 'importexport', 'sts']\n    .indexOf(this.service) >= 0\n}\n\nRequestSigner.prototype.createHost = function() {\n  var region = this.isSingleRegion() ? '' : '.' + this.region,\n      subdomain = this.service === 'ses' ? 'email' : this.service\n  return subdomain + region + '.amazonaws.com'\n}\n\nRequestSigner.prototype.prepareRequest = function() {\n  this.parsePath()\n\n  var request = this.request, headers = request.headers, query\n\n  if (request.signQuery) {\n\n    this.parsedPath.query = query = this.parsedPath.query || {}\n\n    if (this.credentials.sessionToken)\n      query['X-Amz-Security-Token'] = this.credentials.sessionToken\n\n    if (this.service === 's3' && !query['X-Amz-Expires'])\n      query['X-Amz-Expires'] = 86400\n\n    if (query['X-Amz-Date'])\n      this.datetime = query['X-Amz-Date']\n    else\n      query['X-Amz-Date'] = this.getDateTime()\n\n    query['X-Amz-Algorithm'] = 'AWS4-HMAC-SHA256'\n    query['X-Amz-Credential'] = this.credentials.accessKeyId + '/' + this.credentialString()\n    query['X-Amz-SignedHeaders'] = this.signedHeaders()\n\n  } else {\n\n    if (!request.doNotModifyHeaders && !this.isCodeCommitGit) {\n      if (request.body && !headers['Content-Type'] && !headers['content-type'])\n        headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8'\n\n      if (request.body && !headers['Content-Length'] && !headers['content-length'])\n        headers['Content-Length'] = Buffer.byteLength(request.body)\n\n      if (this.credentials.sessionToken && !headers['X-Amz-Security-Token'] && !headers['x-amz-security-token'])\n        headers['X-Amz-Security-Token'] = this.credentials.sessionToken\n\n      if (this.service === 's3' && !headers['X-Amz-Content-Sha256'] && !headers['x-amz-content-sha256'])\n        headers['X-Amz-Content-Sha256'] = hash(this.request.body || '', 'hex')\n\n      if (headers['X-Amz-Date'] || headers['x-amz-date'])\n        this.datetime = headers['X-Amz-Date'] || headers['x-amz-date']\n      else\n        headers['X-Amz-Date'] = this.getDateTime()\n    }\n\n    delete headers.Authorization\n    delete headers.authorization\n  }\n}\n\nRequestSigner.prototype.sign = function() {\n  if (!this.parsedPath) this.prepareRequest()\n\n  if (this.request.signQuery) {\n    this.parsedPath.query['X-Amz-Signature'] = this.signature()\n  } else {\n    this.request.headers.Authorization = this.authHeader()\n  }\n\n  this.request.path = this.formatPath()\n\n  return this.request\n}\n\nRequestSigner.prototype.getDateTime = function() {\n  if (!this.datetime) {\n    var headers = this.request.headers,\n      date = new Date(headers.Date || headers.date || new Date)\n\n    this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '')\n\n    // Remove the trailing 'Z' on the timestamp string for CodeCommit git access\n    if (this.isCodeCommitGit) this.datetime = this.datetime.slice(0, -1)\n  }\n  return this.datetime\n}\n\nRequestSigner.prototype.getDate = function() {\n  return this.getDateTime().substr(0, 8)\n}\n\nRequestSigner.prototype.authHeader = function() {\n  return [\n    'AWS4-HMAC-SHA256 Credential=' + this.credentials.accessKeyId + '/' + this.credentialString(),\n    'SignedHeaders=' + this.signedHeaders(),\n    'Signature=' + this.signature(),\n  ].join(', ')\n}\n\nRequestSigner.prototype.signature = function() {\n  var date = this.getDate(),\n      cacheKey = [this.credentials.secretAccessKey, date, this.region, this.service].join(),\n      kDate, kRegion, kService, kCredentials = credentialsCache.get(cacheKey)\n  if (!kCredentials) {\n    kDate = hmac('AWS4' + this.credentials.secretAccessKey, date)\n    kRegion = hmac(kDate, this.region)\n    kService = hmac(kRegion, this.service)\n    kCredentials = hmac(kService, 'aws4_request')\n    credentialsCache.set(cacheKey, kCredentials)\n  }\n  return hmac(kCredentials, this.stringToSign(), 'hex')\n}\n\nRequestSigner.prototype.stringToSign = function() {\n  return [\n    'AWS4-HMAC-SHA256',\n    this.getDateTime(),\n    this.credentialString(),\n    hash(this.canonicalString(), 'hex'),\n  ].join('\\n')\n}\n\nRequestSigner.prototype.canonicalString = function() {\n  if (!this.parsedPath) this.prepareRequest()\n\n  var pathStr = this.parsedPath.path,\n      query = this.parsedPath.query,\n      headers = this.request.headers,\n      queryStr = '',\n      normalizePath = this.service !== 's3',\n      decodePath = this.service === 's3' || this.request.doNotEncodePath,\n      decodeSlashesInPath = this.service === 's3',\n      firstValOnly = this.service === 's3',\n      bodyHash\n\n  if (this.service === 's3' && this.request.signQuery) {\n    bodyHash = 'UNSIGNED-PAYLOAD'\n  } else if (this.isCodeCommitGit) {\n    bodyHash = ''\n  } else {\n    bodyHash = headers['X-Amz-Content-Sha256'] || headers['x-amz-content-sha256'] ||\n      hash(this.request.body || '', 'hex')\n  }\n\n  if (query) {\n    var reducedQuery = Object.keys(query).reduce(function(obj, key) {\n      if (!key) return obj\n      obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n        (firstValOnly ? query[key][0] : query[key])\n      return obj\n    }, {})\n    var encodedQueryPieces = []\n    Object.keys(reducedQuery).sort().forEach(function(key) {\n      if (!Array.isArray(reducedQuery[key])) {\n        encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]))\n      } else {\n        reducedQuery[key].map(encodeRfc3986Full).sort()\n          .forEach(function(val) { encodedQueryPieces.push(key + '=' + val) })\n      }\n    })\n    queryStr = encodedQueryPieces.join('&')\n  }\n  if (pathStr !== '/') {\n    if (normalizePath) pathStr = pathStr.replace(/\\/{2,}/g, '/')\n    pathStr = pathStr.split('/').reduce(function(path, piece) {\n      if (normalizePath && piece === '..') {\n        path.pop()\n      } else if (!normalizePath || piece !== '.') {\n        if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n        path.push(encodeRfc3986Full(piece))\n      }\n      return path\n    }, []).join('/')\n    if (pathStr[0] !== '/') pathStr = '/' + pathStr\n    if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/')\n  }\n\n  return [\n    this.request.method || 'GET',\n    pathStr,\n    queryStr,\n    this.canonicalHeaders() + '\\n',\n    this.signedHeaders(),\n    bodyHash,\n  ].join('\\n')\n}\n\nRequestSigner.prototype.canonicalHeaders = function() {\n  var headers = this.request.headers\n  function trimAll(header) {\n    return header.toString().trim().replace(/\\s+/g, ' ')\n  }\n  return Object.keys(headers)\n    .filter(function(key) { return HEADERS_TO_IGNORE[key.toLowerCase()] == null })\n    .sort(function(a, b) { return a.toLowerCase() < b.toLowerCase() ? -1 : 1 })\n    .map(function(key) { return key.toLowerCase() + ':' + trimAll(headers[key]) })\n    .join('\\n')\n}\n\nRequestSigner.prototype.signedHeaders = function() {\n  var extraHeadersToInclude = this.extraHeadersToInclude,\n      extraHeadersToIgnore = this.extraHeadersToIgnore\n  return Object.keys(this.request.headers)\n    .map(function(key) { return key.toLowerCase() })\n    .filter(function(key) {\n      return extraHeadersToInclude[key] ||\n        (HEADERS_TO_IGNORE[key] == null && !extraHeadersToIgnore[key])\n    })\n    .sort()\n    .join(';')\n}\n\nRequestSigner.prototype.credentialString = function() {\n  return [\n    this.getDate(),\n    this.region,\n    this.service,\n    'aws4_request',\n  ].join('/')\n}\n\nRequestSigner.prototype.defaultCredentials = function() {\n  var env = process.env\n  return {\n    accessKeyId: env.AWS_ACCESS_KEY_ID || env.AWS_ACCESS_KEY,\n    secretAccessKey: env.AWS_SECRET_ACCESS_KEY || env.AWS_SECRET_KEY,\n    sessionToken: env.AWS_SESSION_TOKEN,\n  }\n}\n\nRequestSigner.prototype.parsePath = function() {\n  var path = this.request.path || '/'\n\n  // S3 doesn't always encode characters > 127 correctly and\n  // all services don't encode characters > 255 correctly\n  // So if there are non-reserved chars (and it's not already all % encoded), just encode them all\n  if (/[^0-9A-Za-z;,/?:@&=+$\\-_.!~*'()#%]/.test(path)) {\n    path = encodeURI(decodeURI(path))\n  }\n\n  var queryIx = path.indexOf('?'),\n      query = null\n\n  if (queryIx >= 0) {\n    query = querystring.parse(path.slice(queryIx + 1))\n    path = path.slice(0, queryIx)\n  }\n\n  this.parsedPath = {\n    path: path,\n    query: query,\n  }\n}\n\nRequestSigner.prototype.formatPath = function() {\n  var path = this.parsedPath.path,\n      query = this.parsedPath.query\n\n  if (!query) return path\n\n  // Services don't support empty query string keys\n  if (query[''] != null) delete query['']\n\n  return path + '?' + encodeRfc3986(querystring.stringify(query))\n}\n\naws4.RequestSigner = RequestSigner\n\naws4.sign = function(request, credentials) {\n  return new RequestSigner(request, credentials).sign()\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}